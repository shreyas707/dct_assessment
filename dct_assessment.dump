--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.7
-- Dumped by pg_dump version 9.5.7

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: answers; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE answers (
    id integer NOT NULL,
    statement text,
    question_id integer,
    user_id integer,
    batch_set_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    remark_id integer,
    is_correct character varying,
    score double precision
);


ALTER TABLE answers OWNER TO shreyas;

--
-- Name: answers_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE answers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE answers_id_seq OWNER TO shreyas;

--
-- Name: answers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE answers_id_seq OWNED BY answers.id;


--
-- Name: batch_events; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE batch_events (
    id integer NOT NULL,
    batch_id integer,
    event_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE batch_events OWNER TO shreyas;

--
-- Name: batch_events_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE batch_events_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE batch_events_id_seq OWNER TO shreyas;

--
-- Name: batch_events_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE batch_events_id_seq OWNED BY batch_events.id;


--
-- Name: batch_set_chapter_topics; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE batch_set_chapter_topics (
    id integer NOT NULL,
    batch_set_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    chapter_id integer,
    topic_id integer
);


ALTER TABLE batch_set_chapter_topics OWNER TO shreyas;

--
-- Name: batch_set_chapter_topics_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE batch_set_chapter_topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE batch_set_chapter_topics_id_seq OWNER TO shreyas;

--
-- Name: batch_set_chapter_topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE batch_set_chapter_topics_id_seq OWNED BY batch_set_chapter_topics.id;


--
-- Name: batch_set_questions; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE batch_set_questions (
    id integer NOT NULL,
    batch_set_id integer,
    question_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE batch_set_questions OWNER TO shreyas;

--
-- Name: batch_set_questions_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE batch_set_questions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE batch_set_questions_id_seq OWNER TO shreyas;

--
-- Name: batch_set_questions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE batch_set_questions_id_seq OWNED BY batch_set_questions.id;


--
-- Name: batch_sets; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE batch_sets (
    id integer NOT NULL,
    set_date date,
    batch_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    title character varying,
    kind character varying,
    due_date timestamp without time zone
);


ALTER TABLE batch_sets OWNER TO shreyas;

--
-- Name: batch_sets_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE batch_sets_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE batch_sets_id_seq OWNER TO shreyas;

--
-- Name: batch_sets_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE batch_sets_id_seq OWNED BY batch_sets.id;


--
-- Name: batch_students; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE batch_students (
    id integer NOT NULL,
    batch_id integer,
    student_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE batch_students OWNER TO shreyas;

--
-- Name: batch_students_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE batch_students_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE batch_students_id_seq OWNER TO shreyas;

--
-- Name: batch_students_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE batch_students_id_seq OWNED BY batch_students.id;


--
-- Name: batches; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE batches (
    id integer NOT NULL,
    title character varying,
    start_date date,
    end_date date,
    course_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    complete boolean DEFAULT false
);


ALTER TABLE batches OWNER TO shreyas;

--
-- Name: batches_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE batches_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE batches_id_seq OWNER TO shreyas;

--
-- Name: batches_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE batches_id_seq OWNED BY batches.id;


--
-- Name: chapter_topics; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE chapter_topics (
    id integer NOT NULL,
    chapter_id integer,
    topic_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE chapter_topics OWNER TO shreyas;

--
-- Name: chapter_topics_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE chapter_topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE chapter_topics_id_seq OWNER TO shreyas;

--
-- Name: chapter_topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE chapter_topics_id_seq OWNED BY chapter_topics.id;


--
-- Name: chapters; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE chapters (
    id integer NOT NULL,
    name character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    short_name character varying
);


ALTER TABLE chapters OWNER TO shreyas;

--
-- Name: chapters_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE chapters_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE chapters_id_seq OWNER TO shreyas;

--
-- Name: chapters_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE chapters_id_seq OWNED BY chapters.id;


--
-- Name: comments; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE comments (
    id integer NOT NULL,
    statement character varying,
    user_id integer,
    answer_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE comments OWNER TO shreyas;

--
-- Name: comments_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE comments_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE comments_id_seq OWNER TO shreyas;

--
-- Name: comments_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE comments_id_seq OWNED BY comments.id;


--
-- Name: course_topics; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE course_topics (
    id integer NOT NULL,
    topic_id integer,
    course_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE course_topics OWNER TO shreyas;

--
-- Name: course_topics_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE course_topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE course_topics_id_seq OWNER TO shreyas;

--
-- Name: course_topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE course_topics_id_seq OWNED BY course_topics.id;


--
-- Name: courses; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE courses (
    id integer NOT NULL,
    name character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE courses OWNER TO shreyas;

--
-- Name: courses_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE courses_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE courses_id_seq OWNER TO shreyas;

--
-- Name: courses_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE courses_id_seq OWNED BY courses.id;


--
-- Name: due_date_lists; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE due_date_lists (
    id integer NOT NULL,
    batch_set_id integer,
    user_ids jsonb[] DEFAULT '{}'::jsonb[],
    due_date_time timestamp without time zone,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE due_date_lists OWNER TO shreyas;

--
-- Name: due_date_lists_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE due_date_lists_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE due_date_lists_id_seq OWNER TO shreyas;

--
-- Name: due_date_lists_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE due_date_lists_id_seq OWNED BY due_date_lists.id;


--
-- Name: event_types; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE event_types (
    id integer NOT NULL,
    name character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE event_types OWNER TO shreyas;

--
-- Name: event_types_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE event_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE event_types_id_seq OWNER TO shreyas;

--
-- Name: event_types_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE event_types_id_seq OWNED BY event_types.id;


--
-- Name: events; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE events (
    id integer NOT NULL,
    event_type_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    start_date timestamp without time zone,
    end_date timestamp without time zone
);


ALTER TABLE events OWNER TO shreyas;

--
-- Name: events_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE events_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE events_id_seq OWNER TO shreyas;

--
-- Name: events_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE events_id_seq OWNED BY events.id;


--
-- Name: knowledge_bases; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE knowledge_bases (
    id integer NOT NULL,
    title character varying,
    body text,
    is_private boolean DEFAULT false,
    chapter_id integer,
    topic_id integer,
    published boolean DEFAULT false,
    user_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    links character varying,
    article_code character varying
);


ALTER TABLE knowledge_bases OWNER TO shreyas;

--
-- Name: knowledge_bases_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE knowledge_bases_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE knowledge_bases_id_seq OWNER TO shreyas;

--
-- Name: knowledge_bases_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE knowledge_bases_id_seq OWNED BY knowledge_bases.id;


--
-- Name: options; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE options (
    id integer NOT NULL,
    statement text,
    is_answer boolean DEFAULT false,
    question_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE options OWNER TO shreyas;

--
-- Name: options_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE options_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE options_id_seq OWNER TO shreyas;

--
-- Name: options_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE options_id_seq OWNED BY options.id;


--
-- Name: question_set_chapter_topics; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE question_set_chapter_topics (
    id integer NOT NULL,
    question_set_id integer,
    chapter_id integer,
    topic_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE question_set_chapter_topics OWNER TO shreyas;

--
-- Name: question_set_chapter_topics_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE question_set_chapter_topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE question_set_chapter_topics_id_seq OWNER TO shreyas;

--
-- Name: question_set_chapter_topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE question_set_chapter_topics_id_seq OWNED BY question_set_chapter_topics.id;


--
-- Name: question_sets; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE question_sets (
    id integer NOT NULL,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    batch_set_id integer,
    question_ids jsonb[] DEFAULT '{}'::jsonb[],
    user_ids jsonb[] DEFAULT '{}'::jsonb[],
    difficulty_level character varying
);


ALTER TABLE question_sets OWNER TO shreyas;

--
-- Name: question_sets_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE question_sets_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE question_sets_id_seq OWNER TO shreyas;

--
-- Name: question_sets_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE question_sets_id_seq OWNED BY question_sets.id;


--
-- Name: question_types; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE question_types (
    id integer NOT NULL,
    name character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE question_types OWNER TO shreyas;

--
-- Name: question_types_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE question_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE question_types_id_seq OWNER TO shreyas;

--
-- Name: question_types_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE question_types_id_seq OWNED BY question_types.id;


--
-- Name: questions; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE questions (
    id integer NOT NULL,
    statement text,
    question_type_id integer,
    answer_option_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    topic_id integer,
    chapter_id integer,
    kind character varying,
    code character varying,
    title character varying,
    difficulty_level character varying,
    tag_ids jsonb[] DEFAULT '{}'::jsonb[]
);


ALTER TABLE questions OWNER TO shreyas;

--
-- Name: questions_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE questions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE questions_id_seq OWNER TO shreyas;

--
-- Name: questions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE questions_id_seq OWNED BY questions.id;


--
-- Name: remarks; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE remarks (
    id integer NOT NULL,
    title character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE remarks OWNER TO shreyas;

--
-- Name: remarks_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE remarks_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE remarks_id_seq OWNER TO shreyas;

--
-- Name: remarks_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE remarks_id_seq OWNED BY remarks.id;


--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE schema_migrations (
    version character varying NOT NULL
);


ALTER TABLE schema_migrations OWNER TO shreyas;

--
-- Name: solutions; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE solutions (
    id integer NOT NULL,
    body text,
    question_id integer,
    topic_id integer,
    chapter_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    user_id integer
);


ALTER TABLE solutions OWNER TO shreyas;

--
-- Name: solutions_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE solutions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE solutions_id_seq OWNER TO shreyas;

--
-- Name: solutions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE solutions_id_seq OWNED BY solutions.id;


--
-- Name: students; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE students (
    id integer NOT NULL,
    name character varying,
    email character varying,
    mobile character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    gender character varying,
    dob date,
    difficulty_level character varying DEFAULT 'easy'::character varying,
    is_active boolean DEFAULT true
);


ALTER TABLE students OWNER TO shreyas;

--
-- Name: students_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE students_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE students_id_seq OWNER TO shreyas;

--
-- Name: students_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE students_id_seq OWNED BY students.id;


--
-- Name: tags; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE tags (
    id integer NOT NULL,
    name character varying,
    question_ids jsonb[] DEFAULT '{}'::jsonb[],
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE tags OWNER TO shreyas;

--
-- Name: tags_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE tags_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE tags_id_seq OWNER TO shreyas;

--
-- Name: tags_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE tags_id_seq OWNED BY tags.id;


--
-- Name: topics; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE topics (
    id integer NOT NULL,
    name character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    short_name character varying
);


ALTER TABLE topics OWNER TO shreyas;

--
-- Name: topics_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE topics_id_seq OWNER TO shreyas;

--
-- Name: topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE topics_id_seq OWNED BY topics.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE users (
    id integer NOT NULL,
    email character varying DEFAULT ''::character varying NOT NULL,
    encrypted_password character varying DEFAULT ''::character varying NOT NULL,
    reset_password_token character varying,
    reset_password_sent_at timestamp without time zone,
    remember_created_at timestamp without time zone,
    sign_in_count integer DEFAULT 0 NOT NULL,
    current_sign_in_at timestamp without time zone,
    last_sign_in_at timestamp without time zone,
    current_sign_in_ip character varying,
    last_sign_in_ip character varying,
    student_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    role character varying DEFAULT 'student'::character varying,
    is_active boolean DEFAULT true,
    name character varying,
    avatar character varying,
    gender character varying,
    dob date,
    mobile character varying,
    difficulty_level character varying
);


ALTER TABLE users OWNER TO shreyas;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE users_id_seq OWNER TO shreyas;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: videos; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE videos (
    id integer NOT NULL,
    question_id integer,
    youtube_url character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE videos OWNER TO shreyas;

--
-- Name: videos_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE videos_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE videos_id_seq OWNER TO shreyas;

--
-- Name: videos_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE videos_id_seq OWNED BY videos.id;


--
-- Name: votes; Type: TABLE; Schema: public; Owner: shreyas
--

CREATE TABLE votes (
    id integer NOT NULL,
    votable_id integer,
    votable_type character varying,
    voter_id integer,
    voter_type character varying,
    vote_flag boolean,
    vote_scope character varying,
    vote_weight integer,
    created_at timestamp without time zone,
    updated_at timestamp without time zone
);


ALTER TABLE votes OWNER TO shreyas;

--
-- Name: votes_id_seq; Type: SEQUENCE; Schema: public; Owner: shreyas
--

CREATE SEQUENCE votes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE votes_id_seq OWNER TO shreyas;

--
-- Name: votes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: shreyas
--

ALTER SEQUENCE votes_id_seq OWNED BY votes.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY answers ALTER COLUMN id SET DEFAULT nextval('answers_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_events ALTER COLUMN id SET DEFAULT nextval('batch_events_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_set_chapter_topics ALTER COLUMN id SET DEFAULT nextval('batch_set_chapter_topics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_set_questions ALTER COLUMN id SET DEFAULT nextval('batch_set_questions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_sets ALTER COLUMN id SET DEFAULT nextval('batch_sets_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_students ALTER COLUMN id SET DEFAULT nextval('batch_students_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batches ALTER COLUMN id SET DEFAULT nextval('batches_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY chapter_topics ALTER COLUMN id SET DEFAULT nextval('chapter_topics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY chapters ALTER COLUMN id SET DEFAULT nextval('chapters_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY comments ALTER COLUMN id SET DEFAULT nextval('comments_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY course_topics ALTER COLUMN id SET DEFAULT nextval('course_topics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY courses ALTER COLUMN id SET DEFAULT nextval('courses_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY due_date_lists ALTER COLUMN id SET DEFAULT nextval('due_date_lists_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY event_types ALTER COLUMN id SET DEFAULT nextval('event_types_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY events ALTER COLUMN id SET DEFAULT nextval('events_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY knowledge_bases ALTER COLUMN id SET DEFAULT nextval('knowledge_bases_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY options ALTER COLUMN id SET DEFAULT nextval('options_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY question_set_chapter_topics ALTER COLUMN id SET DEFAULT nextval('question_set_chapter_topics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY question_sets ALTER COLUMN id SET DEFAULT nextval('question_sets_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY question_types ALTER COLUMN id SET DEFAULT nextval('question_types_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY questions ALTER COLUMN id SET DEFAULT nextval('questions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY remarks ALTER COLUMN id SET DEFAULT nextval('remarks_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY solutions ALTER COLUMN id SET DEFAULT nextval('solutions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY students ALTER COLUMN id SET DEFAULT nextval('students_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY tags ALTER COLUMN id SET DEFAULT nextval('tags_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY topics ALTER COLUMN id SET DEFAULT nextval('topics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY videos ALTER COLUMN id SET DEFAULT nextval('videos_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY votes ALTER COLUMN id SET DEFAULT nextval('votes_id_seq'::regclass);


--
-- Data for Name: answers; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY answers (id, statement, question_id, user_id, batch_set_id, created_at, updated_at, remark_id, is_correct, score) FROM stdin;
4	all the places	6	13	1	2017-04-21 07:00:36.05432	2017-04-21 07:00:36.05432	\N	\N	\N
5	is it so	7	13	1	2017-04-21 07:00:36.056459	2017-04-21 07:00:36.056459	\N	\N	\N
9	web development, e-commerce, booking websites.	6	8	1	2017-04-21 07:11:12.303249	2017-04-21 07:11:12.303249	\N	\N	\N
10	declare variables, check conditions, provide output. 	7	8	1	2017-04-21 07:11:12.305169	2017-04-21 07:11:12.305169	\N	\N	\N
14	app development, devops	6	3	1	2017-04-21 07:11:23.192642	2017-04-21 07:11:23.192642	\N	\N	\N
15	initialisation, condition, increment/decrement 	7	3	1	2017-04-21 07:11:23.19458	2017-04-21 07:11:23.19458	\N	\N	\N
19	food panda, e-com sites, travel sites	6	12	1	2017-04-21 07:11:45.712588	2017-04-21 07:11:45.712588	\N	\N	\N
20	initialization,condition,increment	7	12	1	2017-04-21 07:11:45.715513	2017-04-21 07:11:45.715513	\N	\N	\N
24	ecommerce applications,medical applications	6	10	1	2017-04-21 07:12:10.166513	2017-04-21 07:12:10.166513	\N	\N	\N
25	initialization,condition,increment	7	10	1	2017-04-21 07:12:10.169109	2017-04-21 07:12:10.169109	\N	\N	\N
29	Web Development	6	14	1	2017-04-21 07:12:15.144209	2017-04-21 07:12:15.144209	\N	\N	\N
30	Check for syntax.	7	14	1	2017-04-21 07:12:15.146187	2017-04-21 07:12:15.146187	\N	\N	\N
34	application development 	6	4	1	2017-04-21 07:12:18.447748	2017-04-21 07:12:18.447748	\N	\N	\N
35	initialization condition iteration  	7	4	1	2017-04-21 07:12:18.453953	2017-04-21 07:12:18.453953	\N	\N	\N
39	web development, software development, testing, application building.	6	2	1	2017-04-21 07:12:20.91309	2017-04-21 07:12:20.91309	\N	\N	\N
40	initialisation, condition,incrementation	7	2	1	2017-04-21 07:12:20.915354	2017-04-21 07:12:20.915354	\N	\N	\N
44	web development, automation testing	6	5	1	2017-04-21 07:12:24.58624	2017-04-21 07:12:24.58624	\N	\N	\N
45	init, condition, increment	7	5	1	2017-04-21 07:12:24.587718	2017-04-21 07:12:24.587718	\N	\N	\N
49	mob app,in hardware devies using vm 	6	6	1	2017-04-21 07:12:38.483452	2017-04-21 07:12:38.483452	\N	\N	\N
50	count,increment,break	7	6	1	2017-04-21 07:12:38.484914	2017-04-21 07:12:38.484914	\N	\N	\N
54	web development, software development, testing, application building.	6	7	1	2017-04-21 07:15:11.765682	2017-04-21 07:15:11.765682	\N	\N	\N
55	initialise,condition,increment	7	7	1	2017-04-21 07:15:11.767145	2017-04-21 07:15:11.767145	\N	\N	\N
56	with the use of string interpolation we can add string and integer.\r\n#{} syntax is used for sting interpolation\r\ne.g name = "ramesh"\r\nage = 20\r\nputs "name : #{name} , age : #{age}	8	3	2	2017-04-24 06:17:58.754992	2017-04-24 06:17:58.754992	\N	\N	\N
58	Class\r\nupcase\r\ndowncase\r\nlength\r\nsplit\r\nCapitalize\r\nupcase!	10	3	2	2017-04-24 06:17:58.76209	2017-04-24 06:17:58.76209	\N	\N	\N
61	the easy way of showing the answer is puts statement \r\ndisplay output	8	4	2	2017-04-24 06:18:18.108442	2017-04-24 06:18:18.108442	\N	\N	\N
63	upcase\r\ndowncase\r\ncapitalize\r\nreverse\r\nlenght	10	4	2	2017-04-24 06:18:18.11296	2017-04-24 06:18:18.11296	\N	\N	\N
66	It is nothing but adding the string and multiple values in the same line by defining within " "	8	5	2	2017-04-24 06:20:44.224678	2017-04-24 06:20:44.224678	\N	\N	\N
68	length, upcase, downcase, reverse, capitalize, upcase!, 	10	5	2	2017-04-24 06:20:44.230314	2017-04-24 06:20:44.230314	\N	\N	\N
71	values gets added up without deleting previous value\r\nexample. 1+=1 will be 11.	8	2	2	2017-04-24 06:20:57.143893	2017-04-24 06:20:57.143893	\N	\N	\N
73	.capitalize\r\n.upcase\r\n.downcase\r\n.class\r\n.length\r\n.reverse	10	2	2	2017-04-24 06:20:57.150174	2017-04-24 06:20:57.150174	\N	\N	\N
76	String interpolation is a simplified method used to concatenate data.\r\nFor e.g. : "Well done! Your answer of " + answer + "is correct!"\r\ncan be substituted by \r\n"Well done! Your answer of #{answer} is correct!"	8	8	2	2017-04-24 06:22:26.173376	2017-04-24 06:22:26.173376	\N	\N	\N
78	split, lowercase, uppercase, uppercase!, ascending, descending, reverse, min, max	10	8	2	2017-04-24 06:22:26.178121	2017-04-24 06:22:26.178121	\N	\N	\N
81	In ruby string interpolation is nothing but the expression to be interpolated into the string literal is simply a reference to a global or instance class variable then the curly braces may be omitted\r\nfirst_name=sravani\r\nlast_name=srav\r\nputs "#{first_name}   #{last_name}"	8	10	2	2017-04-24 06:30:08.213624	2017-04-24 06:30:08.213624	\N	\N	\N
83	s = "hello world"\r\ns.capitalize #Hello world\r\ns.upcase #HELLO WORLD\r\ns.downcase #hello world\r\ns.length  #11\r\ns.reverse #dlrow olleh\r\ns.upcase! #HELLO WORLD\r\nputs s #HELLO WORLD\r\ns.split(" ") #["hello", "world"]\r\n 	10	10	2	2017-04-24 06:30:08.217969	2017-04-24 06:30:08.217969	\N	\N	\N
2	false	2	13	1	2017-04-21 07:00:36.051279	2017-07-04 13:09:57.084728	\N	wrong	\N
3	int n2 = 200;	5	13	1	2017-04-21 07:00:36.052885	2017-07-04 13:09:57.094844	\N	wrong	\N
7	true	2	8	1	2017-04-21 07:11:12.299275	2017-07-04 13:09:57.136115	\N	correct	\N
8	n1 = 100	5	8	1	2017-04-21 07:11:12.301289	2017-07-04 13:09:57.16569	\N	correct	\N
11	true	1	3	1	2017-04-21 07:11:23.187825	2017-07-04 13:09:57.232335	\N	correct	\N
13	n1 = 100	5	3	1	2017-04-21 07:11:23.190842	2017-07-04 13:09:57.257143	\N	correct	\N
16	true	1	12	1	2017-04-21 07:11:45.706323	2017-07-04 13:09:57.284881	\N	correct	\N
17	true	2	12	1	2017-04-21 07:11:45.708548	2017-07-04 13:09:57.304634	\N	correct	\N
21	true	1	10	1	2017-04-21 07:12:10.15514	2017-07-04 13:09:57.367413	\N	correct	\N
22	true	2	10	1	2017-04-21 07:12:10.160098	2017-07-04 13:09:57.377028	\N	correct	\N
23	n1 = 100	5	10	1	2017-04-21 07:12:10.163426	2017-07-04 13:09:57.392329	\N	correct	\N
26	true	1	14	1	2017-04-21 07:12:15.135291	2017-07-04 13:09:57.412786	\N	correct	\N
28	n1 = 100	5	14	1	2017-04-21 07:12:15.141695	2017-07-04 13:09:57.433355	\N	correct	\N
31	true	1	4	1	2017-04-21 07:12:18.436261	2017-07-04 13:09:57.470176	\N	correct	\N
32	true	2	4	1	2017-04-21 07:12:18.439019	2017-07-04 13:09:57.478652	\N	correct	\N
36	true	1	2	1	2017-04-21 07:12:20.903201	2017-07-04 13:09:57.509994	\N	correct	\N
37	true	2	2	1	2017-04-21 07:12:20.907993	2017-07-04 13:09:57.518657	\N	correct	\N
38	n1 = 100	5	2	1	2017-04-21 07:12:20.910803	2017-07-04 13:09:57.536405	\N	correct	\N
41	true	1	5	1	2017-04-21 07:12:24.581528	2017-07-04 13:09:57.588324	\N	correct	\N
43	n1 = 100	5	5	1	2017-04-21 07:12:24.584771	2017-07-04 13:09:57.610991	\N	correct	\N
46	true	1	6	1	2017-04-21 07:12:38.477803	2017-07-04 13:09:57.640532	\N	correct	\N
47	false	2	6	1	2017-04-21 07:12:38.47993	2017-07-04 13:09:57.66052	\N	wrong	\N
51	true	1	7	1	2017-04-21 07:15:11.75816	2017-07-04 13:09:57.709776	\N	correct	\N
52	true	2	7	1	2017-04-21 07:15:11.761121	2017-07-04 13:09:57.7221	\N	correct	\N
53	n1 = 100	5	7	1	2017-04-21 07:15:11.76375	2017-07-04 13:09:57.731759	\N	correct	\N
59	Fixnum	11	3	2	2017-04-24 06:17:58.764258	2017-07-04 13:09:57.770874	\N	correct	\N
60	false	12	3	2	2017-04-24 06:17:58.766455	2017-07-04 13:09:57.781167	\N	correct	\N
62	["mango", "water melon", "apple"]	9	4	2	2017-04-24 06:18:18.110841	2017-07-04 13:09:57.797643	\N	correct	\N
64	Fixnum	11	4	2	2017-04-24 06:18:18.115006	2017-07-04 13:09:57.812294	\N	correct	\N
65	false	12	4	2	2017-04-24 06:18:18.11705	2017-07-04 13:09:57.820984	\N	correct	\N
69	Fixnum	11	5	2	2017-04-24 06:20:44.232786	2017-07-04 13:09:57.852351	\N	correct	\N
70	false	12	5	2	2017-04-24 06:20:44.234942	2017-07-04 13:09:57.86088	\N	correct	\N
72	["mango", "water melon", "apple"]	9	2	2	2017-04-24 06:20:57.147052	2017-07-04 13:09:57.882418	\N	correct	\N
74	Fixnum	11	2	2	2017-04-24 06:20:57.153066	2017-07-04 13:09:57.898301	\N	correct	\N
75	false	12	2	2	2017-04-24 06:20:57.155874	2017-07-04 13:09:57.907007	\N	correct	\N
79	Fixnum	11	8	2	2017-04-24 06:22:26.180277	2017-07-04 13:09:57.935412	\N	correct	\N
80	false	12	8	2	2017-04-24 06:22:26.186741	2017-07-04 13:09:57.943947	\N	correct	\N
82	["mango", "water melon", "apple"]	9	10	2	2017-04-24 06:30:08.215933	2017-07-04 13:09:57.958225	\N	correct	\N
84	Fixnum	11	10	2	2017-04-24 06:30:08.220082	2017-07-04 13:09:57.977169	\N	correct	\N
85	false	12	10	2	2017-04-24 06:30:08.222226	2017-07-04 13:09:57.986379	\N	correct	\N
86	In ruby string interpolation is used to convert the type of the value . eg - number = 1991\r\nnumber = number.to_s , In this number assign a fixnum and to use split method, as we know here number is a fixnum, so to perform string method we have to change it to string by using .to_s.\r\nit also can be .to_i , .to_f .	8	12	2	2017-04-24 06:32:14.80728	2017-04-24 06:32:14.80728	\N	\N	\N
88	.capitalize\r\n.upcase\r\n.downcase\r\n.reverse\r\n.length\r\n	10	12	2	2017-04-24 06:32:14.812742	2017-04-24 06:32:14.812742	\N	\N	\N
91	joining strings together or concatenating string using a method is called string interpolation. 	8	15	2	2017-04-24 06:39:32.995779	2017-04-24 06:39:32.995779	\N	\N	\N
93	capitalize \r\nupcase\r\nreverse\r\ndowncase	10	15	2	2017-04-24 06:39:33.001146	2017-04-24 06:39:33.001146	\N	\N	\N
96	<p># Test answer.</p>\r\n	13	13	3	2017-04-25 05:27:19.263901	2017-04-25 05:27:19.263901	\N	\N	\N
97	<p>i = 0&nbsp;<br />\r\nnames = [&quot;Sheldon&quot;,&quot;leonard&quot;,&quot;Penny&quot;,&quot;Rajesh&quot;,&quot;howard&quot;]<br />\r\nwhile i &lt; 6<br />\r\n&nbsp;&nbsp; &nbsp; names.push(names[0],names[0])<br />\r\nnames.shift<br />\r\n&nbsp;&nbsp; &nbsp;i+=1<br />\r\nend&nbsp;<br />\r\nputs names</p>\r\n	13	15	3	2017-04-25 06:02:32.325069	2017-04-25 06:02:32.325069	\N	\N	\N
99	<p>push</p>\r\n\r\n<p>pop</p>\r\n\r\n<p>shift</p>\r\n\r\n<p>unshift</p>\r\n\r\n<p>&nbsp;</p>\r\n	15	3	4	2017-04-25 06:07:32.764671	2017-04-25 06:07:32.764671	\N	\N	\N
100	delete_at is work with index\r\ndelete work with value	16	3	4	2017-04-25 06:07:32.767467	2017-04-25 06:07:32.767467	\N	\N	\N
101	numbers = [10,20,30,40]\r\nnumbers = Array.new	17	3	4	2017-04-25 06:07:32.769442	2017-04-25 06:07:32.769442	\N	\N	\N
102	push add value at end of the array\r\npop delete value at the end of array\r\nshift delete the value at the beginning of an array\r\nunshift at the value at the beginning of an array	18	3	4	2017-04-25 06:07:32.771531	2017-04-25 06:07:32.771531	\N	\N	\N
104	<p>pop</p>\r\n\r\n<p>push</p>\r\n\r\n<p>shift&nbsp;</p>\r\n\r\n<p>unshift</p>\r\n\r\n<p>instert&nbsp;</p>\r\n	15	4	4	2017-04-25 06:11:59.687405	2017-04-25 06:11:59.687405	\N	\N	\N
105	delete will directly delete the number which is given \r\ndelete_at will take index value of the array an delete the particular index number at tat position \r\n	16	4	4	2017-04-25 06:11:59.688951	2017-04-25 06:11:59.688951	\N	\N	\N
106	a = []\r\na = Array.a\r\n	17	4	4	2017-04-25 06:11:59.690455	2017-04-25 06:11:59.690455	\N	\N	\N
107	push will insert the number at end of the array \r\npop will removes the values at end of the array \r\nshift will removes the values from the beginning \r\nunshift will adds the value at the  beginning \r\n	18	4	4	2017-04-25 06:11:59.692082	2017-04-25 06:11:59.692082	\N	\N	\N
109	<p>push, shift, pop, unshift,&nbsp;</p>\r\n	15	8	4	2017-04-25 06:13:38.696209	2017-04-25 06:13:38.696209	\N	\N	\N
110	"delete" will delete the value given by the user.\r\n\r\n"delete_at" will delete the value at the index provided by the user. 	16	8	4	2017-04-25 06:13:38.698014	2017-04-25 06:13:38.698014	\N	\N	\N
111	Array can be created by grouping together values of the same kind or different kind or \r\nby creating an empty array and then adding values to it. 	17	8	4	2017-04-25 06:13:38.699685	2017-04-25 06:13:38.699685	\N	\N	\N
112	'push' will add the value to the end of the array.\r\n'pop' will delete the value specified by the user.\r\n'shift' will delete the value which was added last by the user.\r\n'unshift' will add a value provided by the user.	18	8	4	2017-04-25 06:13:38.701239	2017-04-25 06:13:38.701239	\N	\N	\N
114	<p>push(val), pop, shift, unshift(val), insert(index, val)</p>\r\n	15	5	4	2017-04-25 06:16:43.647337	2017-04-25 06:16:43.647337	\N	\N	\N
115	delete_at method removes values from index. takes index number as argument\r\ndelete method looks for the value to delete\r\n\r\n	16	5	4	2017-04-25 06:16:43.648953	2017-04-25 06:16:43.648953	\N	\N	\N
116	variable = [ ]\r\n\r\nvariable =Array.new	17	5	4	2017-04-25 06:16:43.650488	2017-04-25 06:16:43.650488	\N	\N	\N
117	Push - pushes the values at the end of the array. takes arguments as values\r\n\r\npop- removes values from the end of an array\r\n\r\nshift- removes values from the very beginning of the array\r\n\r\nunshift- adds values to the beginning of the array. takes value as an argument	18	5	4	2017-04-25 06:16:43.652035	2017-04-25 06:16:43.652035	\N	\N	\N
119	<p>.push</p>\r\n\r\n<p>.pop</p>\r\n\r\n<p>.insert&nbsp;</p>\r\n\r\n<p>.shift</p>\r\n\r\n<p>&nbsp;</p>\r\n	15	15	4	2017-04-25 06:18:16.21425	2017-04-25 06:18:16.21425	\N	\N	\N
120	delete is used when you are trying to delete a value from an array \r\ndelete_at is used when you are trying to delete a value from an array using array index	16	15	4	2017-04-25 06:18:16.216837	2017-04-25 06:18:16.216837	\N	\N	\N
121	names = []\r\nnumbers = Array.new \r\narray.new(3)	17	15	4	2017-04-25 06:18:16.219198	2017-04-25 06:18:16.219198	\N	\N	\N
122	.push : This method is  used when you want to add a value at the end of an array \r\n.pop : This methid is used when you want to remove the  last value from an array\r\n.shift is used when you want to remove a value from the beginning of an array\r\nunshift is used when you want to add a value at the beginning of an array\r\n	18	15	4	2017-04-25 06:18:16.221588	2017-04-25 06:18:16.221588	\N	\N	\N
124	<p>mutable methods in array are push pop shift unshift</p>\r\n\r\n<p>arr=[1,2,3,4]</p>\r\n\r\n<p>arr.push(5) # arr=[1,2,3,4,5]</p>\r\n\r\n<p>arr.pop # arr=[1,2,3,4]</p>\r\n\r\n<p>arr.unshift(0) #arr=[0,1,2,3,4]</p>\r\n\r\n<p>arr.shift #arr=[1,2,3,4]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	15	10	4	2017-04-25 06:18:39.916346	2017-04-25 06:18:39.916346	\N	\N	\N
125	delete : if we use delete all the values with same parameter will be deleted\r\n eg : arr=[1,2,3,4,5,6,7,1]\r\narr.delete(1) #arr=[2,3,4,5,6,7]\r\n1 value is their two times in the array when we use delete two 1's are deleted\r\nit looks for the value\r\n\r\ndelete_at: if we use delete_at method we can specify which particular value to be deleted\r\neg: arr=[1,2,3,4,5,6,7,1]\r\narr.delete_at(7)\r\nthe 1 value which is at the 7 th index will be deleted\r\nit looks for the index\r\n	16	10	4	2017-04-25 06:18:39.918131	2017-04-25 06:18:39.918131	\N	\N	\N
126	names=Array.new\r\nnames=Array.new(5)\r\nnames=[]\r\nnames=[5]\r\n	17	10	4	2017-04-25 06:18:39.920031	2017-04-25 06:18:39.920031	\N	\N	\N
127	push : push method is used to add the new values to the array at the end \r\npop : pop method is used to remove the last value from the array\r\nshift : shift method is used to remove the beginning value of the array\r\nunshift : unshift method is used to add the value at the beginning of an array	18	10	4	2017-04-25 06:18:39.922184	2017-04-25 06:18:39.922184	\N	\N	\N
129	<ol>\r\n\t<li>.push = numbers=[10,20,30]</li>\r\n</ol>\r\n\r\n<p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;number []<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;number.push(numbers)</p>\r\n\r\n<p>2.&nbsp;&nbsp;.pop = #{numbers.pop}</p>\r\n\r\n<p>3. .shift&nbsp;= #{numbers.shift}</p>\r\n\r\n<p>4. .unshift =# {numbers.unshift(2)}</p>\r\n\r\n<p>5. .insert= #{numbers.insert(0,74)}</p>\r\n	15	12	4	2017-04-25 06:20:38.555504	2017-04-25 06:20:38.555504	\N	\N	\N
130	delete method will delete all the same value in the array list but delete_at will required a specific index value and then delete the value of that index.\r\neg. numbers=[10,20,10,30]\r\n#{numbers.delete(10)} will give= [20,30]\r\n#{number.delete_at(0)}.	16	12	4	2017-04-25 06:20:38.557086	2017-04-25 06:20:38.557086	\N	\N	\N
131	arr []\r\narr = Array.new\r\narr=Array.new(10)\r\n	17	12	4	2017-04-25 06:20:38.558626	2017-04-25 06:20:38.558626	\N	\N	\N
89	Fixnum	11	12	2	2017-04-24 06:32:14.814776	2017-07-04 13:09:58.0241	\N	correct	\N
90	false	12	12	2	2017-04-24 06:32:14.816782	2017-07-04 13:09:58.033205	\N	correct	\N
94	Fixnum	11	15	2	2017-04-24 06:39:33.003589	2017-07-04 13:09:58.062802	\N	correct	\N
95	false	12	15	2	2017-04-24 06:39:33.006486	2017-07-04 13:09:58.071498	\N	correct	\N
98	true	14	3	4	2017-04-25 06:07:32.762429	2017-07-04 13:09:58.09209	\N	correct	\N
103	true	14	4	4	2017-04-25 06:11:59.685248	2017-07-04 13:09:58.120646	\N	correct	\N
108	true	14	8	4	2017-04-25 06:13:38.692633	2017-07-04 13:09:58.165031	\N	correct	\N
113	true	14	5	4	2017-04-25 06:16:43.64385	2017-07-04 13:09:58.195056	\N	correct	\N
123	true	14	10	4	2017-04-25 06:18:39.914421	2017-07-04 13:09:58.257938	\N	correct	\N
128	true	14	12	4	2017-04-25 06:20:38.553719	2017-07-04 13:09:58.289658	\N	correct	\N
132	1. ans -> push method will add a new value at the end .\r\n2.ans->pop method will remove value at the last.\r\n3.shift->shift method will remove value at beginning.\r\n4.unshift->it is used to add the value at the beginning.\r\n 	18	12	4	2017-04-25 06:20:38.560148	2017-04-25 06:20:38.560148	\N	\N	\N
134	<p>.pop</p>\r\n\r\n<p>.push</p>\r\n\r\n<p>.shift</p>\r\n\r\n<p>.unshift</p>\r\n	15	2	4	2017-04-25 06:21:00.143571	2017-04-25 06:21:00.143571	\N	\N	\N
135	delete_at deletes the value at the index defined\r\ndelete deletes the value itself\r\n	16	2	4	2017-04-25 06:21:00.145334	2017-04-25 06:21:00.145334	\N	\N	\N
136	array = Array.new\r\narray = [ ]	17	2	4	2017-04-25 06:21:00.147113	2017-04-25 06:21:00.147113	\N	\N	\N
137	1.Push-Inserts values at the beginning of the array.\r\n\r\n2.Pop-Removes the last value of the array.\r\n\r\n3.Shift-Remove value in the beginning of the array.\r\n\r\n4.Unshift-Adds value in the beginning of the array.	18	2	4	2017-04-25 06:21:00.149442	2017-04-25 06:21:00.149442	\N	\N	\N
138	<p>names = [&quot;Sheldon&quot;, &quot;Leonard&quot;, &quot;Penny&quot;, &quot;Rajesh&quot;, &quot;Howard&quot;]<br />\r\nputs &quot;enter the value for N&quot;<br />\r\nn = gets.to_i<br />\r\ni = 0<br />\r\nwhile i&lt;n</p>\r\n\r\n<p>&nbsp; &nbsp; res = names.shift<br />\r\n&nbsp; &nbsp; names = names.push(res,res)</p>\r\n\r\n<p>i+=1<br />\r\nend<br />\r\nputs &quot;Name of a man who drank the #{n}-th cola is: #{names[0]}&quot;</p>\r\n	13	5	3	2017-04-25 06:25:35.324925	2017-04-25 06:25:35.324925	\N	\N	\N
139	<p>names = &quot;Sheldon, Leonard, Penny, Rajesh, Howard&quot;<br />\r\nnames = names.split(&quot;, &quot;)<br />\r\nputs names</p>\r\n\r\n<p>puts &quot;Enter value of n iteration:&quot;<br />\r\nr = gets.to_i</p>\r\n\r\n<p>i = 0</p>\r\n\r\n<p>while i &lt; r<br />\r\n&nbsp; names.push(names.first,names.first)<br />\r\n&nbsp; names.shift<br />\r\n&nbsp; i += 1<br />\r\nend</p>\r\n\r\n<p>puts names.to_s<br />\r\nputs &quot;Res = #{names.first}&quot;</p>\r\n	13	3	3	2017-04-25 06:30:53.876218	2017-04-25 06:30:53.876218	\N	\N	\N
140	<p>c=[&quot;sheldon&quot;,&quot;leonard&quot;,&quot;penny&quot;,&quot;rajesh&quot;,&quot;howard&quot;]<br />\r\nr = 6<br />\r\ni = 5<br />\r\nk = 0<br />\r\nwhile k &lt;= r<br />\r\n&nbsp;&nbsp; &nbsp;c[i] = c[k]<br />\r\n&nbsp;&nbsp; &nbsp;i+=1</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;c[i] = c[k]<br />\r\n&nbsp;&nbsp; &nbsp;i+=1<br />\r\n&nbsp;&nbsp; &nbsp;k+=1<br />\r\nend<br />\r\nputs c[r-1]&nbsp;<br />\r\n&nbsp;</p>\r\n	13	4	3	2017-04-25 06:35:09.519714	2017-04-25 06:35:09.519714	\N	\N	\N
144	<p>Ruby is used in Web Development like online portal, ecommerce, apps, Automation like in Configuration Management tools like chef, puppet, creating Web services etc</p>\r\n	6	9	1	2017-04-25 11:36:01.100045	2017-04-25 11:36:01.100045	\N	\N	\N
145	Initialization , condition and incrementation	7	9	1	2017-04-25 11:36:01.102107	2017-04-25 11:36:01.102107	\N	\N	\N
146	<p>String <em>Interpolation</em> allows <em>Ruby</em> code to appear within a <em>string.</em></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>first_name = &#39;ramesh&#39; #objects<br />\r\nlast_name = &quot;mahesh&quot; #objects</p>\r\n\r\n<p>age = 15</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>puts &quot;#{first_name} #{last_name} #{age}&quot; # &nbsp;&nbsp; &nbsp;string interpolation</p>\r\n	8	9	2	2017-04-25 11:44:07.799564	2017-04-25 11:44:07.799564	\N	\N	\N
148	capitalize, upcase, downcase, length , reverse,	10	9	2	2017-04-25 11:44:07.803515	2017-04-25 11:44:07.803515	\N	\N	\N
152	<p>shift, unshift , insert ,push, pop</p>\r\n	15	9	4	2017-04-25 11:50:14.754165	2017-04-25 11:50:14.754165	\N	\N	\N
153	delete_at removes values from index whereas delete will remove the value from the array.	16	9	4	2017-04-25 11:50:14.756376	2017-04-25 11:50:14.756376	\N	\N	\N
154	n1 = []\r\nn1 = Array.new	17	9	4	2017-04-25 11:50:14.758466	2017-04-25 11:50:14.758466	\N	\N	\N
155	push will push the values at the beginning of the array. Pop will remove the last value from the arrary. shift will remove the first element of the array. unshift will add value to the beginning of the array.	18	9	4	2017-04-25 11:50:14.760415	2017-04-25 11:50:14.760415	\N	\N	\N
156	<p>numbers = [23, 45, 7, 84, 39, 7, 55, 18, 92, 2]<br />\r\noutput = numbers.find_all{|number| number == 7}<br />\r\nputs &quot;The array of searched number is #{output}&quot;<br />\r\nputs &quot;The number of times searched number appears in the array is: #{output.length}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	19	8	5	2017-04-25 14:55:00.000147	2017-04-25 14:55:00.000147	\N	\N	\N
157	numbers = [27, 32, 58, 77, 83, 9, 12]\r\nsorted_numbers = numbers.sort\r\nputs "#{sorted_numbers}"\r\nputs "The smallest integer of the array is #{sorted_numbers.min}"\r\n\r\n\r\nnegative_numbers = [-56, -2, 73, -105, -256, -386]\r\nnegative_sorted_numbers = negative_numbers.sort\r\nputs "#{negative_sorted_numbers}"\r\nputs "The smallest negative integer of the array is #{negative_sorted_numbers.min}"\r\n	20	8	5	2017-04-25 14:55:00.011375	2017-04-25 14:55:00.011375	\N	\N	\N
158	<p>names = [&quot;Sheldon&quot;, &quot;Leonard&quot;, &quot;Penny&quot;, &quot;Rajesh&quot;, &quot;Howard&quot;]<br />\r\nnew_string = []<br />\r\nr = 6<br />\r\ni = 0 #initialization<br />\r\nwhile i &lt; r #condition<br />\r\n&nbsp;&nbsp; &nbsp;output= names.shift&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;new_string = names.push(output, output)<br />\r\n&nbsp;&nbsp; &nbsp;i += 1 #incrementation<br />\r\nend&nbsp;<br />\r\nputs &quot;The queue will look like this at the 6-th drink: #{new_string}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	13	8	3	2017-04-25 15:10:01.886519	2017-04-25 15:10:01.886519	\N	\N	\N
159	<p>=begin&nbsp;<br />\r\n10 numbers are entered from the keyboard into an array. The number to be searched is entered through the keyboard by the user. &nbsp;Write a program to find if the number to be searched is present and if it is present display the number of times it appears in the array<br />\r\n=end</p>\r\n\r\n<p>puts &quot;Enter 10 numbers into an array: &quot;<br />\r\nnumbers=[]<br />\r\ni=1</p>\r\n\r\n<p>while i&lt;=10<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;n = gets.to_i<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;numbers.push(n)<br />\r\n&nbsp; i+=1<br />\r\nend</p>\r\n\r\n<p>puts &quot;Numbers in an array are: #{numbers}&quot;<br />\r\nputs &quot;enter the number to search:&quot;<br />\r\nsearch_key = gets.to_i</p>\r\n\r\n<p>target_key = numbers.find_all {|number| number == search_key}<br />\r\nuniq_array=target_key.uniq</p>\r\n\r\n<p>if search_key != uniq_array[0]<br />\r\n&nbsp;puts &quot;Wrong search key!, try again&quot;<br />\r\nelse&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Yes, the number is present and it appears #{target_key.length} times&quot;<br />\r\nend</p>\r\n	19	5	5	2017-04-25 15:39:54.953377	2017-04-25 15:39:54.953377	\N	\N	\N
160	=begin \r\nGiven an array of integers your solution should find the smallest integer. For example:\r\nGiven [34, 15, 88, 2] your solution will return 2\r\nGiven [34, -345, -1, 100] your solution will return -345\r\n=end\r\n\r\nint_array = [30,15,88,2,-345,34,-1,100]\r\nsmallest_int = int_array.min\r\nputs "The smallest integer of given array is = #{smallest_int}"	20	5	5	2017-04-25 15:39:54.971704	2017-04-25 15:39:54.971704	\N	\N	\N
187	<p>numbers = [10,2,30,29,40,54,34,89,49,10,45]</p>\r\n\r\n<p>puts &quot;Enter search numbers&quot;<br />\r\nsearch_number = gets.to_i</p>\r\n\r\n<p>results = numbers.find_all { |number| number == search_number}</p>\r\n\r\n<p>puts &quot;#{results}&quot;</p>\r\n\r\n<p>if results.length == 0<br />\r\n&nbsp; puts &quot;Search number is not present in an array &quot;<br />\r\nelse<br />\r\n&nbsp; puts &quot;#{search_number} is appear #{results.length} times&quot;<br />\r\nend<br />\r\n&nbsp;&nbsp;</p>\r\n	19	3	5	2017-04-26 16:11:39.059393	2017-04-26 16:11:39.059393	\N	\N	\N
188	<p>numbers = [34, 15, 88, 2]<br />\r\nputs &quot;Smallest number is :: #{numbers.min}&quot;</p>\r\n\r\n<p>numbers = [34, -345, -1, 100]<br />\r\nputs &quot;Smallest number is :: #{numbers.min}&quot;</p>\r\n	20	3	5	2017-04-26 16:11:39.062393	2017-04-26 16:11:39.062393	\N	\N	\N
142	true	2	9	1	2017-04-25 11:36:01.095877	2017-07-04 13:09:58.385266	\N	correct	\N
143	n1 = 100	5	9	1	2017-04-25 11:36:01.09791	2017-07-04 13:09:58.399268	\N	correct	\N
147	[	9	9	2	2017-04-25 11:44:07.801616	2017-07-04 13:09:58.425584	\N	wrong	\N
150	false	12	9	2	2017-04-25 11:44:07.807294	2017-07-04 13:09:58.451778	\N	correct	\N
151	true	14	9	4	2017-04-25 11:50:14.752015	2017-07-04 13:09:58.478386	\N	correct	\N
161	<p>puts &quot;enter array size&quot;<br />\r\ninputvalue= gets.chomp.to_i<br />\r\nputs &quot;enter elements&quot;<br />\r\ni=0<br />\r\narrays=[]<br />\r\nwhile i &lt; inputvalue<br />\r\n&nbsp;&nbsp; &nbsp;input=gets.chomp # to take input from console&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;arrays.push(input)<br />\r\n&nbsp;&nbsp; &nbsp;i = i+1<br />\r\nend</p>\r\n\r\n<p>output=[]</p>\r\n\r\n<p>puts &quot;The array length : #{arrays.length}&quot;<br />\r\nputs &quot;enter search value&quot;<br />\r\nsearch = gets.chomp<br />\r\narrays.each do |array| # {<br />\r\n&nbsp;&nbsp; &nbsp;if array == search<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;output.push(array)<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend # }<br />\r\n&nbsp;puts &quot;The search value is : #{output}&quot;<br />\r\n&nbsp; puts &quot;number appear : #{output.length} times&quot;</p>\r\n	19	12	5	2017-04-25 19:31:14.994409	2017-04-25 19:31:14.994409	\N	\N	\N
162	numbers =[2,3,4,5,6,7,8,-29]\r\nnumber = numbers.min\r\nputs "The smallest value is : #{number}" 	20	12	5	2017-04-25 19:31:15.000686	2017-04-25 19:31:15.000686	\N	\N	\N
163	<p>names = [&quot;sheldon&quot;,&quot;leonard&quot;,&quot;penny&quot;,&quot;rajesh&quot;,&quot;howard&quot;]<br />\r\nres =&quot;&quot;<br />\r\nr=6</p>\r\n\r\n<p>while r&gt;0<br />\r\n&nbsp;&nbsp; &nbsp;res = names.shift<br />\r\n&nbsp;&nbsp; &nbsp;names.push(res,res)<br />\r\nr=r-1<br />\r\nend<br />\r\n&nbsp; puts names.to_s</p>\r\n	13	12	3	2017-04-25 21:23:37.259826	2017-04-25 21:23:37.259826	\N	\N	\N
164	<p>names = [&quot;sheldon&quot;, &quot;leonard&quot;, &quot;penny&quot;, &quot;rajesh&quot;, &quot;howard&quot;]<br />\r\nr=6<br />\r\nres=&quot;&quot;<br />\r\nwhile r&gt;0<br />\r\n&nbsp;&nbsp; &nbsp;res = names.shift<br />\r\n&nbsp;&nbsp; &nbsp;names.push(res,res)<br />\r\nr=r-1<br />\r\nend</p>\r\n\r\n<p>puts names.to_s</p>\r\n	13	10	3	2017-04-26 02:09:02.877817	2017-04-26 02:09:02.877817	\N	\N	\N
165	<p>#Double Cola</p>\r\n\r\n<p># puts &quot;Enter your name&quot;<br />\r\n# name = gets # reads the value as a string</p>\r\n\r\n<p>names = [&quot;Sheldon&quot;, &quot;Leonard&quot;, &quot;Penny&quot;, &quot;Rajesh&quot;, &quot;Howard&quot;]<br />\r\ni=0<br />\r\nputs &quot;Enter the value of r&quot;<br />\r\nr = gets.chomp.to_i<br />\r\nwhile i &lt; r<br />\r\nnames = names.push(names.first,names.first)<br />\r\nnames.shift<br />\r\ni += 1 # incrementation<br />\r\nend</p>\r\n\r\n<p>puts &quot;Name of rth drink is #{names.first}&quot;</p>\r\n	13	9	3	2017-04-26 03:55:56.714993	2017-04-26 03:55:56.714993	\N	\N	\N
168	<p>delete</p>\r\n\r\n<p>delete_at</p>\r\n	16	13	4	2017-04-26 04:23:08.845631	2017-04-26 04:23:08.845631	\N	\N	\N
169	<p>a = []</p>\r\n	17	13	4	2017-04-26 04:23:08.847974	2017-04-26 04:23:08.847974	\N	\N	\N
170	<p>stuff</p>\r\n	18	13	4	2017-04-26 04:23:08.850486	2017-04-26 04:23:08.850486	\N	\N	\N
171	<p>puts &quot;enter the 10 values for an array&quot;<br />\r\nnumbers = []<br />\r\ni = 0<br />\r\nwhile i &lt; 10<br />\r\n&nbsp;&nbsp; &nbsp;numbers.push(gets.to_i)<br />\r\n&nbsp;&nbsp; &nbsp;i += 1<br />\r\nend</p>\r\n\r\n<p>puts &quot;the values in the array are #{numbers}&quot;<br />\r\nputs &quot;enter a value to search&quot;<br />\r\nsearch = gets.to_i<br />\r\nputs &quot;the values in the array are #{numbers}&quot;<br />\r\nsearch = numbers.find_all {|number| number == search}<br />\r\nputs &quot;number appears : #{search.count} times&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	19	10	5	2017-04-26 06:31:43.176816	2017-04-26 06:31:43.176816	\N	\N	\N
172	<p>numbers = [2,3,4,5,6,7,8]<br />\r\nsmallest = numbers[0]<br />\r\ni=0<br />\r\nnumbers.each do|number|<br />\r\n&nbsp;&nbsp; &nbsp;if numbers[i]&lt;smallest<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;smallest = numbers[i]<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;i +=1<br />\r\nend<br />\r\nputs &quot;the smallest number is : #{smallest}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	20	10	5	2017-04-26 06:31:43.181695	2017-04-26 06:31:43.181695	\N	\N	\N
173	<p>String Interpolation</p>\r\n	8	13	2	2017-04-26 11:34:55.532638	2017-04-26 11:34:55.532638	\N	\N	\N
175	<p>string methods.</p>\r\n	10	13	2	2017-04-26 11:34:55.764746	2017-04-26 11:34:55.764746	\N	\N	\N
178	<p>#&nbsp;&nbsp; Search &amp; Find Number in Array</p>\r\n\r\n<p>numbers =[1,2,3,4,5,6,7,8,9,1]<br />\r\nputs &quot;Enter the number to be searched&quot;<br />\r\nsearch_number = gets.chomp.to_i<br />\r\ncount = 0<br />\r\nnumbers.each do |number|<br />\r\n&nbsp;&nbsp; &nbsp;if number == search_number<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;count = count + 1<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend<br />\r\nputs &quot; no of times search number #{search_number} appears in the array is #{count}&quot;</p>\r\n	19	9	5	2017-04-26 12:07:46.757758	2017-04-26 12:07:46.757758	\N	\N	\N
179	numbers = [34, 15, 88, 2]\r\nsmallest_number = numbers.min\r\nputs "samllest number is #{smallest_number}"\r\n\r\nnumbers = [34, -345, -1, 100] \r\nsmallest_number = numbers.min\r\nputs "samllest number is #{smallest_number}"	20	9	5	2017-04-26 12:07:46.803932	2017-04-26 12:07:46.803932	\N	\N	\N
181	<p>Mutable method - Shift, push<br />\r\nUnmutable method - Soft</p>\r\n\r\n<p>I would like to know more on this ?&nbsp;</p>\r\n	15	11	4	2017-04-26 12:12:23.321562	2017-04-26 12:12:23.321562	\N	\N	\N
182	<p>delete - delete method will help us to delete the values from array list. In delete method, we need to pass the value i.e. &lt;array_name or variable)name&gt;.delete(value).</p>\r\n\r\n<p>Once we set the value in&nbsp;delete method,&nbsp;it will delete all the value&#39;s from array even though the value is repeated.&nbsp;</p>\r\n\r\n<p>for ex:&nbsp;new_array = [1,2,3,4,4], new_array.delete(4), it will delete the value 4 from the array.</p>\r\n\r\n<p>delete_at - delete_at method will help us to delete the values from array list. In delete_at method, we need to pass the index value instead of value i.e. &lt;array_name&gt;.delete_at(index value)</p>\r\n\r\n<p>for ex:&nbsp;new_array = [1,2,3,4,4], new_array.delete_at(1), it will delete the value 2&nbsp;from the array.</p>\r\n	16	11	4	2017-04-26 12:12:23.323304	2017-04-26 12:12:23.323304	\N	\N	\N
183	<p>Couple of method are there to create an array and below I am providing the details with examples.&nbsp;</p>\r\n\r\n<p>array = Array.new --&gt; it will create an empty array.&nbsp;</p>\r\n\r\n<p>array = [1, 2.3, &quot;one&quot;, 123456789123456789] &nbsp;-&gt; it will create an array with different data type i.e. Fixnum, float, string, bignum,etc</p>\r\n\r\n<p>irb(main):001:0&gt; array = [1, 2.3, &quot;one&quot;, 123456789123456789]<br />\r\n=&gt; [1, 2.3, &quot;one&quot;, 123456789123456789]<br />\r\nirb(main):002:0&gt; array.class<br />\r\n=&gt; Array<br />\r\nirb(main):003:0&gt; array[0].class<br />\r\n=&gt; Fixnum<br />\r\nirb(main):004:0&gt; array[1].class<br />\r\n=&gt; Float<br />\r\nirb(main):005:0&gt; array[2].class<br />\r\n=&gt; String<br />\r\nirb(main):006:0&gt; array[3].class<br />\r\n=&gt; Bignum<br />\r\nirb(main):007:0&gt;</p>\r\n	17	11	4	2017-04-26 12:12:23.325047	2017-04-26 12:12:23.325047	\N	\N	\N
184	<p>push - push method will help us to inserting the value. I believe, this will help us in implementing in array functionality.&nbsp;</p>\r\n\r\n<p>pop - pop will help us to delete or remove the last element in array. And it does not matter what type of element in an array.&nbsp;</p>\r\n\r\n<p>shift - shift method&nbsp;will help us to delete or remove the first element in array. And it does not matter what type of element in an array.</p>\r\n\r\n<p>unshift - unshift method will help us to inserting the value at the begining of the array. And it does not matter what type of element inserting into an array.</p>\r\n	18	11	4	2017-04-26 12:12:23.327397	2017-04-26 12:12:23.327397	\N	\N	\N
185	<p>Answer</p>\r\n\r\n<p>.</p>\r\n	21	13	6	2017-04-26 15:35:53.883696	2017-04-26 15:35:53.883696	\N	\N	\N
186	<p>.</p>\r\n\r\n<p>.</p>\r\n	22	13	6	2017-04-26 15:35:53.888717	2017-04-26 15:35:53.888717	\N	\N	\N
166	true	14	13	4	2017-04-26 04:23:08.839651	2017-07-04 13:09:58.568231	\N	correct	\N
174	[	9	13	2	2017-04-26 11:34:55.762692	2017-07-04 13:09:58.615542	\N	wrong	\N
176	Fixnum	11	13	2	2017-04-26 11:34:55.766454	2017-07-04 13:09:58.635048	\N	correct	\N
180	true	14	11	4	2017-04-26 12:12:23.319542	2017-07-04 13:09:58.660914	\N	correct	\N
246	true	23	4	7	2017-04-27 06:10:43.022878	2017-07-04 13:09:58.711706	\N	correct	\N
189	<p>numbers = [10,12,21,30,-10,80,-9]<br />\r\npositive = []<br />\r\nnegative = []<br />\r\nodd = []<br />\r\neven = []</p>\r\n\r\n<p>positive = numbers.find_all { |number| number &gt; 0}<br />\r\nnegative = numbers.find_all { |number| number &lt; 0}<br />\r\nodd = numbers.find_all { |number| number.odd? }<br />\r\neven = numbers.find_all { |number| number.even? }</p>\r\n\r\n<p>puts &quot;positive numbers ::: #{positive}&quot;<br />\r\nputs &quot;negative numbers ::: #{negative}&quot;<br />\r\nputs &quot;odd numbers ::: #{odd}&quot;<br />\r\nputs &quot;even numbers ::: #{even}&quot;</p>\r\n	21	3	6	2017-04-26 16:38:26.977954	2017-04-26 16:38:26.977954	\N	\N	\N
190	<p>numbers = [100,200,123,450,875,1]&nbsp;</p>\r\n\r\n<p>minimum = numbers.min<br />\r\nmaximum = numbers.max</p>\r\n\r\n<p>sum = numbers.inject(:+)<br />\r\navg = sum / numbers.length</p>\r\n\r\n<p>puts &quot;Minimum number::: #{minimum}&quot;<br />\r\nputs &quot;Maximum number::: #{maximum}&quot;<br />\r\nputs &quot;Sum ::: #{sum}&quot;<br />\r\nputs &quot;Average ::: #{avg}&quot;<br />\r\n&nbsp;</p>\r\n	22	3	6	2017-04-26 16:38:26.980155	2017-04-26 16:38:26.980155	\N	\N	\N
191	<p>#DCTef52.rb - Find positive, negative, even &amp; odd Numbers</p>\r\n\r\n<p>#Given an array : numbers = [10,12,21,30,-10,80,-9]</p>\r\n\r\n<p>#Write a program to find out how many are positive and negative and even and odd</p>\r\n\r\n<p>numbers = [10,12,21,30,-10,80,-9]</p>\r\n\r\n<p>#positive<br />\r\npositive = numbers.find_all {|number|number &gt; 0}.count<br />\r\nputs &quot;Count of Positive numbers appearing in the aray is #{positive} times&quot;</p>\r\n\r\n<p>#negative</p>\r\n\r\n<p>negative = numbers.find_all {|number|number &lt; 0}.count<br />\r\nputs &quot;Count of Negative numbers appearing in the aray is #{negative} times&quot;</p>\r\n\r\n<p>#even</p>\r\n\r\n<p>even = numbers.find_all {|number|number.even?}<br />\r\nputs &quot;Count of Even numbers appearing in the aray is #{even} times&quot;</p>\r\n\r\n<p>#odd</p>\r\n\r\n<p>odd = numbers.find_all {|number|number.odd?}<br />\r\nputs &quot;Count of odd numbers appearing in the aray is #{odd} times&quot;</p>\r\n	21	9	6	2017-04-26 16:47:36.429328	2017-04-26 16:47:36.429328	\N	\N	\N
192	<p>#DCT3e3e - Min, Max, Sum &amp; Average</p>\r\n\r\n<p>=begin<br />\r\nGiven an array [100,200,123,450,875,1]&nbsp; find the</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; minimum<br />\r\n&nbsp;&nbsp;&nbsp; maximum<br />\r\n&nbsp;&nbsp;&nbsp; sum<br />\r\n&nbsp;&nbsp;&nbsp; average<br />\r\n=end</p>\r\n\r\n<p>numbers = [100,200,123,450,875,1]<br />\r\nputs &quot;Minimum number is #{numbers.min}&quot;<br />\r\nputs &quot;Maximum number is #{numbers.max}&quot;<br />\r\n&nbsp;<br />\r\nputs &quot;sum of all numebrs is #{numbers.inject(:+)}&quot;<br />\r\nputs &quot;sum of all numebrs is #{numbers.inject(:+)/numbers.length}&quot;</p>\r\n	22	9	6	2017-04-26 16:47:36.4415	2017-04-26 16:47:36.4415	\N	\N	\N
193	<p>String interpolation is very strong and useful methodology in programming language. This functionality will do the same way as concatenate method of two values or more i.e. with variable as well. &nbsp;Below is the way to string interpolation.</p>\r\n\r\n<p>name = &ldquo;Prasad&rdquo;</p>\r\n\r\n<p>puts &ldquo;My name is #{name}&rdquo;</p>\r\n\r\n<p>String concatenating</p>\r\n\r\n<p>puts &quot;My name &quot; + name</p>\r\n	8	11	2	2017-04-26 17:45:55.12308	2017-04-26 17:45:55.12308	\N	\N	\N
195	<p>String methods :</p>\r\n\r\n<p>name = &quot;Prasad&quot;<br />\r\nputs name<br />\r\nname = &#39;Prasad&#39;<br />\r\nputs name<br />\r\nname = &quot;12345678&quot;<br />\r\nputs name<br />\r\nname = &#39;Prasad&#39;<br />\r\nputs name<br />\r\nname = &quot;Prasad&#39;s&quot;<br />\r\nputs name<br />\r\nname = &#39;Prasad\\&#39;s&#39;<br />\r\nputs name<br />\r\nname = &quot;\\&quot;Chitradurga is beautiful place\\&quot;&quot;<br />\r\nputs name<br />\r\nname = [&quot;1&quot;, &quot;Prasad&quot;]</p>\r\n	10	11	2	2017-04-26 17:45:55.131747	2017-04-26 17:45:55.131747	\N	\N	\N
201	<p>Ruby is powerful interpreter language; this has been used in build website or web portal of any e-commerce, enterprise application, and it has been used in test automation as well.</p>\r\n	6	11	1	2017-04-26 17:48:40.363961	2017-04-26 17:48:40.363961	\N	\N	\N
202	<p>Initialization, Condition and Increment.&nbsp;</p>\r\n	7	11	1	2017-04-26 17:48:40.366194	2017-04-26 17:48:40.366194	\N	\N	\N
203	<p>numbers = [10,12,21,30,-10,80,-9]<br />\r\npositive = 0<br />\r\nnegative = 0<br />\r\neven_count = 0<br />\r\nodd_count = 0<br />\r\nnumbers.each do |number|<br />\r\n&nbsp;if number &gt; 0<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;positive +=1<br />\r\n&nbsp;else<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;negative +=1<br />\r\n&nbsp;end<br />\r\nend</p>\r\n\r\n<p>numbers.each do |num|<br />\r\n&nbsp;if num.even?<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp; even_count +=1<br />\r\n&nbsp;else<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp; odd_count +=1<br />\r\n&nbsp;end<br />\r\nend</p>\r\n\r\n<p>puts &quot;Count of positive numbers: #{positive}&quot;<br />\r\nputs &quot;Count of negative numbers: #{negative}&quot;<br />\r\nputs &quot;Count of even numbers: #{even_count}&quot;<br />\r\nputs &quot;Count of odd numbers: #{odd_count}&quot;</p>\r\n	21	5	6	2017-04-26 17:57:41.078985	2017-04-26 17:57:41.078985	\N	\N	\N
204	<p>numbers = [100,200,123,450,875,1]<br />\r\nsum = 0<br />\r\naverage = 0.0</p>\r\n\r\n<p>puts &quot;Minimum is: #{numbers.min}&quot;<br />\r\nputs &quot;Maximum is: #{numbers.max}&quot;</p>\r\n\r\n<p>numbers.each do |number|<br />\r\n&nbsp;&nbsp; &nbsp;sum += number<br />\r\n&nbsp;&nbsp; &nbsp;average = sum.to_f/numbers.length.to_f<br />\r\nend</p>\r\n\r\n<p>puts &quot;Sum: #{sum}&quot;<br />\r\nputs &quot;Average: #{average}&quot;</p>\r\n	22	5	6	2017-04-26 17:57:41.081444	2017-04-26 17:57:41.081444	\N	\N	\N
205	<p>numbers = [10, 14, 15, 21, 23, 25, 28, 30, 30, 32, 34]<br />\r\nputs &quot;Array values #{numbers}&quot;<br />\r\nputs &quot;Please enter the number to search in array and diplay that its present or not&quot;<br />\r\nnumber = gets.to_i<br />\r\nputs &quot;The user entered value is #{number}&quot;<br />\r\noutput = 0</p>\r\n\r\n<p>numbers.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;if num == number<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;output += 1<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend&nbsp;</p>\r\n\r\n<p>&nbsp;if output == 0&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;puts &quot;The number is not present in the array. #{output} time is present in the array.&quot;<br />\r\n&nbsp;else&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;puts &quot;The number is present in the array. #{output} time&#39;s is present in the array.&quot;<br />\r\n&nbsp;end</p>\r\n	19	11	5	2017-04-26 18:17:07.173036	2017-04-26 18:17:07.173036	\N	\N	\N
206	<p>arr1 = [34, 15, 88, 2]<br />\r\narr2 = [34, -345, -1, 100]</p>\r\n\r\n<p>output1 = arr1.min<br />\r\nputs &quot;From the first array, the smallest value is #{output1}&quot;</p>\r\n\r\n<p>output2 = arr2.min<br />\r\nputs &quot;From the first array, the smallest value is #{output2}&quot;</p>\r\n	20	11	5	2017-04-26 18:17:07.180831	2017-04-26 18:17:07.180831	\N	\N	\N
248	<p>menu = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;Soup&quot; =&gt; 90,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;Gobi&quot; =&gt; 120,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;panner butter masala&quot; =&gt; 150,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;Roti&quot; =&gt; 30<br />\r\n}</p>\r\n\r\n<p>&nbsp;</p>\r\n	25	4	7	2017-04-27 06:10:43.026794	2017-04-27 06:10:43.026794	\N	\N	\N
249	<p>arrays :- 1 arrays will only have values in it which makes it harder to sort it out</p>\r\n\r\n<p>2 identifying value&nbsp;will diffiluct&nbsp;</p>\r\n\r\n<p>3 not b unique&nbsp;</p>\r\n\r\n<p>hashes :- 1hashes&nbsp;has &nbsp;key =&gt; value pair which makes it easy to sort out</p>\r\n\r\n<p>2 &nbsp;values will b unique &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	26	4	7	2017-04-27 06:10:43.028383	2017-04-27 06:10:43.028383	\N	\N	\N
196	Fixnum	11	11	2	2017-04-26 17:45:55.136457	2017-07-04 13:09:58.761194	\N	correct	\N
197	false	12	11	2	2017-04-26 17:45:55.139447	2017-07-04 13:09:58.77057	\N	correct	\N
199	false	2	11	1	2017-04-26 17:48:40.359178	2017-07-04 13:09:58.788203	\N	wrong	\N
200	n1 = 100	5	11	1	2017-04-26 17:48:40.361713	2017-07-04 13:09:58.796774	\N	correct	\N
247	false	24	4	7	2017-04-27 06:10:43.025086	2017-07-04 13:09:58.830501	\N	wrong	\N
251	true	23	5	7	2017-04-27 06:12:00.086648	2017-07-04 13:09:58.859848	\N	correct	\N
207	<p>=begin<br />\r\nDCTef52 - Find positive, negative, even &amp; odd Numbers</p>\r\n\r\n<p>Given an array : numbers = [10,12,21,30,-10,80,-9]</p>\r\n\r\n<p>Write a program to find out how many are positive and negative and even and odd</p>\r\n\r\n<p>=end</p>\r\n\r\n<p>numbers = [10,12,21,30,-10,80,-9]<br />\r\npositive_arr = []<br />\r\nnegative_arr = []<br />\r\neven_arr = []<br />\r\nodd_arr = []<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n#Checking the positive and negative numbers<br />\r\nnumbers.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;if num &gt; 0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;positive_arr = positive_arr.push(num)<br />\r\n&nbsp;&nbsp; &nbsp;elsif num &lt; 0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;negative_arr = negative_arr.push(num)<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>#Checking the even and odd numbers<br />\r\nnumbers.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;num = num.to_i<br />\r\n&nbsp;&nbsp; &nbsp;if num.even?<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;even_arr = even_arr.push(num.to_i)<br />\r\n&nbsp;&nbsp; &nbsp;elsif num.odd?<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;odd_arr = odd_arr.push(num.to_i)<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>puts &quot;positive numbers are in array #{positive_arr}&quot;<br />\r\nputs &quot;negative numbers are in array #{negative_arr}&quot;<br />\r\nputs &quot;even numbers are in array #{even_arr}&quot;<br />\r\nputs &quot;odd numbers are in array #{odd_arr}&quot;</p>\r\n	21	11	6	2017-04-26 18:47:17.076084	2017-04-26 18:47:17.076084	\N	\N	\N
208	<p>=begin</p>\r\n\r\n<p>DCT3e3e - Min, Max, Sum &amp; Average</p>\r\n\r\n<p>Given an array [100,200,123,450,875,1] &nbsp;find the</p>\r\n\r\n<p>minimum<br />\r\nmaximum<br />\r\nsum<br />\r\naverage</p>\r\n\r\n<p>=end</p>\r\n\r\n<p>arr1 = [100,200,123,450,875,1]<br />\r\ntotal_sum = 0<br />\r\ntotal_avg = 0</p>\r\n\r\n<p>minimum = arr1.min<br />\r\nputs &quot;minimum number in the array --&gt; #{minimum}&quot;<br />\r\nmaximum = arr1.max&nbsp;<br />\r\nputs &quot;maximum number in the array --&gt; #{maximum}&quot;</p>\r\n\r\n<p>#Checking the sum of the array<br />\r\narr1.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;total_sum += num<br />\r\nend<br />\r\nputs &quot;Total sum of array is --&gt; #{total_sum}&quot;</p>\r\n\r\n<p>#Checking the total average of array<br />\r\narray_length = arr1.length<br />\r\ntotal_avg = total_sum / array_length<br />\r\nputs &quot;The average &nbsp;--&gt; #{total_avg}&quot;</p>\r\n	22	11	6	2017-04-26 18:47:17.079591	2017-04-26 18:47:17.079591	\N	\N	\N
209	numbers = [ 1,2,3,4,5,30,50,60,70,90]\r\nputs "Enter  a number" # prompt for user to input a number\r\nnum = gets.to_i\r\nnumbers.find_all{|number| player == num}	19	15	5	2017-04-27 04:14:22.02544	2017-04-27 04:14:22.02544	\N	\N	\N
210	Array.min will give us minimum value. 	20	15	5	2017-04-27 04:14:22.028696	2017-04-27 04:14:22.028696	\N	\N	\N
213	<p>N A</p>\r\n	25	11	7	2017-04-27 06:03:16.431763	2017-04-27 06:03:16.431763	\N	\N	\N
214	<p>N A</p>\r\n	26	11	7	2017-04-27 06:03:16.433274	2017-04-27 06:03:16.433274	\N	\N	\N
218	<p>Menu = {</p>\r\n\r\n<p>&quot;Soup&quot; =&gt; 90,</p>\r\n\r\n<p>&quot;Gobi&quot; =&gt; 65-90</p>\r\n\r\n<p>&quot;panner Butter Masala&quot; =&gt; 150</p>\r\n\r\n<p>&quot;Roti&quot; =&gt; 30</p>\r\n\r\n<p>&nbsp;</p>\r\n	25	15	7	2017-04-27 06:06:19.941331	2017-04-27 06:06:19.941331	\N	\N	\N
219	<p>Arrays is collections of data, Hash is a collcetion of&nbsp;Key value pai.</p>\r\n\r\n<p>Hash is unordered object index collection of objects, Arrays are ordered object index collection of objects.</p>\r\n	26	15	7	2017-04-27 06:06:19.94331	2017-04-27 06:06:19.94331	\N	\N	\N
223	<p>menu ={</p>\r\n\r\n<p>&quot;soup&quot; =&gt; 90 ,</p>\r\n\r\n<p>&quot;gobi&quot; =&gt; &quot;65-120&quot;,</p>\r\n\r\n<p>&quot;paneer butter masala =&gt; 150</p>\r\n\r\n<p>}</p>\r\n\r\n<p>menu.each do |key,value|<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{key} : INR #{value}&quot;<br />\r\nend&nbsp;&nbsp; &nbsp;</p>\r\n	25	12	7	2017-04-27 06:08:06.50507	2017-04-27 06:08:06.50507	\N	\N	\N
224	<p>array : ordered &nbsp; &nbsp; ; &nbsp; hash : unordered</p>\r\n\r\n<p>array : require index to retrive data &nbsp; &nbsp;; hash : needs key, value &nbsp; &nbsp;</p>\r\n	26	12	7	2017-04-27 06:08:06.507105	2017-04-27 06:08:06.507105	\N	\N	\N
228	<p>menu = {</p>\r\n\r\n<p>&quot;soup&quot; =&gt; 90,</p>\r\n\r\n<p>&quot;Gobi&quot; =&gt; &quot;65-120&quot;,</p>\r\n\r\n<p>&quot;Panner Butter Masala&quot; =&gt; 150,</p>\r\n\r\n<p>&quot;Roti&quot; =&gt; 30</p>\r\n\r\n<p>}</p>\r\n	25	9	7	2017-04-27 06:08:08.071644	2017-04-27 06:08:08.071644	\N	\N	\N
229	<p>Arrays are used for ordered collection of objects wheres Hashed are used for un ordered objects having key, value pair</p>\r\n\r\n<p>Deeper data structure becomes difficult with Array, whereas Hashes are easy</p>\r\n\r\n<p>&nbsp;</p>\r\n	26	9	7	2017-04-27 06:08:08.073814	2017-04-27 06:08:08.073814	\N	\N	\N
233	<p>menu.each do |key, value|</p>\r\n\r\n<p>puts &quot;#{key} : #{value}</p>\r\n\r\n<p>end</p>\r\n	25	8	7	2017-04-27 06:08:18.248583	2017-04-27 06:08:18.248583	\N	\N	\N
234	<p>- Arrays are ordered, integer indexed list of objects</p>\r\n\r\n<p>&nbsp; Hashes are unordered, object indexed collection of objects.</p>\r\n\r\n<p>- Arrays can have multiple occurances of same value</p>\r\n\r\n<p>&nbsp; Hashes can only have unique occurences of one value.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	26	8	7	2017-04-27 06:08:18.250064	2017-04-27 06:08:18.250064	\N	\N	\N
238	<p>menu ={</p>\r\n\r\n<p>&quot;soup&quot; =&gt; 90,</p>\r\n\r\n<p>&quot;gobi 65&quot; =&gt; 120,</p>\r\n\r\n<p>&quot;panner butter masala &quot; =&gt; 150,</p>\r\n\r\n<p>&quot;roti&quot; =&gt; 30</p>\r\n\r\n<p>}</p>\r\n\r\n<p>puts &quot;menu items : #{menu.keys}&quot;</p>\r\n\r\n<p>menu.each do |key,value|</p>\r\n\r\n<p>puts &quot;#{key}&nbsp; : INR #{value}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	25	10	7	2017-04-27 06:09:14.609273	2017-04-27 06:09:14.609273	\N	\N	\N
239	<p>array is an ordered integer indexed collection of objects</p>\r\n\r\n<p>hash is an unordered object index collection of objects</p>\r\n\r\n<p>to retrieve data from array we have to use index</p>\r\n\r\n<p>but in hash to retrieve data we can use key value instead of index</p>\r\n	26	10	7	2017-04-27 06:09:14.610979	2017-04-27 06:09:14.610979	\N	\N	\N
243	<p>menu = {</p>\r\n\r\n<p>&quot;Soup&quot; =&gt; &quot;90&quot;,</p>\r\n\r\n<p>&quot;Gobi 65&quot; =&gt; &quot;120&quot;,</p>\r\n\r\n<p>&quot;Panner Butter Masala&quot; =&gt; &quot;150&quot;,</p>\r\n\r\n<p>&quot;Roti&quot; =&gt; &quot;30&quot;</p>\r\n\r\n<p>}</p>\r\n	25	3	7	2017-04-27 06:09:34.344825	2017-04-27 06:09:34.344825	\N	\N	\N
244	<p>Array is ordered, integered, collection of object.</p>\r\n\r\n<p>hash is unordered, indexed, collection of object.</p>\r\n\r\n<p>In array there is only value.</p>\r\n\r\n<p>In hash there is key value pair.</p>\r\n\r\n<p>&nbsp;</p>\r\n	26	3	7	2017-04-27 06:09:34.346666	2017-04-27 06:09:34.346666	\N	\N	\N
212	false	24	11	7	2017-04-27 06:03:16.430195	2017-07-04 13:09:58.912215	\N	wrong	\N
216	true	23	15	7	2017-04-27 06:06:19.936855	2017-07-04 13:09:58.949084	\N	correct	\N
217	true 	24	15	7	2017-04-27 06:06:19.939041	2017-07-04 13:09:58.957969	\N	correct	\N
221	true	23	12	7	2017-04-27 06:08:06.501554	2017-07-04 13:09:58.990985	\N	correct	\N
222	true 	24	12	7	2017-04-27 06:08:06.503231	2017-07-04 13:09:59.002214	\N	correct	\N
225	when both the key and values matter to us	27	12	7	2017-04-27 06:08:06.508866	2017-07-04 13:09:59.034494	\N	correct	\N
226	true	23	9	7	2017-04-27 06:08:08.068199	2017-07-04 13:09:59.075516	\N	correct	\N
227	false	24	9	7	2017-04-27 06:08:08.069943	2017-07-04 13:09:59.123504	\N	wrong	\N
230	when both the key and values matter to us	27	9	7	2017-04-27 06:08:08.076872	2017-07-04 13:09:59.190534	\N	correct	\N
231	true	23	8	7	2017-04-27 06:08:18.244956	2017-07-04 13:09:59.207847	\N	correct	\N
232	true 	24	8	7	2017-04-27 06:08:18.246687	2017-07-04 13:09:59.225108	\N	correct	\N
236	true	23	10	7	2017-04-27 06:09:14.605616	2017-07-04 13:09:59.257337	\N	correct	\N
237	false	24	10	7	2017-04-27 06:09:14.607473	2017-07-04 13:09:59.265907	\N	wrong	\N
240	when both the key and values matter to us	27	10	7	2017-04-27 06:09:14.61257	2017-07-04 13:09:59.294271	\N	correct	\N
241	true	23	3	7	2017-04-27 06:09:34.341157	2017-07-04 13:09:59.303464	\N	correct	\N
242	false	24	3	7	2017-04-27 06:09:34.343035	2017-07-04 13:09:59.313474	\N	wrong	\N
253	<p>MENU = { &quot;Soup&quot; =&gt; 90,</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;Gobi 65&quot; =&gt; 120,</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;Panner Butter Masala&quot; =&gt; 150,</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Roti&quot; =&gt; 30</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</p>\r\n	25	5	7	2017-04-27 06:12:00.101902	2017-04-27 06:12:00.101902	\N	\N	\N
254	<p><strong>Arrays:</strong></p>\r\n\r\n<p>1. Arrays are oredered integer indexed collection of objects. &nbsp;</p>\r\n\r\n<p>2.Arrays can be created with arrayname = [] or arrayname = Array.new&nbsp;</p>\r\n\r\n<p>3.Arrays will have only values&nbsp;</p>\r\n\r\n<p><strong>Hashes:</strong></p>\r\n\r\n<p>1. Hashes are unordered object indexed collection of objects.</p>\r\n\r\n<p>2.Hashes can be created with hashname = {} or hashname = Hash.new</p>\r\n\r\n<p>3.Hashes will have keys and values</p>\r\n\r\n<p>&nbsp;</p>\r\n	26	5	7	2017-04-27 06:12:00.107305	2017-04-27 06:12:00.107305	\N	\N	\N
258	<p>Menu = {</p>\r\n\r\n<p>&quot;Soup&quot; =&gt; 90</p>\r\n\r\n<p>&quot;Gobi 65&quot; =&gt; 120</p>\r\n\r\n<p>&quot;Panner Butter Masala&quot; =&gt; 150</p>\r\n\r\n<p>&quot;Roti&quot; =&gt; 30</p>\r\n\r\n<p>}</p>\r\n	25	2	7	2017-04-27 06:12:38.73131	2017-04-27 06:12:38.73131	\N	\N	\N
259	<p>Array is an ordered, integer indexed, collection of objects, not necessary to have key for each value, comapratevely difficult to deal with repeated large number of values.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Hash is an unordered, object indexed, collection of objects, necessary to have key for each value, easy to deal with repeated large number&nbsp;of values.</p>\r\n	26	2	7	2017-04-27 06:12:38.734509	2017-04-27 06:12:38.734509	\N	\N	\N
263	<p>menu {</p>\r\n\r\n<p>&quot;soup&quot; =&gt; 90,</p>\r\n\r\n<p>&quot;gobi 65&quot; =&gt; 120,</p>\r\n\r\n<p>&quot;panner butter masala&quot; =&gt; 150,</p>\r\n\r\n<p>&quot;roti&quot; =&gt;30</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n	25	7	7	2017-04-27 06:18:07.774584	2017-04-27 06:18:07.774584	\N	\N	\N
264	<p>an array is a order,integer index,collection of objects.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>an hash is an un order, object index, collection of objects</p>\r\n	26	7	7	2017-04-27 06:18:07.777078	2017-04-27 06:18:07.777078	\N	\N	\N
266	<p>numbers = [10,12,21,30,-10,80,-9]<br />\r\npositive_numbers = []<br />\r\nnegative_numbers = []<br />\r\neven_numbers = []<br />\r\nodd_numbers = []</p>\r\n\r\n<p>positive_numbers = numbers.find_all{|number| number &gt; 0}<br />\r\nnegative_numbers = numbers.find_all{|number| number &lt; 0}<br />\r\neven_numbers = numbers.find_all{|number| number.even?}<br />\r\nodd_numbers = numbers.find_all{|number| number.odd?}</p>\r\n\r\n<p>puts &quot;Positive numbers : #{positive_numbers}&quot;<br />\r\nputs &quot;Negative numbers : #{negative_numbers}&quot;<br />\r\nputs &quot;Even numbers : #{even_numbers}&quot;<br />\r\nputs &quot;Odd numbers : #{odd_numbers}</p>\r\n	21	8	6	2017-04-27 07:18:29.202218	2017-04-27 07:18:29.202218	\N	\N	\N
267	<p>number = [100,200,123,450,875,1]<br />\r\nmin = number[0]<br />\r\nmax = number[0]<br />\r\nsum = 0<br />\r\naverage = 0</p>\r\n\r\n<p>number.each do|num_min|<br />\r\n&nbsp;&nbsp; &nbsp;if num_min &lt; min<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;min = num_min<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>number.each do|num_max|<br />\r\n&nbsp;&nbsp; &nbsp;if num_max &gt; max<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;max = num_max<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>number.each do|num|<br />\r\n&nbsp;&nbsp; &nbsp;sum += num<br />\r\nend</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;average = sum/number.count</p>\r\n\r\n<p>puts &quot;minimum value of the string : #{min}&quot;<br />\r\nputs &quot;maximum value of the string : #{max}&quot;<br />\r\nputs &quot;sum of the array is : #{sum}&quot;<br />\r\nputs &quot;average of the array is: #{average}</p>\r\n	22	8	6	2017-04-27 07:18:29.204814	2017-04-27 07:18:29.204814	\N	\N	\N
268	<p>numbers = [10,12,21,30,-10,80,-9]<br />\r\nnumbers.length<br />\r\nnpositive=0<br />\r\nnnegative=0<br />\r\neven=0<br />\r\nodd=0<br />\r\nnumbers.each do|number|<br />\r\n&nbsp;&nbsp; &nbsp;if number&gt;=0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;npositive +=1<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;nnegative +=1<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;if number%2 == 0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;even +=1<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;odd +=1<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend<br />\r\nputs &quot;poitive values are : #{npositive}&quot;<br />\r\nputs &quot;negative values are : #{nnegative}&quot;<br />\r\nputs &quot;even numbers are : #{even}&quot;<br />\r\nputs &quot;odd numbers are : #{odd}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	21	10	6	2017-04-27 12:59:47.555543	2017-04-27 12:59:47.555543	\N	\N	\N
269	<p>numbers = [100,200,123,875,450,1]<br />\r\nminimum = numbers[0]<br />\r\nmaximum = numbers[0]<br />\r\ni=0<br />\r\nnumbers.each do|number|<br />\r\n&nbsp;&nbsp; &nbsp;if numbers[i]&lt;minimum<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;minimum = numbers[i]<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;if numbers[i]&gt;maximum<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;maximum = numbers[i]<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;i +=1<br />\r\nend<br />\r\nputs &quot;the minimum number is : #{minimum}&quot;<br />\r\nputs &quot;the maximum number is : #{maximum}&quot;</p>\r\n\r\n<p>sum = 0<br />\r\naverage = 0<br />\r\nnumbers.each do|number|<br />\r\n&nbsp;&nbsp; &nbsp;sum +=number<br />\r\n&nbsp;&nbsp; &nbsp;average = sum/numbers.length<br />\r\nend<br />\r\nputs &quot;the sum is : #{sum}&quot;<br />\r\nputs &quot;the average is : #{average}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	22	10	6	2017-04-27 12:59:47.560103	2017-04-27 12:59:47.560103	\N	\N	\N
270	<p>numbers = [10,12,21,30,-10,80,-9]<br />\r\nnumber = numbers.length<br />\r\npositive=0<br />\r\nnegative=0<br />\r\neven=0<br />\r\nodd=0<br />\r\nnumbers.each do|num|&nbsp;<br />\r\nif num&gt;=0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;positive +=1<br />\r\n&nbsp;&nbsp; &nbsp;else&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;negative +=1<br />\r\nend<br />\r\nif num%2 == 0<br />\r\n&nbsp;&nbsp; &nbsp;even +=1<br />\r\n&nbsp; &nbsp;else<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; odd +=1<br />\r\nend<br />\r\nend<br />\r\nputs &quot;positive values: #{positive}&quot; &nbsp;<br />\r\nputs &quot;negative values: #{negative}&quot;&nbsp;<br />\r\nputs &quot;even values: #{even}&quot;&nbsp;<br />\r\nputs &quot;odd values: #{odd}&quot; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;</p>\r\n	21	12	6	2017-04-27 13:25:23.391708	2017-04-27 13:25:23.391708	\N	\N	\N
271	<p>numbers = [100,200,123,875,450,1]<br />\r\nnumber = numbers.min<br />\r\nputs &quot;The smallest value is : #{number}&quot;&nbsp;<br />\r\nnum = numbers.max&nbsp;<br />\r\nputs &quot;The max value is : #{num}&quot;<br />\r\nsum = numbers.inject(:+)<br />\r\nputs &quot;sum : #{sum}&quot;<br />\r\navg = sum/numbers.length<br />\r\nputs &quot;average : #{avg}&quot;</p>\r\n	22	12	6	2017-04-27 13:25:23.395206	2017-04-27 13:25:23.395206	\N	\N	\N
272	<p>n = [10,12,21,30,-10,80,-9]<br />\r\nnumbers = n.select{|x| x &gt; 0}<br />\r\nh = {<br />\r\n&nbsp; even: numbers.count(&amp;:even?),<br />\r\n&nbsp; odd: numbers.count(&amp;:odd?),<br />\r\n&nbsp; positive: numbers.count,<br />\r\n&nbsp; negative: n.count{ |x| x &lt; 0 }<br />\r\n}<br />\r\nputs &nbsp;h</p>\r\n	21	4	6	2017-04-27 15:29:50.39202	2017-04-27 15:29:50.39202	\N	\N	\N
256	true	23	2	7	2017-04-27 06:12:38.725833	2017-07-04 13:09:59.372707	\N	correct	\N
257	true 	24	2	7	2017-04-27 06:12:38.72809	2017-07-04 13:09:59.400969	\N	correct	\N
261	true	23	7	7	2017-04-27 06:18:07.769067	2017-07-04 13:09:59.453935	\N	correct	\N
262	true 	24	7	7	2017-04-27 06:18:07.772137	2017-07-04 13:09:59.469946	\N	correct	\N
265	when we have a large set of data 	27	7	7	2017-04-27 06:18:07.779528	2017-07-04 13:09:59.495772	\N	wrong	\N
319	maybe	35	12	13	2017-05-03 06:17:25.736114	2017-07-04 13:09:59.553555	\N	wrong	\N
320	true	36	12	13	2017-05-03 06:17:25.738598	2017-07-04 13:09:59.563853	\N	correct	\N
273	<p>n = [100,200,123,450,875,1]</p>\r\n\r\n<p>puts &quot;max value : #{n.max}&quot;<br />\r\nputs &quot;min value : #{n.min}&quot;<br />\r\nputs &quot;sum : #{n.inject(:+)}&quot;</p>\r\n\r\n<p>average = n.inject(:+) / n.size.to_f<br />\r\nputs average<br />\r\n&nbsp;</p>\r\n	22	4	6	2017-04-27 15:29:50.394955	2017-04-27 15:29:50.394955	\N	\N	\N
274	<p><strong>#WeAreOnARollAtDctAcademy</strong></p>\r\n	28	13	8	2017-04-28 03:35:28.714878	2017-04-28 03:35:28.714878	\N	\N	\N
275	<p><strong>#WeAreOnARollAtDctAcademy&quot;</strong></p>\r\n	29	13	8	2017-04-28 03:35:28.718939	2017-04-28 03:35:28.718939	\N	\N	\N
276	<p><code>This</code></p>\r\n\r\n<p><code>&nbsp;&nbsp; Is&nbsp; a</code></p>\r\n\r\n<p><code>New Answer.</code></p>\r\n	30	13	9	2017-04-28 12:54:33.941634	2017-04-28 12:54:33.941634	\N	\N	\N
277	<p>array_values = [[&quot;white&quot;, &quot;goodness&quot;], [&quot;blue&quot;, &quot;tranquility&quot;]]<br />\r\nhash_value = {}</p>\r\n\r\n<p>array_values.each do |array_value1,array_value2|<br />\r\n&nbsp; hash_value[array_value1] = array_value2<br />\r\nend</p>\r\n\r\n<p>puts &quot;#{hash_value}&quot;</p>\r\n	30	3	9	2017-04-29 11:08:54.504437	2017-04-29 11:08:54.504437	\N	\N	\N
278	<p>puts &quot;Enter a string&quot;<br />\r\ninput_string = gets.chomp<br />\r\ninput_string = input_string.split(&quot; &quot;)<br />\r\noutput_string = &quot;#&quot;</p>\r\n\r\n<p>input_string.each do |is|<br />\r\n&nbsp; output_string += is.capitalize<br />\r\nend<br />\r\nputs &quot;#{output_string}&quot;</p>\r\n	28	3	8	2017-04-30 10:05:47.847436	2017-04-30 10:05:47.847436	\N	\N	\N
279	<p>require &#39;pry&#39;<br />\r\nwinner_list = [<br />\r\n&nbsp; {&quot;season&quot; =&gt; &quot;1999-00&quot;, &quot;team&quot; =&gt; &quot;Real Madrid&quot;, &quot;country&quot; =&gt; &quot;Spain&quot;},<br />\r\n&nbsp; {&quot;season&quot; =&gt; &quot;2000-01&quot;, &quot;team&quot; =&gt; &quot;Bayern Munich&quot;, &quot;country&quot; =&gt; &quot;Germany&quot;},<br />\r\n&nbsp; {&quot;season&quot; =&gt; &quot;2001-02&quot;, &quot;team&quot; =&gt; &quot;Real Madrid&quot;, &quot;country&quot; =&gt; &quot;Spain&quot;},<br />\r\n&nbsp; {&quot;season&quot; =&gt; &quot;2002-03&quot;, &quot;team&quot; =&gt; &quot;Milan&quot;, &quot;country&quot; =&gt; &quot;Italy&quot;},<br />\r\n&nbsp; {&quot;season&quot; =&gt; &quot;2003-04&quot;, &quot;team&quot; =&gt; &quot;Porto&quot;, &quot;country&quot; =&gt; &quot;Portugal&quot;}<br />\r\n]<br />\r\nputs &quot;Enter country&quot;<br />\r\nwinning_country = gets.chomp<br />\r\ncount = 0<br />\r\nwinner_list.each do |wl|<br />\r\n&nbsp; if wl.has_key?(&quot;country&quot;) &amp;&amp; wl.has_value?(winning_country)<br />\r\n&nbsp; &nbsp; count += 1<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts count</p>\r\n	29	3	8	2017-04-30 10:05:47.913335	2017-04-30 10:05:47.913335	\N	\N	\N
167	<p>push pop shift unshift</p>\r\n	15	13	4	2017-04-26 04:23:08.843223	2017-04-30 17:02:10.439331	1	\N	\N
282	<p>Key&nbsp;</p>\r\n\r\n<p>Value</p>\r\n\r\n<p>Pair</p>\r\n	25	13	7	2017-05-01 04:34:23.991335	2017-05-01 04:34:23.991335	\N	\N	\N
283	<p>Array</p>\r\n\r\n<p>Hashes</p>\r\n	26	13	7	2017-05-01 04:34:23.996587	2017-05-01 04:34:23.996587	\N	\N	\N
285	<p>restaurant = {<br />\r\n&nbsp; &quot;name&quot; =&gt; &quot;Truffles&quot;,<br />\r\n&nbsp; &quot;location&quot; =&gt; &quot;Koramangala 5th Block&quot;,<br />\r\n&nbsp; &quot;address&quot; =&gt; &quot;28, 4th &#39;B&#39; Cross, Koramangala 5th Block, Bangalore&quot;,<br />\r\n&nbsp; &quot;cuisines&quot; =&gt; [&quot;American&quot;, &quot;Burger&quot;, &quot;Cafe&quot;],<br />\r\n&nbsp; &quot;highlights&quot; =&gt; [&quot;Home Delivery&quot;, &quot;Table booking not available&quot;],<br />\r\n&nbsp; &quot;rating&quot; =&gt; 4.7,<br />\r\n&nbsp; &quot;reviews&quot; =&gt; [<br />\r\n&nbsp; &nbsp; {<br />\r\n&nbsp; &nbsp; &nbsp; &quot;name&quot; =&gt; &quot;ROHIT KHANNA&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &quot;rated&quot; =&gt; 4.0,<br />\r\n&nbsp; &nbsp; &nbsp; &quot;body&quot; =&gt; &quot;Now they hv opened lot of branches in city, I have visited Kormangla outlet twice. They have expanded their Kormangla one. Initially it used to be very small, but even now you have to spend at least half hour in waiting.<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; The food is heaven here. American Burgers are must try here. Think twice before you select burger size!!The ice creams are too good and can be easily shared between two people.<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; The cost is reasonable.<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Although the place is always full, service is always quick.&quot;<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; {<br />\r\n&nbsp; &nbsp; &nbsp; &quot;name&quot; =&gt; &quot;Abhigna U Kulkarni&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &quot;rated&quot; =&gt; 5.0,<br />\r\n&nbsp; &nbsp; &nbsp; &quot;body&quot; =&gt; &quot;Truffles never disappoints you! This place is now huge but still crowded almost waited for 15-20 min for a table but it was worth it.&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; They&#39;ve got variety and taste.&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Every item on the menu is sooo yummy!&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Try not to miss the italian alfredo pasta .<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; Ive come here so many times and yet feel lik coming bak again and again. Brilliant food&quot;<br />\r\n&nbsp; &nbsp; },<br />\r\n&nbsp; &nbsp; {<br />\r\n&nbsp; &nbsp; &nbsp; &quot;name&quot; =&gt; &quot;Deepam Kanjani&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &quot;rated&quot; =&gt; 4.5,<br />\r\n&nbsp; &nbsp; &nbsp; &quot;body&quot; =&gt; &quot;As usual, this place is amazing. I wonder why didn&#39;t I review it before. The Rooster Burger is so filling that you will not feel like having anything at all after that. The red velvet sundae is awesome. The new ambience is great, service is a little slow.&quot;<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; ]<br />\r\n}</p>\r\n	31	3	10	2017-05-01 06:34:24.624044	2017-05-01 06:34:24.624044	\N	\N	\N
286	<p>{<br />\r\n&nbsp; &quot;name&quot; =&gt; &quot;truffles&quot;,<br />\r\n&nbsp; &quot;location&quot;=&gt; &quot;koramangala-5th-block&quot;,<br />\r\n&nbsp; &quot;address&quot;=&gt; &quot;28, 4th &#39;B&#39; Cross, Koramangala 5th Block, Bangalore&quot;,<br />\r\n&nbsp; &quot;cuisines&quot; =&gt; [&quot;American&quot;, &quot;Burger&quot;, &quot;Cafe&quot;],<br />\r\n&nbsp; &quot;rating number&quot; =&gt; 4.7/5,<br />\r\n&nbsp; &quot;highlights&quot; =&gt; [&quot;Home Delivery&quot;, &quot;Table booking not available&quot;],<br />\r\n&nbsp; &quot;reviews&quot;=&gt; [<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;name&quot;=&gt; &quot;ROHIT KHANNA&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;rating&quot;=&gt; 4.0,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;body&quot;=&gt; &quot;Now they hv opened lot of branches in city, I have visited Kormangla outlet twice. They have expanded their Kormangla one. Initially it used to be very small, but even now you have to spend at least half hour in waiting.<br />\r\nThe food is heaven here. American Burgers are must try here. Think twice before you select burger size!!The ice creams are too good and can be easily shared between two people.<br />\r\nThe cost is reasonable.<br />\r\nAlthough the place is always full, service is always quick&quot;<br />\r\n&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;name&quot;=&gt; &quot;Abhigna U Kulkarni&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;rating&quot;=&gt; 5.0,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;body&quot;=&gt; &quot;Truffles never disappoints you! This place is now huge but still crowded almost waited for 15-20 min for a table but it was worth it.<br />\r\nThey&#39;ve got variety and taste.<br />\r\nEvery item on the menu is sooo yummy!<br />\r\nTry not to miss the italian alfredo pasta .<br />\r\nIve come here so many times and yet feel lik coming bak again and again. Brilliant food.&quot;<br />\r\n&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; &quot;Deepam Kanjani&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;rating&quot; =&gt; 4.5,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;body&quot; =&gt; &quot;As usual, this place is amazing. I wonder why didn&#39;t I review it before. The Rooster Burger is so filling that you will not feel like having anything at all after that. The red velvet sundae is awesome. The new ambience is great, service is a little slow.&quot;<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp; ]<br />\r\n}</p>\r\n\r\n<p>&nbsp;</p>\r\n	31	9	10	2017-05-01 06:34:33.272789	2017-05-01 06:34:33.272789	\N	\N	\N
287	<p>{<br />\r\n&nbsp; &quot;name&quot; =&gt; &quot;truffles&quot;,<br />\r\n&nbsp; &quot;location&quot; =&gt; &quot;Koramangla-5th block&quot;,<br />\r\n&nbsp; &quot;address&quot; =&gt; &quot;28, 4th &#39;B&#39; Cross, Koramangala 5th Block, Bangalore&quot;,<br />\r\n&nbsp; &quot;cuisines&quot; =&gt; &quot;[American], [Burger], [Cafe]&quot;,<br />\r\n&nbsp; &quot;rating&quot; =&gt; 4.7,<br />\r\n&nbsp; &quot;highlights&quot; =&gt; &quot;[Home Delivery], [Table booking not available]&quot;<br />\r\n&nbsp; &quot;reviews&quot; =&gt; [<br />\r\n&nbsp; (<br />\r\n&nbsp; &nbsp;&quot;name&quot; =&gt; &quot;Rohit Khanna&quot;<br />\r\n&nbsp; &nbsp; &quot;rating&quot; =&gt; 4.0<br />\r\n&nbsp; &nbsp; &quot;body&quot; =&gt; &quot;This is one of the places to visit if u r in Bangalore. You just can&#39;t afford to miss it!<br />\r\n&nbsp; &nbsp; Now they hv opened lot of branches in city, I have visited Kormangla outlet twice.<br />\r\n&nbsp; &nbsp; They have expanded their Kormangla one.<br />\r\n&nbsp; &nbsp; Initially it used to be very small, but even now you have to spend at least half hour in waiting.&quot;<br />\r\n&nbsp; &nbsp; ),<br />\r\n&nbsp; (<br />\r\n&nbsp; &quot;name&quot; =&gt; &quot;Abhigna U Kulkarni&quot;<br />\r\n&nbsp; &quot;rating&quot; =&gt; 5.0<br />\r\n&nbsp; &quot;body&quot; =&gt; &quot;Truffles never disappoints you! This place is now huge but still crowded almost waited for 15-20 min for a table but it was worth it.<br />\r\nThey&#39;ve got variety and taste.<br />\r\nEvery item on the menu is sooo yummy!<br />\r\nTry not to miss the italian alfredo pasta .<br />\r\nIve come here so many times and yet feel lik coming bak again and again. Brilliant food.&quot;<br />\r\n&nbsp; ),<br />\r\n(<br />\r\n&nbsp; &quot;name&quot; =&gt; &quot;Deepam Kanjani&quot;<br />\r\n&nbsp; &quot;rating&quot; =&gt; 4.5<br />\r\n&nbsp; &quot;body&quot; =&gt; &quot;As usual, this place is amazing. I wonder why didn&#39;t I review it before.<br />\r\n&nbsp; &nbsp;The Rooster Burger is so filling that you will not feel like having anything at all after that.<br />\r\n&nbsp; &nbsp;The red velvet sundae is awesome.&quot;<br />\r\n&nbsp; &nbsp;)<br />\r\n&nbsp; ]</p>\r\n\r\n<p>}</p>\r\n	31	16	10	2017-05-01 06:51:51.705341	2017-05-01 06:51:51.705341	\N	\N	\N
321	(*) denotes variable number of parameter.\r\ndef cart_total(*prices) # * denotes variable number of parameters\r\n\tsum=0\r\n\tprices.each do |price|\r\n\t\tsum += price\r\n\tend\r\n\treturn sum\r\nend\r\nputs cart_total(1)\r\nputs cart_total(1,5)\r\nputs cart_total(10,12,12)	37	12	13	2017-05-03 06:17:25.740358	2017-05-03 06:17:25.740358	\N	\N	\N
322	block variable \r\nlocal variable\r\nglobal variable\r\ninstance variable\r\nclass variable	38	12	13	2017-05-03 06:17:25.742012	2017-05-03 06:17:25.742012	\N	\N	\N
281	false	24	13	7	2017-05-01 04:34:23.98731	2017-07-04 13:09:59.632283	\N	wrong	\N
323	true	33	17	13	2017-05-03 06:17:32.600757	2017-07-04 13:09:59.685136	\N	correct	\N
324	true	34	17	13	2017-05-03 06:17:32.60258	2017-07-04 13:09:59.694712	\N	correct	\N
325	false	35	17	13	2017-05-03 06:17:32.604309	2017-07-04 13:09:59.713531	\N	correct	\N
288	<p>restaurant = {<br />\r\n&quot;name&quot; =&gt; &quot;truffles&quot;,<br />\r\n&quot;location&quot; =&gt; &quot;koramangala 5 th block&quot;,<br />\r\n&quot;address&quot; =&gt;<br />\r\n&quot;28, 4th &#39;B&#39; Cross, Koramangala 5th Block, Bangalore&quot;,<br />\r\n&quot;cuisines&quot; =&gt; [&quot;american&quot;,&quot;burger&quot;,&quot;cafe&quot;],<br />\r\n&quot;ratingnumber&quot; =&gt; &quot;4.7/5&quot;,<br />\r\n&quot;highlights&quot; =&gt; [&quot;home delivery&quot;,&quot;table booking not available&quot;],<br />\r\n&quot;reviews&quot; =&gt; [<br />\r\n&nbsp;&nbsp; &nbsp;&#39;{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; &quot;rohit&quot; ,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;rating&quot; =&gt; &quot;4.0&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;body&quot; =&gt; &quot;Now they hv opened lot of branches in city, I have visited Kormangla outlet twice. They have expanded their Kormangla one. Initially it used to be very small, but even now you have to spend at least half hour in waiting.<br />\r\nThe food is heaven here. American Burgers are must try here. Think twice before you select burger size!!The ice creams are too good and can be easily shared between two people.<br />\r\nThe cost is reasonable.&quot;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; &quot;abhigna&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;rating&quot; =&gt; &quot;5.0&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;body&quot; =&gt; &quot;ruffles never disappoints you! This place is now huge but still crowded almost waited for 15-20 min for a table but it was worth it.<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; &quot;deepam&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;rating&quot; =&gt; &quot;4.5&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;body&quot; =&gt; &quot;As usual, this place is amazing. &quot;<br />\r\n}&#39;<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;]<br />\r\n}<br />\r\nputs restaurant</p>\r\n\r\n<p>&nbsp;</p>\r\n	31	10	10	2017-05-01 06:56:56.392318	2017-05-01 06:56:56.392318	\N	\N	\N
289	<p>hotels = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; &quot;Truffels&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;location&quot; =&gt; &quot;Koramangala 5th Block&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;address&quot; =&gt; &quot;28, 4th &#39;B&#39; Cross, Koramangala 5th Block, Bangalore&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;phone_number&quot; =&gt; &quot;080 49652818&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;cuisines&quot; =&gt; [&quot;American, Burger, Cafe&quot;],<br />\r\n&nbsp;&nbsp; &nbsp;&quot;rating_number&quot; =&gt; 4.7,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;highlights&quot; =&gt; [&quot;Home Delivery,Table booking not available&quot;],<br />\r\n&nbsp;&nbsp; &nbsp;&quot;review&quot; =&gt;<br />\r\n&nbsp;&nbsp; &nbsp;[<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; &quot;rohit&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;rating&quot; =&gt; 4.5,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;body&quot; =&gt; [&quot;Every item on the menu is sooo yummy! Ive come here so many times and yet feel lik coming bak again and again. Brilliant food.&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;]<br />\r\n}</p>\r\n	31	4	10	2017-05-01 06:56:57.085946	2017-05-01 06:56:57.085946	\N	\N	\N
290	restaurants = {\r\n\t"name" => "traffules",\r\n\t"location" => "bangalore",\r\n\t"address" => "kormangala 5th block",\r\n\t"cuisines" => ["American","burger","cafe"],\r\n\t"rating" => "4.7/5",\r\n\t"highligths" => ["home delivery","table booking not available"],\r\n\t"reviews" => [ '{\r\n\t\t"name" => "Rohit Khanna" ,\r\n\t\t"rating" => "4" ,\r\n\t\t"body" => "Now they hv opened lot of branches in city, I have visited Kormangla outlet twice. They have expanded their Kormangla one. Initially it used to be very small, but even now you have to spend at least half hour in waiting.\r\nThe food is heaven here. American Burgers are must try here. Think twice before you select burger size!!The ice creams are too good and can be easily shared between two people.\r\nThe cost is reasonable.\r\nAlthough the place is always full, service is always quick." \r\n\r\n        "name" => "shrutti Khanna",\r\n\t\t"rating" => "5",\r\n\t\t"body" => "Now they hv opened lot of branches in city, I have visited Kormangla outlet twice. They have expanded their Kormangla one. Initially it used to be very small, but even now you have to spend at least half hour in waiting.\r\nThe food is heaven here. American Burgers are must try here. Think twice before you select burger size!!The ice creams are too good and can be easily shared between two people.\r\nThe cost is reasonable.\r\nAlthough the place is always full, service is always quick."\r\n\r\n        "name" => "rajesh Khanna",\r\n\t\t"rating" => "4",\r\n\t\t"body" => "Now they hv opened lot of branches in city, I have visited Kormangla outlet twice. They have expanded their Kormangla one. Initially it used to be very small, but even now you have to spend at least half hour in waiting.\r\nThe food is heaven here. American Burgers are must try here. Think twice before you select burger size!!The ice creams are too good and can be easily shared between two people.\r\nThe cost is reasonable.\r\nAlthough the place is always full, service is always quick."\r\n\t}']\r\n}	31	12	10	2017-05-01 06:57:13.36929	2017-05-01 06:57:13.36929	\N	\N	\N
291	<p>require &#39;json&#39;</p>\r\n\r\n<p>restaurant = {<br />\r\n&quot;name&quot;=&gt; &quot;Truffles&quot;,<br />\r\n&quot;location&quot;=&gt; &quot;bangalore&quot;,<br />\r\n&quot;address&quot;=&gt; &quot;28, 4th &#39;B&#39; Cross, Koramangala 5th Block, Bangalore&quot;,<br />\r\n&quot;cuisines&quot;=&gt; [&quot;American&quot;, &quot;Burger&quot;, &quot;Cafe&quot;],<br />\r\n&quot;rating&quot;=&gt; 4.7/5,<br />\r\n&quot;highlights&quot;=&gt; [&quot;Home Delivery&quot;, &quot;Table booking not available&quot;],</p>\r\n\r\n<p>&quot;reviews&quot;=&gt; [<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot;=&gt; &quot;ROHIT KHANNA&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;rating&quot;=&gt; 4,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;body&quot;=&gt; &quot;Now they hv opened lot of branches in city, I have visited Kormangla outlet twice. They have expanded their Kormangla one. Initially it used to be very small, but even now you have to spend at least half hour in waiting.<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;The food is heaven here. American Burgers are must try here. Think twice before you select burger size!!The ice creams are too good and can be easily shared between two people.<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;The cost is reasonable.<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Although the place is always full, service is always quick.&quot;<br />\r\n},<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot;=&gt; &quot;ABHIGNA KULKARNI&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;rating&quot;=&gt; 5,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;body&quot;=&gt; &quot;Truffles never disappoints you! This place is now huge but still crowded almost waited for 15-20 min for a table but it was worth it.&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;They&#39;ve got variety and taste.&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Every item on the menu is sooo yummy!&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Try not to miss the italian alfredo pasta .<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Ive come here so many times and yet feel lik coming bak again and again. Brilliant food.&quot;<br />\r\n},<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot;=&gt; &quot;DEEPAM KANJANI&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;rating&quot;=&gt; 4.5,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;body&quot;=&gt; &quot;As usual, this place is amazing. I wonder why didn&#39;t I review it before. The Rooster Burger is so filling that you will not feel like having anything at all after that. The red velvet sundae is awesome. The new ambience is great, service is a little slow.&quot;<br />\r\n}<br />\r\n]<br />\r\n}</p>\r\n	31	8	10	2017-05-01 06:57:19.543571	2017-05-01 06:57:19.543571	\N	\N	\N
292	<p>array = [&quot;white&quot;, &quot;goodness&quot;] #returns {&#39;white&#39;=&gt;&#39;goodness&#39;}<br />\r\noutput = []<br />\r\narray.each do |arr|<br />\r\n&nbsp;&nbsp; &nbsp;output = {array[0] =&gt; array[1]}<br />\r\nend<br />\r\nputs output</p>\r\n	30	9	9	2017-05-01 14:21:52.971371	2017-05-01 14:21:52.971371	\N	\N	\N
293	<p>Colours_array = [<br />\r\n&nbsp;&nbsp; &nbsp;[&quot;white&quot;, &quot;goodness&quot;],<br />\r\n&nbsp;&nbsp; &nbsp;[&quot;blue&quot;, &quot;tranquility&quot;]<br />\r\n]</p>\r\n\r\n<p>colours_hash = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;white&quot; =&gt; &quot;goodness&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;blue&quot; =&gt; &quot;tranquility&quot;<br />\r\n}</p>\r\n\r\n<p>puts &quot;white =&gt; #{colours_hash[&quot;white&quot;]}, blue =&gt; #{colours_hash[&quot;blue&quot;]}&quot;</p>\r\n	30	8	9	2017-05-01 15:04:02.561936	2017-05-01 15:04:02.561936	\N	\N	\N
294	<p><br />\r\nputs &quot;enter the string &quot;<br />\r\nstr = gets<br />\r\n&nbsp;</p>\r\n\r\n<p>str1=str.split(&quot; &quot;)<br />\r\nhash_string = &quot;#&quot;</p>\r\n\r\n<p>str1.each do |s|<br />\r\n&nbsp;&nbsp; &nbsp;hash_string+=s.capitalize<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\nend</p>\r\n\r\n<p>#str.insert(0,&quot;#&quot;)</p>\r\n\r\n<p>puts hash_string<br />\r\n&nbsp;</p>\r\n	28	4	8	2017-05-01 17:01:57.237295	2017-05-01 17:01:57.237295	\N	\N	\N
295	<p>winner_list = [<br />\r\n&nbsp;&nbsp; &nbsp;{&quot;season&quot; =&gt; &#39;1999-00&#39;, &quot;team&quot; =&gt; &#39;real madrid&#39; , &quot;country&quot; =&gt; &#39;spain&#39;},<br />\r\n&nbsp;&nbsp; &nbsp;{&quot;season&quot; =&gt; &#39;2000-01&#39;, &quot;team&quot; =&gt; &#39;bayern munich&#39; , &quot;country&quot; =&gt; &#39;Germany&#39;},<br />\r\n&nbsp;&nbsp; &nbsp;{&quot;season&quot; =&gt; &#39;2001-02&#39;, &quot;team&quot; =&gt; &#39;real madrid&#39; , &quot;country&quot; =&gt; &#39;spain&#39;},<br />\r\n&nbsp;&nbsp; &nbsp;{&quot;season&quot; =&gt; &#39;2002-03&#39;, &quot;team&quot; =&gt; &#39;milan&#39; , &quot;country&quot; =&gt; &#39;italy&#39;},<br />\r\n&nbsp;&nbsp; &nbsp;{&quot;season&quot; =&gt; &#39;2003-04&#39;, &quot;team&quot; =&gt; &#39;porto&#39; , &quot;country&quot; =&gt; &#39;portugal&#39;}<br />\r\n]<br />\r\ncount = Hash.new</p>\r\n\r\n<p>winner_list.each do |list|<br />\r\n&nbsp;&nbsp; &nbsp;if count.has_key?(list[&quot;country&quot;])<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; count[list[&quot;country&quot;]]+=1<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;count[list[&quot;country&quot;]]=1<br />\r\n&nbsp; &nbsp; end<br />\r\nend<br />\r\nputs count</p>\r\n	29	4	8	2017-05-01 17:01:57.239898	2017-05-01 17:01:57.239898	\N	\N	\N
296	<p>puts &quot;enter the string&quot;<br />\r\nstr = gets<br />\r\nstring = str.split(&quot; &quot;)<br />\r\noutput = &quot;&quot;<br />\r\nstring.each do|n| n.capitalize!<br />\r\noutput +=n<br />\r\nend<br />\r\nputs &quot;##{output}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	28	10	8	2017-05-01 17:18:59.009252	2017-05-01 17:18:59.009252	\N	\N	\N
297	<p>winner_list = [<br />\r\n&nbsp;&nbsp; &nbsp;{ &quot;season&quot; =&gt; &quot;1999-00&quot;, &quot;team&quot; =&gt; &quot;real madrid&quot;, &quot;country&quot; =&gt; &quot;spain&quot;},<br />\r\n&nbsp;&nbsp; &nbsp;{ &quot;season&quot; =&gt; &quot;2000-01&quot;, &quot;team&quot; =&gt; &quot;bayern munich&quot;, &quot;country&quot; =&gt; &quot;germany&quot;},<br />\r\n&nbsp;&nbsp; &nbsp;{ &quot;season&quot; =&gt; &quot;2001-02&quot;, &quot;team&quot; =&gt; &quot;real madrid&quot;, &quot;country&quot; =&gt; &quot;spain&quot;},<br />\r\n&nbsp;&nbsp; &nbsp;{ &quot;season&quot; =&gt; &quot;2002-03&quot;, &quot;team&quot; =&gt; &quot;milan&quot;, &quot;country&quot; =&gt; &quot;italy&quot;},<br />\r\n&nbsp;&nbsp; &nbsp;{ &quot;season&quot; =&gt; &quot;2003-04&quot;, &quot;team&quot; =&gt; &quot;porto&quot;, &quot;country&quot; =&gt; &quot;portugal&quot;}<br />\r\n&nbsp;&nbsp; &nbsp;]<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;enter the country&quot;<br />\r\n&nbsp;&nbsp; &nbsp;winning_country = gets.chomp<br />\r\n&nbsp;&nbsp; &nbsp;count = 0<br />\r\n&nbsp;&nbsp; &nbsp;winner_list.each do|wl|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if wl.has_key?(&quot;country&quot;) &amp;&amp; wl.has_key(&quot;winning_country&quot;)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;count +=1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;puts count</p>\r\n\r\n<p>&nbsp;</p>\r\n	29	10	8	2017-05-01 17:18:59.012798	2017-05-01 17:18:59.012798	\N	\N	\N
298	<p>puts &quot; enter your Input&quot;<br />\r\nstr = gets<br />\r\nstr = str.split{&quot;&quot;}<br />\r\noutput = &quot;#&quot;<br />\r\ni = 0<br />\r\nstr.each do |input|<br />\r\n&nbsp;&nbsp; &nbsp;output += input.capitalize</p>\r\n\r\n<p>end</p>\r\n\r\n<p>puts &quot;#{output}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	28	9	8	2017-05-01 17:26:46.961526	2017-05-01 17:26:46.961526	\N	\N	\N
299	<p>puts &quot;Enter country&quot;<br />\r\nwinning_country = gets.chomp<br />\r\ncount = 0<br />\r\nwinnerList.each do |winner|<br />\r\n&nbsp; if winner.has_key?(&quot;country&quot;) &amp;&amp; winner.has_value?(winning_country)<br />\r\n&nbsp;&nbsp;&nbsp; count += 1<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts count</p>\r\n	29	9	8	2017-05-01 17:26:46.965192	2017-05-01 17:26:46.965192	\N	\N	\N
300	puts "Enter the string"\r\nstr = gets\r\nhashtag = str.split(" ")\r\nresult = ""\r\nhashtag.each do |n| n.capitalize!\r\n\tresult += n\r\nend \r\nputs "##{result}"	28	12	8	2017-05-01 17:45:27.201947	2017-05-01 17:45:27.201947	\N	\N	\N
301	Winner_list = [\r\n    { "season" => "1999-00", "team" => "real madrid", "country" => "Spain"},\r\n    { "season" => "2000-01", "team" => "bayern munich", "country" => "Germany"},\r\n    { "season" => "2001-02", "team" => "real madrid", "country" => "Spain"},\r\n    { "season" => "2002-03", "team" => "milan", "country" => "Italy"},\r\n    { "season" => "2003-04", "team" => "porto", "country" => "Portugal"}\r\n    ]\r\n    puts "enter the country"\r\n    winning_country = gets.chomp\r\n    count = 0\r\n    Winner_list.each do |wl|\r\n        if wl.has_key?("country") && wl.has_value?(winning_country)\r\n            count +=1\r\n        end\r\n    end\r\n    puts count\r\n	29	12	8	2017-05-01 17:45:27.20961	2017-05-01 17:45:27.20961	\N	\N	\N
302	array = ["white", "goodness"] #returns {'white'=>'goodness'}\r\noutput = []\r\noutput = {array[0] => array[1]}\r\nputs output\r\n\r\n\r\nI dont get it sir.	30	12	9	2017-05-02 03:29:39.589325	2017-05-02 03:29:39.589325	\N	\N	\N
303	<p>require &#39;pry&#39;<br />\r\nnumbers = [1,2,3,4,3,2,1]<br />\r\nindex = 0<br />\r\nreturn_index = -1</p>\r\n\r\n<p>numbers.each do |number|<br />\r\n&nbsp; left_array = numbers.slice(0, index)<br />\r\n&nbsp; right_array = numbers.slice(index + 1, numbers.length)<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; if left_array.inject(:+) == right_array.inject(:+)<br />\r\n&nbsp; &nbsp; obtained_index = index<br />\r\n&nbsp; end<br />\r\n&nbsp; index += 1<br />\r\nend</p>\r\n\r\n<p>puts return_index</p>\r\n	32	3	12	2017-05-02 17:18:01.648034	2017-05-02 17:18:01.648034	\N	\N	\N
304	#Defining an array\r\ngiven = [1,2,3,4,3,2,1]\r\n\r\n# finding a lenght of array\r\nfindlength = given.length\r\nputs "finding a length of array #{findlength}"\r\n\r\n# finding a right index from array\r\nfindrightindex = findlength / 2\r\nputs "find right index from array length #{findrightindex}"\r\n\r\n# seperate the values from array after finding the n value.\r\nleftside = []\r\nrightside = []\r\nleftside = given.slice(0,findrightindex)\r\nrightside = given.slice(findrightindex+1,findlength)\r\n\r\nleftsum = 0\r\nrightsum = 0\r\n\r\nleftside.each do |value|\r\n\tleftsum += value\r\nend\r\n\r\nrightside.each do |value|\r\n\trightsum += value\r\nend\r\n\r\nputs "left side total sum is #{leftsum}"\r\nputs "right side total sum is #{rightsum}"\r\n\r\nif leftsum == rightsum\r\n\tputs "left side and right values are equal"\r\nelse\r\n\tputs "Not equal and return -1"\r\nend	32	11	12	2017-05-02 18:03:48.933613	2017-05-02 18:03:48.933613	\N	\N	\N
309	<p>*&nbsp; mean variable number of arguements can be passed to method cart_total</p>\r\n	37	9	13	2017-05-03 06:10:09.53958	2017-05-03 06:10:09.53958	\N	\N	\N
310	<p>Local Variable</p>\r\n\r\n<p>Block variable</p>\r\n\r\n<p>Global variable</p>\r\n\r\n<p>Object variable</p>\r\n\r\n<p>Instance variable</p>\r\n\r\n<p>&nbsp;</p>\r\n	38	9	13	2017-05-03 06:10:09.541351	2017-05-03 06:10:09.541351	\N	\N	\N
315	<p>* represnt the variable number of argument.</p>\r\n\r\n<p>def cart_total(*prices)</p>\r\n\r\n<p>end</p>\r\n\r\n<p>cart_total(1)</p>\r\n\r\n<p>cart_total(1,2)</p>\r\n\r\n<p>cart_total(1,2,3,4)</p>\r\n	37	3	13	2017-05-03 06:14:09.743706	2017-05-03 06:14:09.743706	\N	\N	\N
316	<p>local variable</p>\r\n\r\n<p>global variable</p>\r\n\r\n<p>block variable</p>\r\n\r\n<p>instance variable</p>\r\n\r\n<p>class variable</p>\r\n\r\n<p>&nbsp;</p>\r\n	38	3	13	2017-05-03 06:14:09.745388	2017-05-03 06:14:09.745388	\N	\N	\N
306	true	34	9	13	2017-05-03 06:10:09.534167	2017-07-04 13:09:59.905183	\N	correct	\N
307	true	35	9	13	2017-05-03 06:10:09.536021	2017-07-04 13:09:59.936252	\N	wrong	\N
308	true	36	9	13	2017-05-03 06:10:09.537787	2017-07-04 13:09:59.957122	\N	correct	\N
311	true	33	3	13	2017-05-03 06:14:09.736673	2017-07-04 13:10:00.034354	\N	correct	\N
312	true	34	3	13	2017-05-03 06:14:09.738647	2017-07-04 13:10:00.056525	\N	correct	\N
314	true	36	3	13	2017-05-03 06:14:09.742053	2017-07-04 13:10:00.127936	\N	correct	\N
317	true	33	12	13	2017-05-03 06:17:25.732193	2017-07-04 13:10:00.176691	\N	correct	\N
318	true	34	12	13	2017-05-03 06:17:25.734427	2017-07-04 13:10:00.209275	\N	correct	\N
327	<p>* denotes variable number of parameters</p>\r\n	37	17	13	2017-05-03 06:17:32.60902	2017-05-03 06:17:32.60902	\N	\N	\N
328	<p>local variable</p>\r\n\r\n<p>block variable</p>\r\n\r\n<p>global variable</p>\r\n\r\n<p>instance variable</p>\r\n\r\n<p>class variable</p>\r\n	38	17	13	2017-05-03 06:17:32.615459	2017-05-03 06:17:32.615459	\N	\N	\N
333	<p>* represents variable number of parameters</p>\r\n\r\n<p>by using * number of parameters are not fixed</p>\r\n\r\n<p>if we want single parameter we can get or if we want two parameters we can get two also</p>\r\n\r\n<p>&nbsp;</p>\r\n	37	10	13	2017-05-03 06:19:07.743776	2017-05-03 06:19:07.743776	\N	\N	\N
334	<p>types of variables are</p>\r\n\r\n<p>local variable</p>\r\n\r\n<p>block variable</p>\r\n\r\n<p>class variable</p>\r\n\r\n<p>global variable</p>\r\n\r\n<p>instance variable</p>\r\n	38	10	13	2017-05-03 06:19:07.745614	2017-05-03 06:19:07.745614	\N	\N	\N
339	<p>def cart_total(*prices)<br />\r\n&nbsp;&nbsp; &nbsp;sum = 0<br />\r\n&nbsp;&nbsp; &nbsp;prices.each do |price|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sum += price<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;return sum<br />\r\nend</p>\r\n\r\n<p>puts cart_total(189)<br />\r\nputs cart_total(256, 153)<br />\r\nputs cart_total(321, 77, 108)</p>\r\n\r\n<p>Here &#39;*&#39; is used to accept various number of parameters.&nbsp;</p>\r\n	37	8	13	2017-05-03 06:23:46.551615	2017-05-03 06:23:46.551615	\N	\N	\N
340	<p>Local variable</p>\r\n\r\n<p>Block variable</p>\r\n\r\n<p>Class variable</p>\r\n\r\n<p>Instance variable</p>\r\n\r\n<p>Global variable</p>\r\n	38	8	13	2017-05-03 06:23:46.554374	2017-05-03 06:23:46.554374	\N	\N	\N
345	<p>def cart_total(*prices) --&gt;<strong>&nbsp;* </strong>denotes variable number of parameters</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>def cart_total(*prices)</strong></p>\r\n\r\n<p><strong>end</strong></p>\r\n\r\n<p><strong>puts cart_tatal(12,11,10)</strong> ---&gt; it will take any number of arguments passed to the parameters when its given as <strong>*&nbsp;</strong></p>\r\n	37	4	13	2017-05-03 06:25:51.227591	2017-05-03 06:25:51.227591	\N	\N	\N
346	<p>Type of variables&nbsp;<br />\r\n-local variable<br />\r\n-block variable<br />\r\n-global variable</p>\r\n\r\n<p>-instance variable<br />\r\n-class variable</p>\r\n	38	4	13	2017-05-03 06:25:51.229182	2017-05-03 06:25:51.229182	\N	\N	\N
351	<p>it defin variable parameter&nbsp;</p>\r\n	37	6	13	2017-05-03 06:26:34.106031	2017-05-03 06:26:34.106031	\N	\N	\N
352	<p>local variable</p>\r\n\r\n<p>block variable</p>\r\n\r\n<p>class variable</p>\r\n\r\n<p>global variable</p>\r\n\r\n<p>instance variable</p>\r\n\r\n<p>&nbsp;</p>\r\n	38	6	13	2017-05-03 06:26:34.10831	2017-05-03 06:26:34.10831	\N	\N	\N
357	<p>This</p>\r\n\r\n<p>Is</p>\r\n\r\n<p>a new</p>\r\n\r\n<p>answer.</p>\r\n	37	13	13	2017-05-03 06:27:09.172256	2017-05-03 06:27:09.172256	\N	\N	\N
358	<p>this</p>\r\n\r\n<p>is a</p>\r\n\r\n<p>new</p>\r\n\r\n<p>answer</p>\r\n	38	13	13	2017-05-03 06:27:09.187826	2017-05-03 06:27:09.187826	\N	\N	\N
363	<p>any number of values can be passed as Price values to the method&nbsp;cart_total.</p>\r\n	37	19	13	2017-05-03 06:27:59.681246	2017-05-03 06:27:59.681246	\N	\N	\N
364	<p>cart_total(10,20,30,40)&nbsp;</p>\r\n\r\n<p>cart_total(10)</p>\r\n\r\n<p>cart_total(10,20)</p>\r\n\r\n<p>cart_total(&quot;string1&quot;,&quot;string2&quot;)</p>\r\n	38	19	13	2017-05-03 06:27:59.682784	2017-05-03 06:27:59.682784	\N	\N	\N
369	<p>* is a variable number of parameter</p>\r\n\r\n<p>Def cart_total(*prices)</p>\r\n\r\n<p>Sum = 0</p>\r\n\r\n<p>Prices.each do |price|</p>\r\n\r\n<p>Sum += 1</p>\r\n\r\n<p>end</p>\r\n\r\n<p>return sum</p>\r\n\r\n<p>end</p>\r\n\r\n<p>Puts cart_total(100)</p>\r\n\r\n<p>Puts cart_total(100,200)</p>\r\n	37	7	13	2017-05-03 06:28:40.858972	2017-05-03 06:28:40.858972	\N	\N	\N
370	<p>Local variable</p>\r\n\r\n<p>Block variable</p>\r\n\r\n<p>Global variable</p>\r\n\r\n<p>Instance variable</p>\r\n\r\n<p>Class variable</p>\r\n	38	7	13	2017-05-03 06:28:40.861545	2017-05-03 06:28:40.861545	\N	\N	\N
375	<p>* represents variable number of parameters.</p>\r\n\r\n<p>In def cart_total(*prices),&nbsp;it considers all the values associated with the variable &quot;prices&quot; for the defined method &quot;cart_total&quot;.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	37	2	13	2017-05-03 06:29:19.681236	2017-05-03 06:29:19.681236	\N	\N	\N
376	<p>Local variable</p>\r\n\r\n<p>Block variable</p>\r\n\r\n<p>Global variable</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Instance variable</p>\r\n\r\n<p>Class variable</p>\r\n\r\n<p>&nbsp;</p>\r\n	38	2	13	2017-05-03 06:29:19.685901	2017-05-03 06:29:19.685901	\N	\N	\N
381	<p>when we define * as parameter inside a method ,we can call a method with diffrent or multiple arguments</p>\r\n	37	20	13	2017-05-03 06:32:04.949978	2017-05-03 06:32:04.949978	\N	\N	\N
382	<p>1.local variable</p>\r\n\r\n<p>2.block variable<br />\r\n3. Global variable<br />\r\n4. instance variable<br />\r\n&nbsp;5.class variable</p>\r\n	38	20	13	2017-05-03 06:32:04.951864	2017-05-03 06:32:04.951864	\N	\N	\N
387	<p>* denotes variable number of parameters&nbsp;</p>\r\n	37	18	13	2017-05-03 06:32:29.388854	2017-05-03 06:32:29.388854	\N	\N	\N
326	false	36	17	13	2017-05-03 06:17:32.606932	2017-07-04 13:10:00.224558	\N	wrong	\N
329	true	33	10	13	2017-05-03 06:19:07.734294	2017-07-04 13:10:00.247947	\N	correct	\N
330	true	34	10	13	2017-05-03 06:19:07.736995	2017-07-04 13:10:00.256919	\N	correct	\N
331	false	35	10	13	2017-05-03 06:19:07.739265	2017-07-04 13:10:00.267681	\N	correct	\N
332	true	36	10	13	2017-05-03 06:19:07.741357	2017-07-04 13:10:00.27686	\N	correct	\N
335	true	33	8	13	2017-05-03 06:23:46.54246	2017-07-04 13:10:00.304133	\N	correct	\N
336	true	34	8	13	2017-05-03 06:23:46.544651	2017-07-04 13:10:00.317176	\N	correct	\N
337	maybe	35	8	13	2017-05-03 06:23:46.546846	2017-07-04 13:10:00.334476	\N	wrong	\N
341	false 	33	4	13	2017-05-03 06:25:51.220955	2017-07-04 13:10:00.365495	\N	wrong	\N
342	true	34	4	13	2017-05-03 06:25:51.222826	2017-07-04 13:10:00.374861	\N	correct	\N
343	false	35	4	13	2017-05-03 06:25:51.224414	2017-07-04 13:10:00.386968	\N	correct	\N
344	true	36	4	13	2017-05-03 06:25:51.226005	2017-07-04 13:10:00.395899	\N	correct	\N
347	true	33	6	13	2017-05-03 06:26:34.096743	2017-07-04 13:10:00.416541	\N	correct	\N
348	true	34	6	13	2017-05-03 06:26:34.098684	2017-07-04 13:10:00.42632	\N	correct	\N
350	true	36	6	13	2017-05-03 06:26:34.103465	2017-07-04 13:10:00.448481	\N	correct	\N
353	false 	33	13	13	2017-05-03 06:27:09.16439	2017-07-04 13:10:00.473292	\N	wrong	\N
354	true	34	13	13	2017-05-03 06:27:09.166423	2017-07-04 13:10:00.491795	\N	correct	\N
355	maybe	35	13	13	2017-05-03 06:27:09.168493	2017-07-04 13:10:00.511263	\N	wrong	\N
356	false	36	13	13	2017-05-03 06:27:09.170438	2017-07-04 13:10:00.525077	\N	wrong	\N
359	true	33	19	13	2017-05-03 06:27:59.674701	2017-07-04 13:10:00.555941	\N	correct	\N
361	false	35	19	13	2017-05-03 06:27:59.67802	2017-07-04 13:10:00.594656	\N	correct	\N
362	true	36	19	13	2017-05-03 06:27:59.679671	2017-07-04 13:10:00.603781	\N	correct	\N
365	true	33	7	13	2017-05-03 06:28:40.846568	2017-07-04 13:10:00.622369	\N	correct	\N
366	true	34	7	13	2017-05-03 06:28:40.849808	2017-07-04 13:10:00.632953	\N	correct	\N
367	false	35	7	13	2017-05-03 06:28:40.852839	2017-07-04 13:10:00.64193	\N	correct	\N
368	true	36	7	13	2017-05-03 06:28:40.857121	2017-07-04 13:10:00.651764	\N	correct	\N
372	true	34	2	13	2017-05-03 06:29:19.670098	2017-07-04 13:10:00.690671	\N	correct	\N
373	false	35	2	13	2017-05-03 06:29:19.6743	2017-07-04 13:10:00.700642	\N	correct	\N
374	true	36	2	13	2017-05-03 06:29:19.678346	2017-07-04 13:10:00.711465	\N	correct	\N
377	true	33	20	13	2017-05-03 06:32:04.94329	2017-07-04 13:10:00.732154	\N	correct	\N
378	true	34	20	13	2017-05-03 06:32:04.945069	2017-07-04 13:10:00.752156	\N	correct	\N
379	false	35	20	13	2017-05-03 06:32:04.946719	2017-07-04 13:10:00.760655	\N	correct	\N
383	false 	33	18	13	2017-05-03 06:32:29.379874	2017-07-04 13:10:00.814792	\N	wrong	\N
384	true	34	18	13	2017-05-03 06:32:29.382635	2017-07-04 13:10:00.832862	\N	correct	\N
385	false	35	18	13	2017-05-03 06:32:29.384364	2017-07-04 13:10:00.855687	\N	correct	\N
386	true	36	18	13	2017-05-03 06:32:29.386204	2017-07-04 13:10:00.882259	\N	correct	\N
388	<p>local variable</p>\r\n\r\n<p>block variable</p>\r\n\r\n<p>global vriable</p>\r\n\r\n<p>instance variable</p>\r\n\r\n<p>class variable</p>\r\n	38	18	13	2017-05-03 06:32:29.391357	2017-05-03 06:32:29.391357	\N	\N	\N
524	<p>text node = Visit google</p>\r\n\r\n<p>attribute node = &quot;www.google.com</p>\r\n\r\n<p>element node = &lt;a&gt;&lt;/a&gt;</p>\r\n	51	27	17	2017-05-10 14:45:18.856332	2017-05-10 14:45:18.856332	\N	\N	\N
393	<p>* denotes variable number of a prices parameters.</p>\r\n\r\n<p>for example:</p>\r\n\r\n<p>def cart_total(*prices)<br />\r\n&nbsp;&nbsp; &nbsp;sum=0<br />\r\n&nbsp;&nbsp; &nbsp;prices.each do |price|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sum +=price<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;return sum<br />\r\nend</p>\r\n\r\n<p>puts cart_total(20)<br />\r\nputs cart_total(20,40)<br />\r\nputs cart_total(50,40,30)</p>\r\n\r\n<p>so, everytime we call the method cart_total with set of arguments, it returns a set of results. prices is an array which holds multiple values.</p>\r\n	37	5	13	2017-05-03 06:33:10.24124	2017-05-03 06:33:10.24124	\N	\N	\N
394	<p>locan variable</p>\r\n\r\n<p>block variable</p>\r\n\r\n<p>global variable</p>\r\n\r\n<p>instance variable</p>\r\n\r\n<p>class variable</p>\r\n	38	5	13	2017-05-03 06:33:10.242993	2017-05-03 06:33:10.242993	\N	\N	\N
399	<p>1)* in the method&nbsp;denotes &nbsp;the variable number of parameters.</p>\r\n\r\n<p>2) it will take multiple values at once and then perform the necessary function</p>\r\n\r\n<p>&nbsp;</p>\r\n	37	16	13	2017-05-03 06:37:36.023065	2017-05-03 06:37:36.023065	\N	\N	\N
400	<p>Local variable</p>\r\n\r\n<p>Global variable</p>\r\n\r\n<p>instance variable</p>\r\n\r\n<p>class variable</p>\r\n	38	16	13	2017-05-03 06:37:36.025571	2017-05-03 06:37:36.025571	\N	\N	\N
401	<p>array = [1,2,3,4,3,2,1]<br />\r\narray_slice_left = array.slice(0,3)<br />\r\narray_slice_right = array.slice(4,3)<br />\r\nsum_left = 0<br />\r\nsum_right = 0<br />\r\nputs &quot;Left #{array_slice_left} Right #{array_slice_right}&quot;</p>\r\n\r\n<p>array_slice_left.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;sum_left += &nbsp;num<br />\r\nend</p>\r\n\r\n<p>puts &quot;#{sum_left}&quot;</p>\r\n\r\n<p>array_slice_right.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;sum_right += &nbsp;num<br />\r\nend</p>\r\n\r\n<p>puts &quot;#{sum_right}&quot;</p>\r\n\r\n<p>if sum_left == sum_right<br />\r\n&nbsp;puts &quot;array index is #{array.length/2}&quot;<br />\r\nelse&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;return -1&quot;<br />\r\nend</p>\r\n	32	9	12	2017-05-03 14:00:19.438315	2017-05-03 14:00:19.438315	\N	\N	\N
402	array=[]\r\nputs "Enter values"\r\n7.times do\r\n\tarray.push(gets.to_i)\r\nend \r\n\r\n\r\nn = array.length\r\ni=1\r\narray.each do |arr|\r\n\tsumleft = 0\r\n\tsumright = 0\r\n\t\tarray1 = array.slice(0,i)\r\n\t\tarray1.each do |arr1|\r\n\t \t\t sumleft += arr1.to_i\r\n\t \tend\r\n\t \tarray2 = array.slice(i+1,n)\r\n\t\tif array1.length != n\r\n\t \t\t\tarray2.each do |arr2|\r\n\t \t\t\t\tsumright += arr2.to_i\r\n\t \t\t\tend\r\n\t \t\t\tif sumleft == sumright\r\n\t\t\t\t\tputs "index is :" + i.to_s\r\n\t\t\t\t\tbreak\r\n\t\t\t\tend\r\n\t \telse\r\n\t \t\t\tputs "-1"\r\n\t    end\r\n\t\t\r\n\r\ni= i+1\r\nend\r\n	32	12	12	2017-05-03 15:03:20.74504	2017-05-03 15:03:20.74504	\N	\N	\N
403	<p>array=[]<br />\r\nputs &quot;Enter values&quot;<br />\r\n7.times do<br />\r\n&nbsp;&nbsp; &nbsp;array.push(gets.to_i)<br />\r\nend</p>\r\n\r\n<p>n = array.length<br />\r\ni=1<br />\r\narray.each do |arr|<br />\r\n&nbsp;&nbsp; &nbsp;sumleft = 0<br />\r\n&nbsp;&nbsp; &nbsp;sumright = 0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;array1 = array.slice(0,i)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;array1.each do |arr1|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sumleft += arr1.to_i<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;array2 = array.slice(i+1,n)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if array1.length != n<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;array2.each do |arr2|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sumright += arr2.to_i<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if sumleft == sumright<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;index is :&quot; + i.to_s<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;-1&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>i= i+1<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n	32	10	12	2017-05-03 16:55:45.677986	2017-05-03 16:55:45.677986	\N	\N	\N
404	<pre>\r\n\r\n&nbsp;</pre>\r\n\r\n<p>array = [1,2,3,4,3,2,1]</p>\r\n\r\n<p>length = array.length</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>center_array = length/2</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>left_sum = array.slice(0,center_array)</p>\r\n\r\n<p>right_sum = array.slice(center_array + 1 , length)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>puts &quot;left : #{left_sum} , right : #{right_sum}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>left = 0</p>\r\n\r\n<p>right = 0</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>left_sum.each do |n|</p>\r\n\r\n<p>left +=n</p>\r\n\r\n<p>end</p>\r\n\r\n<p>puts left</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>right_sum.each do | n|</p>\r\n\r\n<p>right += n</p>\r\n\r\n<p>end</p>\r\n\r\n<p>Puts right</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if left == right</p>\r\n\r\n<p>puts &quot;left are equal right #{left} == #{right}&quot;</p>\r\n\r\n<p>else</p>\r\n\r\n<p>puts &quot;return -1&quot;</p>\r\n\r\n<p>end</p>\r\n	32	7	12	2017-05-05 01:23:27.101919	2017-05-05 01:23:27.101919	\N	\N	\N
405	<p>require &#39;pry&#39;<br />\r\nnumbers = [1,2,3,4,3,2,1]<br />\r\nnumbers = gets.chomp<br />\r\nnumber =[]<br />\r\nnumber = numbers.each_with_index do |n|<br />\r\n&nbsp; binding.pry<br />\r\n&nbsp; n = n.to_i<br />\r\nend<br />\r\ncount = (number.count / 2).ceil<br />\r\nbinding.pry<br />\r\nleft_sum = number.first(count).sum<br />\r\nright_sum = number.last(count).sum<br />\r\nif (left_sum == right_sum) and count.odd?<br />\r\n&nbsp; binding.pry<br />\r\n&nbsp; puts count<br />\r\nelse<br />\r\n&nbsp;puts -1<br />\r\nend<br />\r\n&nbsp;</p>\r\n	32	16	12	2017-05-05 01:55:41.301928	2017-05-05 01:55:41.301928	\N	\N	\N
406	<p>array = [1,2,3,4,3,2,1]<br />\r\nlength = array.length</p>\r\n\r\n<p>center_array = length/2</p>\r\n\r\n<p>left_sum = array.slice(0,center_array)<br />\r\nright_sum = array.slice(center_array + 1 , length)</p>\r\n\r\n<p>puts &quot;left : #{left_sum} , right : #{right_sum}&quot;</p>\r\n\r\n<p>left = 0&nbsp;<br />\r\nright = 0</p>\r\n\r\n<p>left_sum.each do |n|<br />\r\n&nbsp;&nbsp; &nbsp;left +=n<br />\r\nend<br />\r\n#puts left</p>\r\n\r\n<p>right_sum.each do | n|<br />\r\n&nbsp;&nbsp; &nbsp;right += n<br />\r\nend<br />\r\n#puts right</p>\r\n\r\n<p>if left == right<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;left are equal right #{left} == #{right}&quot;<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;return -1&quot;<br />\r\nend</p>\r\n	32	4	12	2017-05-05 04:11:23.091103	2017-05-05 04:11:23.091103	\N	\N	\N
429	<p>require &#39;pry&#39;<br />\r\ndef word_split(sentence)<br />\r\n&nbsp; sentence.split(&quot; &quot;)<br />\r\nend</p>\r\n\r\n<p>puts &nbsp;&quot;enter a sentence with five or more letter words: &quot;<br />\r\nsentence = gets.chomp<br />\r\nwords = word_split(sentence)<br />\r\nreverse_words = []</p>\r\n\r\n<p>words.each do |word|<br />\r\n&nbsp; binding.pry<br />\r\n&nbsp; reverse_words.push(word.length &gt;= 5 ? word.reverse : word)<br />\r\nend</p>\r\n\r\n<p>puts reverse_words.join(&quot; &quot;)<br />\r\n&nbsp;</p>\r\n	41	16	14	2017-05-08 06:27:29.916241	2017-05-08 06:27:29.916241	\N	\N	\N
389	true	33	5	13	2017-05-03 06:33:10.234247	2017-07-04 13:10:00.924949	\N	correct	\N
390	true	34	5	13	2017-05-03 06:33:10.236154	2017-07-04 13:10:00.94649	\N	correct	\N
391	false	35	5	13	2017-05-03 06:33:10.237853	2017-07-04 13:10:00.972366	\N	correct	\N
392	true	36	5	13	2017-05-03 06:33:10.239522	2017-07-04 13:10:00.990714	\N	correct	\N
396	false	34	16	13	2017-05-03 06:37:36.015318	2017-07-04 13:10:01.034436	\N	wrong	\N
397	false	35	16	13	2017-05-03 06:37:36.017932	2017-07-04 13:10:01.043279	\N	correct	\N
398	true	36	16	13	2017-05-03 06:37:36.020528	2017-07-04 13:10:01.050776	\N	correct	\N
502	<p>Reader method is Used &nbsp;the value of instance variable can be read via reader</p>\r\n\r\n<p>Writer method is used the value of instance variable can be assign are known as writer.</p>\r\n	44	7	15	2017-05-10 07:02:20.241487	2017-05-10 07:02:20.241487	\N	\N	\N
407	<p>def scramble(str1,str2)<br />\r\n&nbsp; str1 = str1.split(&quot;&quot;)<br />\r\n&nbsp; str2 = str2.split(&quot;&quot;)<br />\r\n&nbsp; result = false</p>\r\n\r\n<p>&nbsp; str2.each do |s|<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; if str1.include? s<br />\r\n&nbsp; &nbsp; &nbsp; result = true<br />\r\n&nbsp; &nbsp; &nbsp; str1.delete(s)<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; result = false<br />\r\n&nbsp; &nbsp; &nbsp; break<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end<br />\r\n&nbsp; return result<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter string 1 ::&quot;<br />\r\nstr1 = gets.chomp<br />\r\nputs &quot;Enter string 2 ::&quot;<br />\r\nstr2 = gets.chomp</p>\r\n\r\n<p>final_result = scramble(str1,str2)<br />\r\nputs final_result</p>\r\n	39	3	14	2017-05-05 16:28:13.815885	2017-05-05 16:28:13.815885	\N	\N	\N
408	<p>numbers = [3,-1,-1,-1,2,3,-1,3,-1,2,34,9,3]</p>\r\n\r\n<p>def num_hash(numbers)<br />\r\n&nbsp; number_hash = {}<br />\r\n&nbsp; numbers.uniq.each do |num|<br />\r\n&nbsp; &nbsp; number_hash[num] = numbers.count(num)<br />\r\n&nbsp; end<br />\r\n&nbsp; result = 0<br />\r\n&nbsp; puts number_hash</p>\r\n\r\n<p>&nbsp; result = number_hash.values.max<br />\r\n&nbsp; return &quot;#{result} appears for #{number_hash.key(result)}&quot;<br />\r\nend</p>\r\n\r\n<p>final_result = num_hash(numbers)<br />\r\nputs final_result</p>\r\n	40	3	14	2017-05-05 16:28:13.821647	2017-05-05 16:28:13.821647	\N	\N	\N
409	<p>def spin_word(sentence)<br />\r\n&nbsp; sentence= sentence.split(&quot; &quot;)<br />\r\n&nbsp; output = &quot;&quot;<br />\r\n&nbsp; #puts sentence<br />\r\n&nbsp;#<br />\r\n&nbsp; sentence.each do |s|<br />\r\n&nbsp; &nbsp; if s.length &gt;= 5<br />\r\n&nbsp; &nbsp; &nbsp; output += &quot;#{s.reverse} &quot;<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; output += &quot;#{s} &quot;<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end<br />\r\n&nbsp; return output<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter string::&quot;<br />\r\nsentence = gets.chomp</p>\r\n\r\n<p>result = spin_word(sentence)<br />\r\nputs result</p>\r\n	41	3	14	2017-05-05 16:28:13.827875	2017-05-05 16:28:13.827875	\N	\N	\N
410	<p>numbers = [7,1,1,1,4,11]</p>\r\n\r\n<p>index_n = 0<br />\r\nresult_index = -1</p>\r\n\r\n<p>numbers.each do |number|<br />\r\n&nbsp; left_array = numbers.slice(0, index_n)<br />\r\n&nbsp; right_array = numbers.slice(index_n + 1, numbers.length)</p>\r\n\r\n<p>&nbsp; if left_array.inject(:+) == right_array.inject(:+)<br />\r\n&nbsp; &nbsp; result_index = index_n<br />\r\n&nbsp; &nbsp; puts result_index<br />\r\n&nbsp; end<br />\r\n&nbsp; index_n += 1<br />\r\nend</p>\r\n\r\n<p>if result_index == -1<br />\r\n&nbsp; puts &quot;-1&quot;<br />\r\nend</p>\r\n	32	5	12	2017-05-05 16:50:03.299418	2017-05-05 16:50:03.299418	\N	\N	\N
411	<p>numbers=[1,2,3,4,3,2,1]</p>\r\n\r\n<p>def sum_of_left_right(numbers)<br />\r\nindex = numbers.length-1<br />\r\nlen&nbsp;&nbsp; = numbers.length-1</p>\r\n\r\n<p>while index &gt; 0<br />\r\n&nbsp;&nbsp;&nbsp; left&nbsp; = numbers[0..index-1].inject(:+)<br />\r\n&nbsp;&nbsp;&nbsp; right = numbers[index+1..len].inject(:+)<br />\r\n&nbsp;&nbsp;&nbsp; if left == right<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp; index<br />\r\n&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp;&nbsp;&nbsp; index -= 1<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>result= sum_of_left_right(numbers)<br />\r\nputs &quot;The index is #{result}</p>\r\n	32	20	12	2017-05-06 04:17:25.881997	2017-05-06 04:17:25.881997	\N	\N	\N
412	<p>string1 = &quot;foo&quot;<br />\r\nstring2 = &quot;food&quot;</p>\r\n\r\n<p>def scramble(str1, str2)<br />\r\n&nbsp; str1_split = str1.split(&quot;&quot;)<br />\r\n&nbsp; str2_split = str2.split(&quot;&quot;)<br />\r\n&nbsp; str1_hash ={}<br />\r\n&nbsp; result = false<br />\r\n&nbsp; # Generating hash for string1 value<br />\r\n&nbsp; str1_split.each do |letter|<br />\r\n&nbsp;&nbsp;&nbsp; str1_hash[letter] = str1_split.count(letter)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; str2_split.each do |letter1|<br />\r\n&nbsp;&nbsp;&nbsp; if str1_hash.has_key? letter1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result = true<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #binding.pry<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str1_hash[letter1] -= 1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #binding.pry<br />\r\n&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result = false<br />\r\n&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp; end<br />\r\n&nbsp; if result<br />\r\n&nbsp;&nbsp;&nbsp; return true<br />\r\n&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp; return false<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>results = scramble(string1, string2)<br />\r\nputs results</p>\r\n	39	9	14	2017-05-07 05:04:23.788342	2017-05-07 05:04:23.788342	\N	\N	\N
413	<p>array = [3, -1, -1, -1, 2, 3, -1, 3, -1, 2, 4, 9, 3]<br />\r\narray_count_hash = {}</p>\r\n\r\n<p><br />\r\narray.uniq.each do |item|<br />\r\n&nbsp; array_count_hash[item] = array.count(item)</p>\r\n\r\n<p>end</p>\r\n\r\n<p>puts &quot;Hash is #{array_count_hash}&quot;&nbsp;&nbsp;&nbsp; #Hash is {3=&gt;4, -1=&gt;5, 2=&gt;2, 4=&gt;1, 9=&gt;1}</p>\r\n\r\n<p><br />\r\narray_count = array_count_hash.values<br />\r\nputs &quot;Array of count is #{array_count}&quot;</p>\r\n\r\n<p>most_frequent_item = array_count.max<br />\r\n#puts &quot;most frequest item appears #{most_frequent_item} times and the number is #{item}&quot;</p>\r\n\r\n<p><br />\r\nitem = array_count_hash.key(most_frequent_item)</p>\r\n\r\n<p>puts &quot;the most frequent number is #{item}&quot;<br />\r\nputs &quot;most frequest number is #{item} and&nbsp; appears #{most_frequent_item} times&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	40	9	14	2017-05-07 05:04:23.79658	2017-05-07 05:04:23.79658	\N	\N	\N
414	<p>def spinWords(str1)<br />\r\n&nbsp; output = &quot;&quot;<br />\r\n&nbsp; str1 = str1.split(&quot; &quot;)<br />\r\n&nbsp; str1.each do |word|<br />\r\n&nbsp;&nbsp;&nbsp; if word.length &gt;= 5<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; word = word.reverse<br />\r\n&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; word<br />\r\n&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp;&nbsp;&nbsp; output += word + &quot; &quot;</p>\r\n\r\n<p>&nbsp; end<br />\r\n&nbsp; return output<br />\r\nend</p>\r\n\r\n<p>results = spinWords(&quot;Hey fellow warriors&quot;)&nbsp;&nbsp;&nbsp; # we have string input<br />\r\nputs results</p>\r\n	41	9	14	2017-05-07 05:04:23.805698	2017-05-07 05:04:23.805698	\N	\N	\N
415	def scramble(str1,str2)\r\n  str1 = str1.split("")\r\n  str2 = str2.split("")\r\n  result = false\r\n  i = 0\r\n  str2.each do |s|\r\n    #binding.pry\r\n    if str1.include? s\r\n      result = true\r\n      i = str1.index(s)\r\n      str2.delete_at(i)\r\n    else\r\n      result = false\r\n      break\r\n    end\r\n  end\r\n  puts str2\r\n  return result\r\nend\r\n\r\nputs "Enter string 1 ::"\r\nstr1 = gets.chomp\r\nputs "Enter string 2 ::"\r\nstr2 = gets.chomp\r\n\r\nfinal_result = scramble(str1,str2)\r\nputs final_result	39	12	14	2017-05-07 05:38:31.51032	2017-05-07 05:38:31.51032	\N	\N	\N
416	numbers = [3,-1,-1,-1,2,3,-1,3,-1,2,34,9,3]\r\ndef num_hash(numbers)\r\n  number_hash = {}\r\n  numbers.uniq.each do |num|\r\n  number_hash[num] = numbers.count(num)\r\n  end\r\n \r\n  puts number_hash\r\n  result = 0\r\n  result = number_hash.values.max\r\n  return "#{number_hash.key(result)} appears for #{result} times"\r\nend\r\nfinal_result = num_hash(numbers)\r\nputs final_result	40	12	14	2017-05-07 05:38:31.512346	2017-05-07 05:38:31.512346	\N	\N	\N
417	def spin_word(sentence)\r\n  sentence= sentence.split(" ")\r\n  output = ""\r\n  #puts sentence\r\n \r\n  sentence.each do |s|\r\n\r\n      if s.length > 5\r\n        output += "#{s.reverse}"\r\n      else\r\n        output += "#{s} "\r\n      end\r\n    end\r\n     return output\r\nend\r\n\r\nputs "Enter string::"\r\nsentence = gets.chomp\r\n\r\nresult = spin_word(sentence)\r\nputs result	41	12	14	2017-05-07 05:38:31.51428	2017-05-07 05:38:31.51428	\N	\N	\N
474	<p>variable names shloud readable an understandable ,</p>\r\n\r\n<p>variable names should be associated with the class names ,</p>\r\n\r\n<p>while looping pluar must b take care of (variables &nbsp;|variable| )</p>\r\n	45	4	15	2017-05-10 06:46:20.623537	2017-05-10 06:46:20.623537	\N	\N	\N
501	<p>Attr_acessor is setups both readers and writers but,</p>\r\n\r\n<p>Attr_writer creates internally all writer method.</p>\r\n\r\n<p>Attr_reader setups all the reader method.</p>\r\n	47	7	15	2017-05-10 07:02:20.235878	2017-05-10 07:02:20.235878	\N	\N	\N
418	<p>def scramble(str1,str2)</p>\r\n\r\n<p>&nbsp; str1 = str1.split(&quot;&quot;)</p>\r\n\r\n<p>&nbsp; str2 = str2.split(&quot;&quot;)</p>\r\n\r\n<p>&nbsp; result = false</p>\r\n\r\n<p>&nbsp; i = 0</p>\r\n\r\n<p>&nbsp; str2.each do |s|</p>\r\n\r\n<p>&nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; &nbsp; if str1.include? s</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; result = true</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; i = str1.index(s)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; str2.delete_at(i)</p>\r\n\r\n<p>&nbsp; &nbsp; else</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; result = false</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; break</p>\r\n\r\n<p>&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp; puts str2</p>\r\n\r\n<p>&nbsp; return result</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>puts &quot;Enter string 1 ::&quot;</p>\r\n\r\n<p>str1 = gets.chomp</p>\r\n\r\n<p>puts &quot;Enter string 2 ::&quot;</p>\r\n\r\n<p>str2 = gets.chomp</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>final_result = scramble(str1</p>\r\n\r\n<p>,str2)</p>\r\n\r\n<p>puts final_result</p>\r\n\r\n<div>&nbsp;</div>\r\n	39	10	14	2017-05-07 06:26:10.342199	2017-05-07 06:26:10.342199	\N	\N	\N
419	<p>&nbsp; numbers&nbsp;= [3,-1,-1,-1,2,3,-1,3,-1,2,34,9,3]</p>\r\n\r\n<p>def num_hash(numbers)</p>\r\n\r\n<p>&nbsp; number_hash = {}</p>\r\n\r\n<p>&nbsp; numbers.uniq.each do |num|</p>\r\n\r\n<p>&nbsp; number_hash[num] = numbers.count(num)</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; puts number_hash</p>\r\n\r\n<p>&nbsp; result = 0</p>\r\n\r\n<p>&nbsp; result = number_hash.values.max</p>\r\n\r\n<p>&nbsp; return &quot;#{number_hash.key(result)} appears for #{result} times&quot;</p>\r\n\r\n<p>end</p>\r\n\r\n<p>final_result = num_hash(numbers)</p>\r\n\r\n<p>puts</p>\r\n\r\n<p>final_result</p>\r\n\r\n<div>&nbsp;</div>\r\n	40	10	14	2017-05-07 06:26:10.349837	2017-05-07 06:26:10.349837	\N	\N	\N
420	<p>&nbsp;</p>\r\n\r\n<p>def spin_word(sentence)</p>\r\n\r\n<p>&nbsp; sentence= sentence.split(&quot; &quot;)</p>\r\n\r\n<p>&nbsp; output = &quot;&quot;</p>\r\n\r\n<p>&nbsp; #puts sentence</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; sentence.each do |s|</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; if s.length &gt; 5</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; output += &quot;#{s.reverse}&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; else</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; output += &quot;#{s} &quot;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;return output</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>puts &quot;Enter string::&quot;</p>\r\n\r\n<p>sentence = gets.chomp</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>result = spin_word(sen</p>\r\n\r\n<p>tence)</p>\r\n\r\n<p>puts result</p>\r\n\r\n<div>&nbsp;</div>\r\n	41	10	14	2017-05-07 06:26:10.351628	2017-05-07 06:26:10.351628	\N	\N	\N
421	<p>def scramble(str1,str2)</p>\r\n\r\n<p>&nbsp; &nbsp; str1_hash = {}&nbsp;<br />\r\n&nbsp; &nbsp; str2_hash = {}</p>\r\n\r\n<p>&nbsp; &nbsp; split_str1 = str1.split(&quot;&quot;)<br />\r\n&nbsp; &nbsp; split_str2 = str2.split(&quot;&quot;)</p>\r\n\r\n<p>&nbsp; &nbsp; split_str1.each do |val|<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;str1_hash[val] = val</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; split_str2.each do |key,value|<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;str2_hash[value] = value</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if str1_hash.key?(key)<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;return &quot;True&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;return &quot;False&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p><br />\r\nputs &quot;enter str1:&quot;<br />\r\nstr1 = gets<br />\r\nputs &quot;enter str2&quot;<br />\r\nstr2 = gets<br />\r\nputs scramble(str1,str2)</p>\r\n	39	5	14	2017-05-08 04:14:03.787516	2017-05-08 04:14:03.787516	\N	\N	\N
422	<p>def frequent_number(input_array)</p>\r\n\r\n<p>&nbsp; input_hash = {}<br />\r\n&nbsp; input_array.uniq.each do |val|<br />\r\n&nbsp; &nbsp; input_hash[val] = input_array.count(val)<br />\r\n&nbsp; end<br />\r\n&nbsp; maximum = input_hash.values.max<br />\r\n&nbsp; result = input_hash.key(maximum)<br />\r\n&nbsp; return &quot;the key #{result} occurs #{maximum} times&quot;<br />\r\nend</p>\r\n\r\n<p>input_array = [3,-1,2,-1,4,-1,2,-1,-1,5,4]</p>\r\n\r\n<p>puts frequent_number(input_array)</p>\r\n	40	5	14	2017-05-08 04:14:03.799994	2017-05-08 04:14:03.799994	\N	\N	\N
423	<p>def spinwords(str)<br />\r\n&nbsp; hash_str = {}<br />\r\n&nbsp; hash_spin = {}<br />\r\n&nbsp; split_sentance = str.split(&quot; &quot;)<br />\r\n&nbsp; split_sentance.each do |word|<br />\r\n&nbsp; &nbsp; hash_str[word] = word.split(&quot;&quot;).count<br />\r\n&nbsp; &nbsp; hash_str.each do |key,value|<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;if value &gt;= 5<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;hash_spin[key] = key.reverse<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;hash_spin[key] = key<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;end<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp; end<br />\r\n&nbsp; result = hash_spin.values.join(&quot; &quot;)<br />\r\n&nbsp; return result<br />\r\nend</p>\r\n\r\n<p><br />\r\nputs &quot;enter the string:&quot;<br />\r\nstr = gets<br />\r\nputs spinwords(str)</p>\r\n	41	5	14	2017-05-08 04:14:03.803981	2017-05-08 04:14:03.803981	\N	\N	\N
424	<p>#sir i will mail u &nbsp;this program&nbsp;</p>\r\n	39	4	14	2017-05-08 06:23:41.164346	2017-05-08 06:23:41.164346	\N	\N	\N
425	<p>input = [3,-1,2,-1,3,-1,9,11,-1,10,-1,-1,-1]<br />\r\ndef frequent_number (input)<br />\r\noutput ={}<br />\r\ninput.uniq.each do |i|</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;output[i]=input.count(i)<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\nend</p>\r\n\r\n<p>puts output</p>\r\n\r\n<p>maxi = output.values.max<br />\r\nresult = output.key(maxi)<br />\r\nreturn &quot;The key #{result} occurs #{maxi} times&quot;<br />\r\nend<br />\r\nputs frequent_number(input)</p>\r\n\r\n<p># output.each do | maxi|<br />\r\n# &nbsp;&nbsp; &nbsp;result = output.select{|k,v| &gt;= maxi}<br />\r\n# end</p>\r\n	40	4	14	2017-05-08 06:23:41.166757	2017-05-08 06:23:41.166757	\N	\N	\N
426	<p>def spinwords(str)<br />\r\n&nbsp;&nbsp; &nbsp;hash_str = {}<br />\r\n&nbsp;&nbsp; &nbsp;hash_spin = {}<br />\r\n&nbsp;&nbsp; &nbsp;split_sentance = str.split(&quot; &quot;)<br />\r\n&nbsp;&nbsp; &nbsp;split_sentance.each do |word|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;hash_str[word] = word.split(&quot;&quot;).count<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;hash_str.each do |key,value|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if value &gt;= 5<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;hash_spin[key] = key.reverse<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;hash_spin[key] = key&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;result = hash_spin.values.join(&quot; &quot;)<br />\r\n&nbsp;&nbsp; &nbsp;return result<br />\r\nend</p>\r\n\r\n<p>puts &quot;enter the string&quot;<br />\r\nstr = gets<br />\r\nputs spinwords(str)</p>\r\n	41	4	14	2017-05-08 06:23:41.168793	2017-05-08 06:23:41.168793	\N	\N	\N
427	<p>puts &quot;enter the string: &quot;<br />\r\nstr1 = gets.chomp.split(&quot;&quot;)<br />\r\nputs &quot;enter the string: &quot;<br />\r\nstr4 = []<br />\r\nstr2 = gets.chomp.split(&quot;&quot;)<br />\r\nstr1.each{|str| str2.include? str}<br />\r\nstr4.include? str<br />\r\nif str4.include?<br />\r\n&nbsp; puts true<br />\r\nelse<br />\r\n&nbsp; puts false<br />\r\nend<br />\r\n&nbsp;</p>\r\n	39	16	14	2017-05-08 06:27:29.912725	2017-05-08 06:27:29.912725	\N	\N	\N
428	<p>array = [-1, -1, 2, -1, -1, 3, 4, 5, 6, -1, 2, 3, 4, 4]<br />\r\nunique = array.uniq<br />\r\ncount = []<br />\r\nunique_2 = unique.each do |i|<br />\r\n&nbsp; count = array.count(i)<br />\r\n&nbsp; if count &gt; 1<br />\r\nputs &quot;#{count} occurences&quot;<br />\r\nelse<br />\r\n&nbsp; puts &quot;no occurences&quot;<br />\r\nend<br />\r\nend</p>\r\n	40	16	14	2017-05-08 06:27:29.914678	2017-05-08 06:27:29.914678	\N	\N	\N
430	<p>arr1 = []<br />\r\narr2 = []<br />\r\ni=0<br />\r\nj=0<br />\r\nhash_str_1 = {}<br />\r\nhash_str_2 = {}</p>\r\n\r\n<p>############### START OF METHOD DECLARATION############</p>\r\n\r\n<p><br />\r\ndef create_hash(arr)<br />\r\nhash_str_i = {}<br />\r\n&nbsp;arr.each do |char|<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;new_arr = arr.find_all{|n| n == char }<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;value = new_arr.length<br />\r\n&nbsp;&nbsp; &nbsp;hash_str_i[char] = value<br />\r\n&nbsp;end</p>\r\n\r\n<p>return hash_str_i</p>\r\n\r\n<p>end</p>\r\n\r\n<p>##########</p>\r\n\r\n<p>def scramble_iterator(arr2,hash_str_1)</p>\r\n\r\n<p>flag_Notfound=0</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;arr2.each do |char|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (hash_str_1.has_key?(char))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;val = hash_str_1[char]</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if val &gt; 0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;val1 = val-1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;hash_str_1[char] = val1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;flag_Notfound =1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return false<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;flag_Notfound =1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return false<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return true</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>end</p>\r\n\r\n<p><br />\r\n###############END OF METHOD DECLARATION############</p>\r\n\r\n<p>puts &quot;Enter the count of characters in string1 :&quot;<br />\r\n&nbsp;count_str1 = gets.to_i<br />\r\n&nbsp;puts &quot;Enter the&nbsp; characters in string1 :&quot;<br />\r\n&nbsp;while i &lt; count_str1<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;arr1.push(gets.chomp)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;i +=1<br />\r\n&nbsp;end<br />\r\n&nbsp;puts arr1<br />\r\n&nbsp;<br />\r\nputs &quot;Enter the count of characters in string2:&quot;<br />\r\n&nbsp;count_str2 = gets.to_i<br />\r\n&nbsp;puts &quot;Enter the&nbsp; charactrs in string2 :&quot;<br />\r\n&nbsp;while j &lt; count_str2<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;arr2.push(gets.chomp)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;j +=1<br />\r\n&nbsp;end</p>\r\n\r\n<p>########################################################</p>\r\n\r\n<p>hash_str_1 = create_hash(arr1)</p>\r\n\r\n<p>outcome = scramble_iterator(arr2,hash_str_1)</p>\r\n\r\n<p>#outcome = scramble_iterator(arr2,create_hash(arr1))</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;<br />\r\nif (outcome)</p>\r\n\r\n<p>puts &quot;your word CAN be formed !!!&quot;</p>\r\n\r\n<p>else</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;puts &quot;Sorry,your word CANNOT be formed &quot;</p>\r\n\r\n<p>end</p>\r\n	39	20	14	2017-05-08 09:16:07.325856	2017-05-08 09:16:07.325856	\N	\N	\N
431	<p>numbers = [3, -1, -1, -1, 2, 3, -1, 3, -1, 2, 4, 9, 3]</p>\r\n\r\n<p>numbers_hash = {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;numbers.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; numbers_hash[num] = numbers.count(num)&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;puts numbers_hash</p>\r\n\r\n<p>&nbsp;puts &quot;The Count of Most Frequent Item in an Array is #{numbers_hash[-1]}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	40	20	14	2017-05-08 09:16:07.346463	2017-05-08 09:16:07.346463	\N	\N	\N
432	<p>puts &quot;Enter a string&quot;<br />\r\nsentence = gets.chomp<br />\r\ndef reverse_string(sentence)<br />\r\n&nbsp;&nbsp; &nbsp;arr1 = &quot;&quot;<br />\r\n&nbsp;&nbsp; &nbsp;spins = sentence.split(&quot; &quot;)<br />\r\n&nbsp;&nbsp; &nbsp;spins.each do |spin|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if spin.length &gt;= 5<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr1 += spin.reverse + &quot; &quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr1 += spin + &quot; &quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;return &quot;#{arr1}&quot;<br />\r\nend</p>\r\n\r\n<p>results = reverse_string(sentence)<br />\r\nputs results</p>\r\n	41	20	14	2017-05-08 09:16:07.350874	2017-05-08 09:16:07.350874	\N	\N	\N
433	<p>Class is a blueprint of an object.&nbsp;</p>\r\n\r\n<p>For eg,&nbsp;</p>\r\n\r\n<p>For a cake, the cake pan will be the class and the flavor and color of the cake will be the method.&nbsp;</p>\r\n	46	8	15	2017-05-10 06:30:45.221741	2017-05-10 06:30:45.221741	\N	\N	\N
434	<p>Object is the final output product of the defined class.&nbsp;</p>\r\n\r\n<p>Eg: For a given &#39;flower cake pan&#39;</p>\r\n\r\n<p>The Class would be the Flower Cake pan</p>\r\n\r\n<p>The objects here could be:</p>\r\n\r\n<p>1. Pink Strawberry cake</p>\r\n\r\n<p>2. Brown Chocolate cake.&nbsp;</p>\r\n\r\n<p>In the above examples the flavour of each cake (object here) of the same type is the same and we also see different types of cake with the same shape/ frame.</p>\r\n	42	8	15	2017-05-10 06:30:45.225719	2017-05-10 06:30:45.225719	\N	\N	\N
435	<p>Attribute accessor combines the work of an attribute reader and attribute writer and give the comibed output.&nbsp;</p>\r\n\r\n<p>attr_writer is used to give an input and attr_reader is used to retrive/ read the input value.&nbsp;</p>\r\n\r\n<p>attr_accessor does both the tasks and gives the output.&nbsp;</p>\r\n	47	8	15	2017-05-10 06:30:45.229137	2017-05-10 06:30:45.229137	\N	\N	\N
436	<p>Writer methods are used to define and give values and&nbsp;</p>\r\n\r\n<p>reader methods are used to retrive and display those values given during&nbsp;the writing methods</p>\r\n	44	8	15	2017-05-10 06:30:45.232071	2017-05-10 06:30:45.232071	\N	\N	\N
437	<p>Instance variable are the variable that get called with the value while displaying the output.</p>\r\n\r\n<p>They are represented by &#39;@&#39; at the beginning of the variable.&nbsp;</p>\r\n\r\n<p>Eg: @name, @city</p>\r\n	43	8	15	2017-05-10 06:30:45.234824	2017-05-10 06:30:45.234824	\N	\N	\N
438	<p>The variable names should give a clear picture of the program at a glace.&nbsp;</p>\r\n\r\n<p>It should be easily readable to connect the dots while browsing through the program.&nbsp;</p>\r\n	45	8	15	2017-05-10 06:30:45.237414	2017-05-10 06:30:45.237414	\N	\N	\N
439	A class is a blueprint. In which we can declare attributes is also known as properties. And we can also define method it is also known as behaviour.\r\n\r\nclass User\r\n  attr_accesor :id, :name\r\nend\r\n\r\nhere User is the class and id and name instance variable.\r\n	46	3	15	2017-05-10 06:35:27.61829	2017-05-10 06:35:27.61829	\N	\N	\N
440	Object is the variable of the type class.\r\nby using object we refer all the instance variable.\r\n\r\ne.g \r\nclass User\r\n  attr_accessor :id, :name\r\nend\r\n\r\nuser1 = User.new\r\nuser1.id = 1\r\nuser1.name = "Ramesh"\r\n\r\nhere user1 is the object of type User.\r\nwith the help of user1 object we can use instance variable id and name.\r\n	42	3	15	2017-05-10 06:35:27.642042	2017-05-10 06:35:27.642042	\N	\N	\N
441	attr_accessor;\r\nattr_accessor is internally creates all readers and writers method for the all instance variable belongs to that class.\r\n\r\nattr_reader:\r\nattr_reader internally creates all reader or getter method for the instance variable\r\n\r\nattr_writer:\r\nattr_writer internally creates all the writer or setter method for the instance variable	47	3	15	2017-05-10 06:35:27.663257	2017-05-10 06:35:27.663257	\N	\N	\N
442	we use reader method to read or fetch data.\r\nwe use writer method to write data	44	3	15	2017-05-10 06:35:27.668338	2017-05-10 06:35:27.668338	\N	\N	\N
443	Instance variable is declare using @ symbol\r\ne.g @name, @id\r\ninitially the value of instance variable is nil \r\n\r\nto write any value to the instance variable we use writer or setter method.\r\nto read any value from the instance variable we use reader or getter method	43	3	15	2017-05-10 06:35:27.679045	2017-05-10 06:35:27.679045	\N	\N	\N
444	numbers = [10,20,30,40,50]\r\nhere we are working with array so the name of the variable name is  numbers.\r\n\r\nnumber =10\r\n\r\nhere we are working with a single number so we use variable name as number.\r\n	45	3	15	2017-05-10 06:35:27.690496	2017-05-10 06:35:27.690496	\N	\N	\N
445	<p>class is a blue print of an object.in class we define attributes and methods. Attributes also knows as behaviours whereas methods is also known as behaviours .</p>\r\n\r\n<p>the real example for class is cars, bikes</p>\r\n\r\n<p>in class, the first word first letter should be in a capital letter</p>\r\n	46	17	15	2017-05-10 06:38:59.539206	2017-05-10 06:38:59.539206	\N	\N	\N
446	<p>object consists of attributes and methods&nbsp;</p>\r\n\r\n<p>every single object have their own detail methods&nbsp;</p>\r\n	42	17	15	2017-05-10 06:38:59.541933	2017-05-10 06:38:59.541933	\N	\N	\N
447	<p>attr_accessor : attr_accessor is used to define both reader and writer methods</p>\r\n\r\n<p>attr_reader : attr_reader is used to define only reader method</p>\r\n\r\n<p>attr_writer : attr_writer is used to define only writer method&nbsp;</p>\r\n\r\n<p>attr_accessor take less time to compute and it occupies less memory when compared to attr_reader and attr_writer</p>\r\n	47	17	15	2017-05-10 06:38:59.544368	2017-05-10 06:38:59.544368	\N	\N	\N
448	<p>we use reader methods and writer methods in instance variable to read and write&nbsp;&nbsp;the variables which is also known as defining the variables</p>\r\n	44	17	15	2017-05-10 06:38:59.546845	2017-05-10 06:38:59.546845	\N	\N	\N
449	<p>instance variable is a variable which is defined by &#39;@&#39; symbol before the variable</p>\r\n\r\n<p>ex: @name, @language, @product</p>\r\n\r\n<p>by default, the value of instance variable will be zero</p>\r\n\r\n<p>the values of instance variable can be defined by using writer method</p>\r\n	43	17	15	2017-05-10 06:38:59.54938	2017-05-10 06:38:59.54938	\N	\N	\N
450	<p>the variable can be in the form of arrays or strings</p>\r\n\r\n<p>ex: numbers = [10,20,30] , sentence = &quot;hello world&quot;</p>\r\n\r\n<p>in instance variable, the name of the&nbsp;variable and the reader name should be equal</p>\r\n\r\n<p>&nbsp;</p>\r\n	45	17	15	2017-05-10 06:38:59.551858	2017-05-10 06:38:59.551858	\N	\N	\N
451	<p>class is an blue print of an object.Inside a class we define attributes and methods.The first letter of the class name will be capital.In class we using only instance variables</p>\r\n\r\n<p>class Movie</p>\r\n\r\n<p>def name=(@name)</p>\r\n\r\n<p>@name</p>\r\n\r\n<p>end</p>\r\n\r\n<p>def language=(@language)</p>\r\n\r\n<p>@language</p>\r\n\r\n<p>end</p>\r\n\r\n<p>def name</p>\r\n\r\n<p>@name</p>\r\n\r\n<p>end</p>\r\n\r\n<p>def language</p>\r\n\r\n<p>@language</p>\r\n\r\n<p>end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>movie1 = Movie.new # Movie.new is the object and we are assigning that object to the movie1 variable</p>\r\n\r\n<p>movie1.name=&quot;bahubali&quot;</p>\r\n\r\n<p>movie1.language=&quot;telugu&quot;</p>\r\n\r\n<p>puts &quot;#{movie1.name} - #{movie1.language}</p>\r\n\r\n<p>&nbsp;</p>\r\n	46	10	15	2017-05-10 06:41:17.491603	2017-05-10 06:41:17.491603	\N	\N	\N
452	<p>object is based on the blue print of the class</p>\r\n\r\n<p>we creating object by using new keyword</p>\r\n\r\n<p>Movie is the class name and Movie.new is the object</p>\r\n\r\n<p>we will assign object to the variable</p>\r\n\r\n<p>movie=Movie1.new</p>\r\n	42	10	15	2017-05-10 06:41:17.497798	2017-05-10 06:41:17.497798	\N	\N	\N
453	<p>attr_reader : we using attr_reader which creates internally all the reader methods</p>\r\n\r\n<p>attr_reader :id, :name</p>\r\n\r\n<p>attr_writer : we using attr_writer which creates internally all the writer methods</p>\r\n\r\n<p>attr_writer :id, :name</p>\r\n\r\n<p>attr_accessor : we using attr_accessor which creaters internally both reader and writer methods</p>\r\n\r\n<p>attr_accessor :id, :name</p>\r\n	47	10	15	2017-05-10 06:41:17.503025	2017-05-10 06:41:17.503025	\N	\N	\N
454	<p>reader methods will return the value of&nbsp; an instance variable. It exposes an instance variable</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>def @name</p>\r\n\r\n<p>@name</p>\r\n\r\n<p>end</p>\r\n\r\n<p>writer methods will allow setting an instance variable if we use = sign it will be a writer method</p>\r\n\r\n<p>def name=(name)</p>\r\n\r\n<p>@name</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n	44	10	15	2017-05-10 06:41:17.505227	2017-05-10 06:41:17.505227	\N	\N	\N
455	<p>instance variables available across the methods for any particular instance or object.instance variables are defined by using @ symbol</p>\r\n\r\n<p>by default the value of instance vaiable is nil</p>\r\n\r\n<p>instance variable can be accessed only through methods</p>\r\n\r\n<p>@name</p>\r\n\r\n<p>@language</p>\r\n\r\n<p>@category_id</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	43	10	15	2017-05-10 06:41:17.514051	2017-05-10 06:41:17.514051	\N	\N	\N
456	<p>variable name should not start with numbers like (1,2,3)&nbsp;&nbsp; # 3test1.rb not valid as variable name</p>\r\n\r\n<p>no special characters are allowed for variable names # test1##.rb not valid as variable name</p>\r\n\r\n<p>spaces should not be thier&nbsp; #test sample.rb not valid because spaces are not allowed</p>\r\n\r\n<p>instead of spaces we can use underscore # test_sample.rb it is valid variable name</p>\r\n\r\n<p>we should not start variable name with numbers but we can end with number that is a valid variable name #test1.rb valid variable name</p>\r\n\r\n<p>we should not start variable name with underscore it is not a valid variable name&nbsp;&nbsp; #_test1.rb</p>\r\n	45	10	15	2017-05-10 06:41:17.523453	2017-05-10 06:41:17.523453	\N	\N	\N
457	<p>class is a blue print of an object . Inside the class we define attributes are also known as properties and methods are also known as behaviours.</p>\r\n\r\n<p>these will be available in every single object created by the class.</p>\r\n\r\n<p>Real time example: Building</p>\r\n	46	18	15	2017-05-10 06:43:31.062155	2017-05-10 06:43:31.062155	\N	\N	\N
458	<p>object consist of &nbsp;attributes &amp; methods</p>\r\n	42	18	15	2017-05-10 06:43:31.065421	2017-05-10 06:43:31.065421	\N	\N	\N
459	<p>attr_accessor is used to define reader and as well as writter purpose.</p>\r\n\r\n<p>attr_reader is used for only reading purpose.</p>\r\n\r\n<p>attr_writter is used for only writing purpose.</p>\r\n\r\n<p>this is the difference between reader &amp; writter purpose.</p>\r\n	47	18	15	2017-05-10 06:43:31.070302	2017-05-10 06:43:31.070302	\N	\N	\N
460	<p>Reader method is used to read the variables.</p>\r\n\r\n<p>Writer method is used to write the variales.</p>\r\n	44	18	15	2017-05-10 06:43:31.073185	2017-05-10 06:43:31.073185	\N	\N	\N
461	<p>Instance variable is defined as the @ symbol before the name variable.&nbsp;</p>\r\n\r\n<p>eg: @product_id</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;@name</p>\r\n\r\n<p>&nbsp; &nbsp; @language</p>\r\n	43	18	15	2017-05-10 06:43:31.075839	2017-05-10 06:43:31.075839	\N	\N	\N
462	<p>Rules to choose variable names are as follows:</p>\r\n\r\n<p>1)the variable can be in the form of arrays or strings</p>\r\n\r\n<p>2)variable define inside the method is not available outside the method.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	45	18	15	2017-05-10 06:43:31.078701	2017-05-10 06:43:31.078701	\N	\N	\N
463	<p>Class is a blue print of an object and it contains attributes and methods which are available to all the objects of that class.&nbsp;</p>\r\n\r\n<p>For example: zomato.com</p>\r\n\r\n<p>zomato.com has a list of hotels which are classes and inside the hotel class there are attributes like name,id,place etc</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>class Empire</p>\r\n\r\n<p>&nbsp; &nbsp;attr_accessor :name, :id, :place</p>\r\n\r\n<p>end &nbsp;</p>\r\n	46	5	15	2017-05-10 06:44:09.837989	2017-05-10 06:44:09.837989	\N	\N	\N
464	<p>object is an instance of a class. every object holds a specific set of values. definition of type of values are&nbsp;mentioned in the class.</p>\r\n	42	5	15	2017-05-10 06:44:09.886064	2017-05-10 06:44:09.886064	\N	\N	\N
465	<p>attr_accessor defines both readers and writers methods along with instance variables.&nbsp;</p>\r\n\r\n<p>using attr_accessor is not appropriate while we need to hide the data in some cases.</p>\r\n	47	5	15	2017-05-10 06:44:09.898718	2017-05-10 06:44:09.898718	\N	\N	\N
466	<p>writer methods are used for&nbsp;assigning values to an instance variables.</p>\r\n\r\n<p>reader methods are used for accessing the values from instance variables.</p>\r\n	44	5	15	2017-05-10 06:44:09.920744	2017-05-10 06:44:09.920744	\N	\N	\N
467	<p>instance variables are the variables defined within the class with @ symbol. They&nbsp;can be accessed through objects. these varianles are assigned with values through objects.</p>\r\n	43	5	15	2017-05-10 06:44:09.923925	2017-05-10 06:44:09.923925	\N	\N	\N
468	<p>variable names should be relevant to the program task. and in the full form. no short names.&nbsp;</p>\r\n\r\n<p>this will help maintain the code in future and easy to understand for others.</p>\r\n	45	5	15	2017-05-10 06:44:09.926865	2017-05-10 06:44:09.926865	\N	\N	\N
469	<p>A class is blue print of an object or the guidelines , inside a class define the behaviour &nbsp;of the obejcts that are mentioned inside the class , like setting the data or getting the data .</p>\r\n\r\n<p>eg:-&nbsp;</p>\r\n\r\n<p>class Book</p>\r\n\r\n<p>attr_writer</p>\r\n\r\n<p>attr_reader</p>\r\n\r\n<p>end</p>\r\n	46	4	15	2017-05-10 06:46:20.608611	2017-05-10 06:46:20.608611	\N	\N	\N
470	<p>object is an real world entity , which has some behaviours to do .</p>\r\n	42	4	15	2017-05-10 06:46:20.611548	2017-05-10 06:46:20.611548	\N	\N	\N
471	<p>attr_writer is called as setter where , we will assign the value to the instance variable&nbsp;</p>\r\n\r\n<p>attr_reader is called as getter &nbsp;where, we ll get the valur of&nbsp; the instance variable</p>\r\n\r\n<p>attr _accessor &nbsp;dose both reading an writing the value &nbsp;to&nbsp;the instance varible&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	47	4	15	2017-05-10 06:46:20.614151	2017-05-10 06:46:20.614151	\N	\N	\N
472	<p>In a class we need to use intance varible that can be read by reader method an written by writer method&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	44	4	15	2017-05-10 06:46:20.617668	2017-05-10 06:46:20.617668	\N	\N	\N
473	<p>Instance variable is variable used insde a class which is used to get n set values for it ,it is represnted with &#39;@&#39;</p>\r\n\r\n<p>eg;- @name. @id</p>\r\n	43	4	15	2017-05-10 06:46:20.620197	2017-05-10 06:46:20.620197	\N	\N	\N
503	<p>Instance variable is begin with. @.</p>\r\n\r\n<p>Def @ name</p>\r\n\r\n<p>@name</p>\r\n\r\n<p>End</p>\r\n\r\n<p>&nbsp;</p>\r\n	43	7	15	2017-05-10 07:02:20.250037	2017-05-10 07:02:20.250037	\N	\N	\N
475	<p>&nbsp;Class is blueprint. which contains attributes and methods of an object . so what is an object should be and what i&#39;ll do is define inside class.</p>\r\n\r\n<p>so we can simply say an object contains copy of class.</p>\r\n\r\n<p>syntax = class Product (here product is name of a class)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; attr_accessor :id,:name,:price,:category_id (getter and setter called together)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n	46	12	15	2017-05-10 06:49:35.425941	2017-05-10 06:49:35.425941	\N	\N	\N
476	<p>object is reffered to a variable and its contains copy of class where we already define its attributes and methods called as behavior.</p>\r\n\r\n<p>syntax p1 = Product.new (here product.new creating a new object which is reffered to a variable named p1)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p1.id = 1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p1.name=&quot;Mobile Phone&quot; (here we assigning or setting the values to the variable)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end</p>\r\n	42	12	15	2017-05-10 06:49:35.428095	2017-05-10 06:49:35.428095	\N	\N	\N
477	<p>class Product<br />\r\n&nbsp; attr_reader :id,:name #sets up all the reader methods<br />\r\n&nbsp; attr_writer :id,:name #set all the writer methods</p>\r\n\r\n<p>attr_accessor :id,:name (perform both task in one line code)</p>\r\n\r\n<p>disadvantage is we cant choose particular attribute or methods it will display all of it .</p>\r\n	47	12	15	2017-05-10 06:49:35.429981	2017-05-10 06:49:35.429981	\N	\N	\N
478	<p>we use reader and writer method to give the input value and fatch through reader.</p>\r\n	44	12	15	2017-05-10 06:49:35.431836	2017-05-10 06:49:35.431836	\N	\N	\N
479	<p>we define an instance variable using @ like @name</p>\r\n\r\n<p>we cant use local and block variable in object and class</p>\r\n\r\n<p>so that we using instance variable to hold the value which is only accessible by class object.</p>\r\n	43	12	15	2017-05-10 06:49:35.433562	2017-05-10 06:49:35.433562	\N	\N	\N
480	<p>variable name should be very understandable better consider singular and plural to get better naming conventions</p>\r\n	45	12	15	2017-05-10 06:49:35.435272	2017-05-10 06:49:35.435272	\N	\N	\N
481	 is the blueprint from which individual objects are created\r\nex :class name\r\nend	46	6	15	2017-05-10 06:58:21.509811	2017-05-10 06:58:21.509811	\N	\N	\N
482	everything in Ruby is an object. Objects are created from classes\r\nex : "string"=string obj\r\n10=num obj 	42	6	15	2017-05-10 06:58:21.52173	2017-05-10 06:58:21.52173	\N	\N	\N
483	attr_accessor :var\r\nattr_reader :var\r\nattr_writer :var\r\nIs there something like performance which I doubt? in my var	47	6	15	2017-05-10 06:58:21.53278	2017-05-10 06:58:21.53278	\N	\N	\N
484	reader method\r\ndef name\r\n @name\r\n end\r\nit use for read a data\r\nwritter method\r\ndef name(user_input)\r\n@name = user_input\r\nend\r\nwritter is used for writ datd	44	6	15	2017-05-10 06:58:21.53872	2017-05-10 06:58:21.53872	\N	\N	\N
485	An instance variable has a name beginning with @, and its scope is confined to whatever object self refers to. Two different objects, even if they belong to the same class, are allowed to have different values for their instance variables\r\n@name	43	6	15	2017-05-10 06:58:21.554385	2017-05-10 06:58:21.554385	\N	\N	\N
486	A variable is a place to store data. Each variable is given a unique name. There are some naming conventions which apply to variable names. Variables hold objects\r\nn1=10\r\n|nam|\r\n@nmae	45	6	15	2017-05-10 06:58:21.557813	2017-05-10 06:58:21.557813	\N	\N	\N
487	<p>class is a blueprint of an object ,inside a class&nbsp; we define attributes/properties and methods/behaviour.These attributes and methods will be available to every single objects.</p>\r\n\r\n<p>example: let us take car as an example, car is a blueprint, A can contain wheels,mirror as attributes and methods,when we create object for a car i,e</p>\r\n\r\n<p>cars = Car.new&nbsp;</p>\r\n\r\n<p>attributes and methods will be availabe to that object.</p>\r\n\r\n<p>&nbsp;</p>\r\n	46	20	15	2017-05-10 06:59:54.146908	2017-05-10 06:59:54.146908	\N	\N	\N
488	<p>In ruby everything is object, apart from variable.</p>\r\n\r\n<p>if there is class , than we create object for that class,then we making use of that object and call the required method.</p>\r\n\r\n<p>All object have an identity.</p>\r\n	42	20	15	2017-05-10 06:59:54.15764	2017-05-10 06:59:54.15764	\N	\N	\N
489	<p>attr_reader :- is sets up all the reader methods.</p>\r\n\r\n<p>attr_writer :- it will create internally all the writter methods.</p>\r\n\r\n<p>attr_accessor :-if we define attr_accessor it will perform both attr_reader and attr_writter methods.</p>\r\n	47	20	15	2017-05-10 06:59:54.161674	2017-05-10 06:59:54.161674	\N	\N	\N
490	<p>reader method is used to read the method or instance variable.</p>\r\n\r\n<p>writer method is used to insert the values to it by making use of = symbol.</p>\r\n	44	20	15	2017-05-10 06:59:54.164183	2017-05-10 06:59:54.164183	\N	\N	\N
491	<p>Instance variable is denoted by @ symbol.</p>\r\n\r\n<p>By default instance variable is nil.</p>\r\n\r\n<p>Instance variable can be accessed only through methods.</p>\r\n\r\n<p>The values of instance variables can be assigned through getters and setters methods.</p>\r\n\r\n<p>Instance variable and method name should be same</p>\r\n	43	20	15	2017-05-10 06:59:54.166698	2017-05-10 06:59:54.166698	\N	\N	\N
492	<p>variables in Ruby can contain data of any type. we can use variables in&nbsp; Ruby programs <em>without any declarations</em>.(local, block, instance, etc.).</p>\r\n\r\n<p>local variable:- Local variables exist within the definition of a Ruby module, method, class.</p>\r\n\r\n<p>instance variable :- instance variable are available through out the program.</p>\r\n\r\n<p>block variable:- block variable can be accessed only inside a block.can not access outside</p>\r\n\r\n<p>Variables in Ruby can contain different values and different types of values.</p>\r\n	45	20	15	2017-05-10 06:59:54.168924	2017-05-10 06:59:54.168924	\N	\N	\N
493	<p>Class is blueprint of an object.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Example:</p>\r\n\r\n<p>class Restaurants</p>\r\n\r\n<p>def name=name</p>\r\n\r\n<p>@name = name</p>\r\n\r\n<p>end</p>\r\n\r\n<p>def location=location</p>\r\n\r\n<p>@location=location</p>\r\n\r\n<p>end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n	46	2	15	2017-05-10 07:01:33.298913	2017-05-10 07:01:33.298913	\N	\N	\N
494	<p>Objects are samples of class (with values assigned)</p>\r\n	42	2	15	2017-05-10 07:01:33.301526	2017-05-10 07:01:33.301526	\N	\N	\N
495	<p>attr_accessor can do the function of both attr_reader and attr_write (Both read and write)</p>\r\n	47	2	15	2017-05-10 07:01:33.303758	2017-05-10 07:01:33.303758	\N	\N	\N
496	<p>reader method is used to read the values(output)</p>\r\n\r\n<p>writer method is used to write the values(input)</p>\r\n	44	2	15	2017-05-10 07:01:33.305873	2017-05-10 07:01:33.305873	\N	\N	\N
497	<p>when we want to assign different values to the same variable ,we use instance variable in class &amp; it can be invoked only using methods. Instance variable always begins with &quot;@&quot;.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>example</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>class Movie</p>\r\n\r\n<p>def name=name</p>\r\n\r\n<p>@name = name</p>\r\n\r\n<p>end&nbsp;</p>\r\n\r\n<p>end</p>\r\n\r\n<p>where @name is instance variable</p>\r\n	43	2	15	2017-05-10 07:01:33.308339	2017-05-10 07:01:33.308339	\N	\N	\N
498	<p>-Specific</p>\r\n\r\n<p>-Short &amp; Simple</p>\r\n\r\n<p>-should use only lower case ?</p>\r\n\r\n<p>&nbsp;</p>\r\n	45	2	15	2017-05-10 07:01:33.310631	2017-05-10 07:01:33.310631	\N	\N	\N
499	<p>Class is the blue print of an object.</p>\r\n\r\n<p>Class movie</p>\r\n\r\n<p>Def name=(name)</p>\r\n\r\n<p>@name=name</p>\r\n\r\n<p>End</p>\r\n\r\n<p>Def @name</p>\r\n\r\n<p>@name</p>\r\n\r\n<p>End</p>\r\n\r\n<p>End</p>\r\n\r\n<p>Movie1=Movie.new</p>\r\n\r\n<p>Puts movie1.name</p>\r\n	46	7	15	2017-05-10 07:02:20.223657	2017-05-10 07:02:20.223657	\N	\N	\N
500	<p>Object is created from the class.object is consist of attributes and methods.&nbsp;</p>\r\n	42	7	15	2017-05-10 07:02:20.229791	2017-05-10 07:02:20.229791	\N	\N	\N
504	<p>A variable is place to store data.Each variable is given a unique name.</p>\r\n\r\n<p>Ex:num1=10</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	45	7	15	2017-05-10 07:02:20.258993	2017-05-10 07:02:20.258993	\N	\N	\N
505	For 1 & 2 -->\r\n\r\nrequire 'faker'\r\nrequire './category'\r\nrequire './product'\r\n\r\ncategories = []\r\nproducts = []\r\n\r\ni=1\r\n10.times do\r\ncategory = Category.new\r\ncategory.id = i\r\ncategory.name = Faker::Commerce.department(1)\r\ncategories.push(category)\r\ni += 1\t\r\nend\r\n\r\n\t#puts "************** Categories List"\r\n\t#categories.each do |category|\r\n\t#puts "Categories are : #{category.id} #{category.name}"\r\n\t # .name is the reader method for returning the  value of the instance variable @name\r\n\t#end\r\n\r\ni=1\r\n10.times do\r\n\tproduct = Product.new\r\n\tproduct.id =i\r\n\tproduct.name = Faker::Commerce.product_name\r\n\t#product.category_id = categories.sample.id\r\n\tproducts.push(product)\r\n\t\t5.times do\r\n\t\t\tproduct.category_id = categories.sample.id\r\n\t\tend\r\n\ti +=1\r\n\tend\r\n\r\n\t#puts "************** Products List"\r\n\t#products.each do |product|\r\n\t#product.category_id = categories.sample.id\r\n\t#puts "Products are : #{product.name}                       and its Category id is #{product.category_id}"  \r\n\t#end\r\n\r\n\t#1 & 2\r\n\tcategories.each do |category|\r\n\t\tputs "CATEGORY: #{category.name}"\r\n\t\tcategory_products = products.find_all{|product| category.id == product.category_id }\r\n\t\t\tif (category_products.length > 0)\r\n\t\t\t\tcategory_products.each_with_index do |product, index|\r\n\t\t\t\tputs " Products are #{index+1}: #{product.name} "\r\n\t\t\t\tend\r\n\t\t\telse\r\n\t\t\t\tputs "No products found for this Category"\r\n\t\t\tend\r\n\r\n\t\tputs " and total Count for Category : #{category.name} is :  #{category_products.length}"\r\n\r\n\tend\r\n\r\n#Categories refer to array of Category Objects\r\n#Category : is block variable which refers to each iterating object in Categories array\r\n#Categories refer to array of Category Objects\r\n#Category : is block variable which refers to each iterating object in Categories array\r\n\r\n\r\n=begin\r\nproduct_count=0\r\n\r\n\t\t products.each do |product|\r\n\t\t \t\r\n\t\t\tif (product.category_id == category.id)\r\n\t\t\t\t\t#puts "     Product Name : #{product.name}  and its Category ID: #{product.category_id}"\r\n\t\t\t\t\tproduct_count +=1\r\n\t\t\t\t\tputs "#{category.name} : #{product.name}"\r\n\t\t\tend\t\r\n\r\n\t\t\t\t\t\r\n\t\tend\r\n\t\t#puts "#{category.name} : #{product_count}"\r\n=end	48	19	16	2017-05-10 07:03:29.470783	2017-05-10 07:03:29.470783	\N	\N	\N
506	<p>Class is a blueprint of an object. Inside a class we define attributes also known as properties and methods also known as behaviours .These attributes and methods will now be available to every single object&nbsp; instantiated of a class.</p>\r\n\r\n<p>Here in the below example Movie is a class and movie1 is an object created out of Movie Class</p>\r\n\r\n<p>Class Movie&nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>end</p>\r\n\r\n<p>movie1 = Movie.new</p>\r\n\r\n<p>&nbsp;</p>\r\n	46	9	15	2017-05-10 07:06:00.006827	2017-05-10 07:06:00.006827	\N	\N	\N
507	<p>object is a copy of the blueprint(class) which has its own set of&nbsp; attributes and methods&nbsp; where the value can be assigned.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ex movie1 = Movie.new&nbsp;&nbsp; Here&nbsp; Movie.new creates a object of class Movie which is referenced by movie1 variable.</p>\r\n	42	9	15	2017-05-10 07:06:00.009859	2017-05-10 07:06:00.009859	\N	\N	\N
508	<p>attr_accessor lets us define both reader and writer method at once. wheresas in attr_reader we should define only the reader method(attributes) and attr_writter define only the writer method for the class.</p>\r\n	47	9	15	2017-05-10 07:06:00.012128	2017-05-10 07:06:00.012128	\N	\N	\N
509	<p>writer method is used to get input from the user/assign value , while reader method is use to read values from the instance variable.</p>\r\n	44	9	15	2017-05-10 07:06:00.014521	2017-05-10 07:06:00.014521	\N	\N	\N
510	<p>Instance variable is represented using an &#39;@&#39; symbol using a variable name</p>\r\n\r\n<p>Instance variable by default has nil value</p>\r\n\r\n<p>Instance variable can only be accessed through methods</p>\r\n\r\n<p>The values of instance variables can be assigned using special method called writer method</p>\r\n\r\n<p>The value of instance variable can be read via a reader method</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ex @value @name @language</p>\r\n	43	9	15	2017-05-10 07:06:00.01682	2017-05-10 07:06:00.01682	\N	\N	\N
511	<p>variable name should start with a lower case letter and should not contain any reserved words defined in ruby. Variable name should be choosen such that it best decribes the purpose or kind of values it stored</p>\r\n\r\n<p>Example movie_name, number_array</p>\r\n	45	9	15	2017-05-10 07:06:00.019169	2017-05-10 07:06:00.019169	\N	\N	\N
512	<ul>\r\n\t<li>class is the blue print of an object.</li>\r\n\t<li>we define properties and methods inside a class,</li>\r\n\t<li>when defining a class the first letter of the name of the class must always be in caps.</li>\r\n</ul>\r\n\r\n<p>eg:-</p>\r\n\r\n<p>class Song</p>\r\n\r\n<p>def initialize(name, artist, duration)</p>\r\n\r\n<p>@name = name</p>\r\n\r\n<p>@artist = artist</p>\r\n\r\n<p>@duration = duration</p>\r\n\r\n<p>end</p>\r\n\r\n<p>end</p>\r\n	46	16	15	2017-05-10 07:27:15.456323	2017-05-10 07:27:15.456323	\N	\N	\N
513	<ul>\r\n\t<li>object consists of attributes and methods</li>\r\n\t<li>the attributes and methods &nbsp;will be available to every single object instantiated to the class</li>\r\n</ul>\r\n\r\n<p>eg:-</p>\r\n\r\n<p>&nbsp;class Movie<br />\r\nend<br />\r\nmovie1 = Movie.new</p>\r\n\r\n<p>*movie1 is an object*</p>\r\n	42	16	15	2017-05-10 07:27:15.459033	2017-05-10 07:27:15.459033	\N	\N	\N
514	<p>attr_reader sets the reader methods</p>\r\n\r\n<p>eg:-</p>\r\n\r\n<p>attr_reader: name</p>\r\n\r\n<p>this gets translated to,</p>\r\n\r\n<ul>\r\n\t<li>def name</li>\r\n\t<li>@name</li>\r\n\t<li>end</li>\r\n</ul>\r\n\r\n<p>attr_writer sets the writer methods&nbsp;</p>\r\n\r\n<p>eg:-</p>\r\n\r\n<p>attr_writer: name</p>\r\n\r\n<p>this gets translated to,</p>\r\n\r\n<ul>\r\n\t<li>def name = name</li>\r\n\t<li>@name = name</li>\r\n\t<li>end</li>\r\n</ul>\r\n\r\n<p>attr_accessor does the job of both reader and writer methods&nbsp;</p>\r\n\r\n<p>eg:- attr_accessor: name</p>\r\n\r\n<p>this gets translated to,</p>\r\n\r\n<ul>\r\n\t<li>def name = name</li>\r\n\t<li>name = name</li>\r\n\t<li>end</li>\r\n\t<li>def name</li>\r\n\t<li>@name</li>\r\n\t<li>end</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n	47	16	15	2017-05-10 07:27:15.461416	2017-05-10 07:27:15.461416	\N	\N	\N
515	<p>We use reader methods to read the values of the instance variables</p>\r\n\r\n<p>We use writer methods to assign values to the instance variables&nbsp;</p>\r\n	44	16	15	2017-05-10 07:27:15.463978	2017-05-10 07:27:15.463978	\N	\N	\N
516	<ul>\r\n\t<li>An instance variable is represented using a @ symbol before a variable name</li>\r\n</ul>\r\n\r\n<p>eg:- @name, @language.</p>\r\n\r\n<ul>\r\n\t<li>by default the value of instance variable is nil</li>\r\n\t<li>an instance variable can be accessed only through methods &nbsp;</li>\r\n</ul>\r\n	43	16	15	2017-05-10 07:27:15.466735	2017-05-10 07:27:15.466735	\N	\N	\N
517	<p>There are 4 variables</p>\r\n\r\n<ul>\r\n\t<li>Local variables :- These variables are available across the program</li>\r\n</ul>\r\n\r\n<p>eg:- sum, number_1</p>\r\n\r\n<ul>\r\n\t<li>block variables :- These variables are available inside the block</li>\r\n</ul>\r\n\r\n<p>eg:-&nbsp;sum = 0<br />\r\nnumbers = [10,20,30]<br />\r\nnumbers.each do |n| ---&gt; is the block variable and is available withing the &quot;do&quot; and &quot;end&#39;<br />\r\n&nbsp; sum += n<br />\r\nend</p>\r\n\r\n<ul>\r\n\t<li>instance variable :- an instance variable is represented using the @ symbol before a variable name</li>\r\n\t<li>by default the value of the instance variable is nil</li>\r\n</ul>\r\n\r\n<p>eg:-&nbsp;def language=(user_input_language)<br />\r\n&nbsp; @language = user_input_language ---&gt; here @ language is the instance variable<br />\r\nend</p>\r\n	45	16	15	2017-05-10 07:27:15.469324	2017-05-10 07:27:15.469324	\N	\N	\N
518	<p>we use &quot;document.getElementById&quot; when we want to get a hook or handle on a particular ID that we would like to use.</p>\r\n\r\n<p>we use &quot;document.getElementsByTagName&quot; when we want or would like to get all the elements in the particular page by referencing to the tag name of that tag.</p>\r\n	49	25	17	2017-05-10 14:41:49.922864	2017-05-10 14:41:49.922864	\N	\N	\N
519	<p>Element node</p>\r\n\r\n<p>text node</p>\r\n\r\n<p>attribute node</p>\r\n	50	25	17	2017-05-10 14:41:49.925322	2017-05-10 14:41:49.925322	\N	\N	\N
520	<p>Text node - visit google</p>\r\n\r\n<p>attribute node - href, target</p>\r\n\r\n<p>element node - &lt;a&gt;&lt;/a&gt;</p>\r\n	51	25	17	2017-05-10 14:41:49.926926	2017-05-10 14:41:49.926926	\N	\N	\N
521	<p>var unprotoObject = new Object();</p>\r\n\r\n<p>unprotoObject.name = &quot;new object without prototye.&quot;</p>\r\n\r\n<p>USING PROTOTYPE</p>\r\n\r\n<p>function createObject(name){</p>\r\n\r\n<p>this.name = name;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>var protoObject = new createObject(pk);</p>\r\n	52	25	17	2017-05-10 14:41:49.929006	2017-05-10 14:41:49.929006	\N	\N	\N
522	<p>document.getElementById can be&nbsp;used to pick up elements by reference of its id.&nbsp;</p>\r\n\r\n<p>document.getElementByTagName&nbsp;can be used to pick up elements based on various tags present in document. ex; document.getElementByTagName(&#39;li&#39;) = gives us alll li tags in the document.&nbsp;</p>\r\n	49	27	17	2017-05-10 14:45:18.852379	2017-05-10 14:45:18.852379	\N	\N	\N
523	<p>1. element node<br />\r\n2. attribute node<br />\r\n3. text node<br />\r\n&nbsp;</p>\r\n	50	27	17	2017-05-10 14:45:18.854397	2017-05-10 14:45:18.854397	\N	\N	\N
525	<p>with object prototype-&gt;</p>\r\n\r\n<p>function Player(){<br />\r\n&nbsp;&nbsp; &nbsp;var name;<br />\r\n&nbsp;&nbsp; &nbsp;var rank;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>var p1 = new Player();</p>\r\n\r\n<p>without object prototype -&gt;</p>\r\n\r\n<p>var player = new Object();<br />\r\nplayer.name = &quot;Virat&quot;<br />\r\nplayer.rank = 1<br />\r\nplayer.team = &quot;India&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	52	27	17	2017-05-10 14:45:18.858837	2017-05-10 14:45:18.858837	\N	\N	\N
526	document.getElementById is used to fetch all the elements in the document based on their ids.Eg :document.getElementById('addTask')\r\n\r\ndocument.getElementsByTagName is used to fetch all the elements in the document by using their tag names i.e <li>,<ul> etc\r\nEg:document.getElementsByTagName('li');	49	28	17	2017-05-10 14:55:34.270902	2017-05-10 14:55:34.270902	\N	\N	\N
527	Three node elements are:\r\n*Element node   Eg:[<ul>]\r\n*Attribute node   Eg:[='id']\r\n*Text node  Eg: [<li>]]	50	28	17	2017-05-10 14:55:34.273984	2017-05-10 14:55:34.273984	\N	\N	\N
528	element node:<a> </a>\r\nattribute node: href="www.google.com" target="_blank"\r\ntext node:Visit Google	51	28	17	2017-05-10 14:55:34.275955	2017-05-10 14:55:34.275955	\N	\N	\N
529	var player = new Object();\r\n\r\nfunction Player(){\r\n\tthis.name;\r\n\tthis.rank;\r\n\tthis.details = function(){\r\n\t\treturn (this.name + " " + this.rank);\r\n\t}\r\nObject without prototype:\r\nvar p1 = new Player('virat',1,'india');\r\n\r\nObject with prototype:\r\nvar p1 = new Player();\r\np1.name = "Nisarga"\r\np1.rank = 1;	52	28	17	2017-05-10 14:55:34.277918	2017-05-10 14:55:34.277918	\N	\N	\N
530	<p><strong>document.getElementById : </strong>if we need to display some data in the html using javascript, we will use&nbsp;document.getElementById. using this function we will get the id and by using inner.HTML we will display the data</p>\r\n\r\n<p>eg:&nbsp;document.getElementById(&quot;numbers&quot;)</p>\r\n\r\n<p><strong>document.getElementsByTagName </strong>: To fetch the data from the html page about the elements related to a particular tag.</p>\r\n\r\n<p>eg:&nbsp;document.getElementsByTagName(&#39;a&#39;)</p>\r\n	49	24	17	2017-05-10 14:55:55.085021	2017-05-10 14:55:55.085021	\N	\N	\N
531	<ol>\r\n\t<li>&nbsp;Element node</li>\r\n\t<li>Attribute node</li>\r\n\t<li>Text node</li>\r\n</ol>\r\n	50	24	17	2017-05-10 14:55:55.087524	2017-05-10 14:55:55.087524	\N	\N	\N
532	<ol>\r\n\t<li>Element node : a</li>\r\n\t<li>Attribute node : www.google.com</li>\r\n\t<li>Text node : Visit Google</li>\r\n</ol>\r\n	51	24	17	2017-05-10 14:55:55.089467	2017-05-10 14:55:55.089467	\N	\N	\N
533	<p><strong>using object prototype </strong></p>\r\n\r\n<p>var alphabets = new Object();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>eg:&nbsp;var player = new Object();<br />\r\nplayer.name = &quot;Virat&quot;<br />\r\nplayer.rank = 1<br />\r\nplayer.team = &quot;India&quot;<br />\r\nplayer.details = function(){<br />\r\n&nbsp;&nbsp; &nbsp;return(this.name + &quot; &quot; + this.rank + &quot; &quot; + this.team)<br />\r\n}</p>\r\n\r\n<p><strong>without using object prototype</strong></p>\r\n\r\n<p>var student = new Player();</p>\r\n\r\n<p>eg:&nbsp;</p>\r\n\r\n<p>function Player(){<br />\r\n&nbsp;&nbsp; &nbsp;this.name;<br />\r\n&nbsp;&nbsp; &nbsp;this.rank;<br />\r\n&nbsp;&nbsp; &nbsp;this.team;<br />\r\n&nbsp;&nbsp; &nbsp;this.details = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return (this.name + &quot; &quot; + this.rank + &quot; &quot; + this.team + &quot; &quot; + this.iplTeam)<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;var p1 = new Player();<br />\r\n&nbsp;&nbsp; &nbsp;p1.name = &#39;Virat&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;p1.rank = 1;<br />\r\n&nbsp;&nbsp; &nbsp;p1.team = &quot;India&quot;<br />\r\n&nbsp;&nbsp; &nbsp;p1.iplTeam = &quot;RCB&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	52	24	17	2017-05-10 14:55:55.091213	2017-05-10 14:55:55.091213	\N	\N	\N
534	<p>document.getElementById is used when we want to access an element that has specified id attribute.</p>\r\n\r\n<p>document.getElementByTagName will return an array of all the specified tagname</p>\r\n	49	30	17	2017-05-10 14:56:57.949966	2017-05-10 14:56:57.949966	\N	\N	\N
535	<p>3 types are</p>\r\n\r\n<p>element node</p>\r\n\r\n<p>attribute node</p>\r\n\r\n<p>text node</p>\r\n	50	30	17	2017-05-10 14:56:57.951749	2017-05-10 14:56:57.951749	\N	\N	\N
536	<p>&lt;a&gt;&lt;/a&gt; - elementnode</p>\r\n\r\n<p>href =&quot;www.google.com&quot; is attribute node</p>\r\n\r\n<p>&nbsp;Visit Google &nbsp;- textnode</p>\r\n	51	30	17	2017-05-10 14:56:57.953416	2017-05-10 14:56:57.953416	\N	\N	\N
537	<p>object without prototype</p>\r\n\r\n<p>var student = new object();</p>\r\n\r\n<p>student.name = &quot;xyz&quot;</p>\r\n\r\n<p>student.email = &quot;xyz@gmail.com&quot;</p>\r\n\r\n<p>object with prototype</p>\r\n\r\n<p>function &nbsp;student(){</p>\r\n\r\n<p>this.name;</p>\r\n\r\n<p>this.email;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>var s= new student();</p>\r\n\r\n<p>s.name= &quot;xyz&quot;</p>\r\n\r\n<p>s.email =&quot;xyz@gmail.com</p>\r\n\r\n<p>s.mobile = &quot;123456789&quot;</p>\r\n	52	30	17	2017-05-10 14:56:57.955294	2017-05-10 14:56:57.955294	\N	\N	\N
538	<p>document.getElementById is used when we want the access to the specific&nbsp;id</p>\r\n\r\n<p>document.getByTagName is used when we want the access to the specific tag name which returns array</p>\r\n	49	22	17	2017-05-10 14:58:16.477749	2017-05-10 14:58:16.477749	\N	\N	\N
539	<p>The 3 node element are</p>\r\n\r\n<p>Element node</p>\r\n\r\n<p>Attribute node</p>\r\n\r\n<p>Text node</p>\r\n	50	22	17	2017-05-10 14:58:16.481032	2017-05-10 14:58:16.481032	\N	\N	\N
540	<p>&lt;a&gt; &lt;/a&gt; = Element node</p>\r\n\r\n<p>href=&quot;www.google.com&quot; target=&quot;_blank&quot; = Attribute node</p>\r\n\r\n<p>Visit Google = Text node</p>\r\n\r\n<p>&nbsp;</p>\r\n	51	22	17	2017-05-10 14:58:16.483987	2017-05-10 14:58:16.483987	\N	\N	\N
541	<p>object without prototype</p>\r\n\r\n<p>var course&nbsp;= new Object();<br />\r\ncourse.name = &quot;ROR&quot;;</p>\r\n\r\n<p>console.log(course.name);</p>\r\n\r\n<p>object with&nbsp;prototype</p>\r\n\r\n<p>function course()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>this.name;</p>\r\n\r\n<p>this.duration;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>var p1 = new Course();<br />\r\np1.name = &quot;ROR&quot;;</p>\r\n\r\n<p>p1.duration&nbsp;=2 ;</p>\r\n\r\n<p>console.log(p1.name);</p>\r\n\r\n<p>console.log(p1.duration);</p>\r\n	52	22	17	2017-05-10 14:58:16.486277	2017-05-10 14:58:16.486277	\N	\N	\N
542	<p>1.method returns the that has the ID attribute &nbsp;with the specified value. and returns null when there is no element ID</p>\r\n\r\n<p>2.method returns a collection of document with the specified as a node list element</p>\r\n	49	32	17	2017-05-10 14:58:50.061122	2017-05-10 14:58:50.061122	\N	\N	\N
543	<p>The three node elements are</p>\r\n\r\n<p>1. Attribute Node</p>\r\n\r\n<p>2.Text Node</p>\r\n\r\n<p>3. Element Node</p>\r\n	50	32	17	2017-05-10 14:58:50.064205	2017-05-10 14:58:50.064205	\N	\N	\N
544	<p>Text Node = &quot;www.google.com&quot; and &quot;_blank&quot;</p>\r\n\r\n<p>Attribute Node = href and target</p>\r\n\r\n<p>Element Node= &lt;a href=&quot;WWW.google.com&quot;target=&quot;-blank&quot;&gt;&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	51	32	17	2017-05-10 14:58:50.066515	2017-05-10 14:58:50.066515	\N	\N	\N
545	<p>&nbsp; &nbsp; &nbsp;</p>\r\n	52	32	17	2017-05-10 14:58:50.069177	2017-05-10 14:58:50.069177	\N	\N	\N
546	<p><strong>document.getElementById(): </strong></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;This use to get the vaue of an element by an &nbsp;id &nbsp;and it returns the value</p>\r\n\r\n<p><strong>document.getElementByTagName():</strong></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; This is use to get the value of that particular tagName</p>\r\n\r\n<p>&nbsp;</p>\r\n	49	23	17	2017-05-10 14:59:04.087014	2017-05-10 14:59:04.087014	\N	\N	\N
547	<p>1. Element Node &nbsp;(Here the html tag will be treated as the element node like &lt;ul&gt;)</p>\r\n\r\n<p>2. Attribute Node ( id of that particular &lt;ul id =&quot;abc&quot; &gt;&nbsp;will be conside as the attribute node )</p>\r\n\r\n<p>3. Text Node</p>\r\n	50	23	17	2017-05-10 14:59:04.089234	2017-05-10 14:59:04.089234	\N	\N	\N
548	<p>&lt;a href=&quot;www.google.com&quot; target=&quot;_blank&quot;&gt; Visit Google &lt;/a&gt;</p>\r\n\r\n<p>Element node = &lt;a&gt;</p>\r\n\r\n<p>Atrribute node&nbsp;=&nbsp;www.google.com</p>\r\n\r\n<p>Text &nbsp;Node =&nbsp;&nbsp;Visit Google &nbsp;</p>\r\n	51	23	17	2017-05-10 14:59:04.091065	2017-05-10 14:59:04.091065	\N	\N	\N
549	<p><strong>With Object prototype:</strong></p>\r\n\r\n<p>var &nbsp;Player = newObject()</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;this.name;<br />\r\n&nbsp;&nbsp; &nbsp;this.rank;<br />\r\n&nbsp;&nbsp; &nbsp;this.team;<br />\r\n<br />\r\n<strong>without prototype: </strong>&nbsp; &nbsp;<br />\r\nvar p1 = new Player();<br />\r\np1.name = &quot;virat&quot;;<br />\r\np1.rank = &quot;1&quot;;<br />\r\n&nbsp;</p>\r\n	52	23	17	2017-05-10 14:59:04.09273	2017-05-10 14:59:04.09273	\N	\N	\N
550	<p>document.getElementById is used to get the Id .</p>\r\n\r\n<p>Example- When we initialize the id in the &lt;ul&gt; like &lt;ul id = &quot;products&quot;&gt; &lt;/ul&gt;. In order to access the the products in the function, we call it in the form var product = document.getElementById(&#39;products&#39;);</p>\r\n\r\n<p>document.getElementByTagName is used to get that particular element.</p>\r\n\r\n<p>Example - When we initialize the id in &lt;ul id = &quot;tasks&quot; &gt; &lt;/ul&gt;. Then var myTasks = document.getElementById(&#39;tasks&#39;);</p>\r\n\r\n<p>var taskElement = document.getElementByTagName(&#39;&#39; myTasks &quot;);</p>\r\n\r\n<p>&nbsp;</p>\r\n	49	26	17	2017-05-10 15:00:16.275039	2017-05-10 15:00:16.275039	\N	\N	\N
551	<p>The 3 node elements are -&nbsp;</p>\r\n\r\n<ul>\r\n\t<li>element node</li>\r\n\t<li>text node</li>\r\n\t<li>attribute node</li>\r\n</ul>\r\n	50	26	17	2017-05-10 15:00:16.277339	2017-05-10 15:00:16.277339	\N	\N	\N
552	<p>elementNode = &lt;a&gt; &lt;/a&gt;</p>\r\n\r\n<p>attributeNode = href=&quot;www.google.com&quot; target = &quot;_blank&quot;</p>\r\n\r\n<p>textNode = &quot;Visit Google&quot;</p>\r\n	51	26	17	2017-05-10 15:00:16.279064	2017-05-10 15:00:16.279064	\N	\N	\N
553	<p>var text&nbsp;= new word(){</p>\r\n\r\n<p>};//creates a new object</p>\r\n\r\n<p>&nbsp;</p>\r\n	52	26	17	2017-05-10 15:00:16.280792	2017-05-10 15:00:16.280792	\N	\N	\N
554	<p><br />\r\nrequire &#39;faker&#39;<br />\r\nrequire &#39;./category&#39;<br />\r\nrequire &#39;./product&#39;</p>\r\n\r\n<p>categories = []<br />\r\nproducts = []</p>\r\n\r\n<p>i=1<br />\r\n10.times do<br />\r\n&nbsp;&nbsp; &nbsp;category = Category.new<br />\r\n&nbsp;&nbsp; &nbsp;category.id = i<br />\r\n&nbsp; &nbsp; category.name = Faker::Commerce.department(1)<br />\r\n&nbsp; &nbsp; categories.push(category)<br />\r\n&nbsp; &nbsp; i+=1<br />\r\nend</p>\r\n\r\n<p>i=1</p>\r\n\r\n<p>100.times do<br />\r\n&nbsp;&nbsp; &nbsp; product = Product.new<br />\r\n&nbsp;&nbsp; &nbsp; product.id = i<br />\r\n&nbsp;&nbsp; &nbsp; product.name = Faker::Commerce.product_name<br />\r\n&nbsp;&nbsp; &nbsp; product.price = Faker::Commerce.price(100..1000)<br />\r\n&nbsp;&nbsp; &nbsp; product.category_id = categories.sample.id<br />\r\n&nbsp;&nbsp; &nbsp; products.push(product)<br />\r\n&nbsp;&nbsp; &nbsp; i+=1<br />\r\nend</p>\r\n\r\n<p>#1) Find the count of products for each of the category<br />\r\nputs &quot;*&quot;*100<br />\r\nputs &quot;\\tCount of products for each of the category are as follows:&quot;<br />\r\nputs &quot;*&quot;*100</p>\r\n\r\n<p>categories.each do |category|&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;product_count = 0<br />\r\n&nbsp; &nbsp; products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if category.id == product.category_id<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; product_count +=1<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{category.name} : #{product_count}&quot;<br />\r\nend</p>\r\n\r\n<p>#2) Display the name of the category while listing the products<br />\r\nputs &quot;*&quot;*100<br />\r\nputs &quot;\\tDisplaying the name of the category while listing the products:&quot;<br />\r\nputs &quot;*&quot;*100</p>\r\n\r\n<p>categories.each do |category|&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;-&quot;*20<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{category.name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;-&quot;*20<br />\r\n&nbsp; &nbsp; products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if category.id == product.category_id<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts &quot;#{product.name}&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>#3) Find all the products whose price is less than 500<br />\r\nputs &quot;*&quot;*100<br />\r\nputs &quot;\\tAll the products whose price is less than 500:&quot;<br />\r\nputs &quot;*&quot;*100</p>\r\n\r\n<p>products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;if product.price &lt; 500<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;#{product.name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>#4) Find all the products whose price is in the range of 250 - 700<br />\r\nputs &quot;*&quot;*100<br />\r\nputs &quot;\\tAll the products whose price is in the range of 250 - 700:&quot;<br />\r\nputs &quot;*&quot;*100</p>\r\n\r\n<p>products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;if product.price &gt;= 250 &amp;&amp; product.price &lt;= 700<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;#{product.name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>#5) List all the products belonging to a certain category whose price is listed in the ascending order<br />\r\nputs &quot;*&quot;*120<br />\r\nputs &quot;\\tDisplaying all the products belonging to a certain category whose price is listed in the ascending order:&quot;<br />\r\nputs &quot;*&quot;*120</p>\r\n\r\n<p>categories.each do |category|&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;-&quot;*20<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{category.name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;-&quot;*20<br />\r\n&nbsp; &nbsp; products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if category.id == product.category_id<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts &quot;#{product.name} - #{product.price}&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>#6) Find all the products belonging to a certain category whose price is in the range of 100 - 200<br />\r\nputs &quot;*&quot;*120<br />\r\nputs &quot;\\tDisplaying all the products belonging to a certain category whose price is in the range of 100 - 200:&quot;<br />\r\nputs &quot;*&quot;*120</p>\r\n\r\n<p>categories.each do |category|&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;-&quot;*20<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{category.name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;-&quot;*20<br />\r\n&nbsp; &nbsp; products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if category.id == product.category_id<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; if product.price &gt;= 100 &amp;&amp; product.price &lt;= 200&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts &quot;#{product.name} - #{product.price}&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;end<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n	48	5	16	2017-05-10 16:38:50.546316	2017-05-10 16:38:50.546316	\N	\N	\N
555	categories = []\r\nproducts = []\r\nproduct_price = []\r\nproduct_count = []\r\nrange = 250..700\r\nrange1 = 100..200\r\n\r\ni = 1\r\n100.times do\r\n  category = Category.new\r\n  category.id = i\r\n  category.name = Faker::Commerce.department\r\n  categories.push(category)\r\n  i += 1\r\nend\r\n\r\n# Q1), Q2), Q5)\r\nsorted_products = products.sort_by { |p| p.price }\r\ncategories.each do |category|\r\n  category_products = sorted_products.select { |p| p.category_id == category.id }\r\n  puts "#{category.name} has #{category_products.size} product(s)"\r\n  category_products.each do |product|\r\n    puts "  #{product.name} costs INR #{product.price}"\r\n  end\r\n  \r\nend\r\n\r\n\r\n# Q6\r\nproducts.each do |product|\r\n  if range1.include?(product.price)\r\n    puts "#{product.name} -> INR #{product.price}"\r\n  end\r\nend\r\n\r\n\r\n# Q4\r\nproducts.each do |product|\r\n  if range.include?(product.price)\r\n    puts "#{product.name} -> INR #{product.price}"\r\n  end\r\nend\r\n\r\n\r\n# Q3\r\nproducts.each do |product|\r\n  if product.price < 500\r\n    puts "#{product.name} -> INR #{product.price}"\r\n    \r\n  end\r\nend\r\n\r\n\r\n\r\n\r\n\r\n	48	16	16	2017-05-10 18:20:36.892406	2017-05-10 18:20:36.892406	\N	\N	\N
556	<p>4)require &#39;Faker&#39;<br />\r\nrequire &#39;./category&#39;<br />\r\nrequire &#39;./product&#39;<br />\r\ncategories = []<br />\r\nproducts = []<br />\r\ni = 1<br />\r\n2.times do<br />\r\n&nbsp; category = Category.new<br />\r\n&nbsp; category.id = i<br />\r\n&nbsp; category.name = Faker::Commerce.department(1)<br />\r\n&nbsp; categories.push(category)<br />\r\n&nbsp; 2.times do<br />\r\n&nbsp; &nbsp; product = Product.new<br />\r\n&nbsp; &nbsp; product.id = 1<br />\r\n&nbsp; &nbsp; product.name = Faker::Commerce.product_name<br />\r\n&nbsp; &nbsp; product.price = Faker::Commerce.price(250..750)<br />\r\n&nbsp; &nbsp; product.category_id = categories.sample.id<br />\r\n&nbsp; &nbsp; products.push(product)<br />\r\n&nbsp; &nbsp; i += 1<br />\r\n&nbsp; end<br />\r\n&nbsp; i += 1<br />\r\nend<br />\r\nputs &quot;*&quot; * 50<br />\r\nputs &quot;\\t\\t Listing Products&quot;<br />\r\nputs &quot;*&quot; * 50<br />\r\nproducts.each do |product|<br />\r\n&nbsp; puts &quot;#{product.name} - INR #{product.price}&quot;<br />\r\nend</p>\r\n\r\n<p>3)require &#39;Faker&#39;<br />\r\nrequire &#39;./category&#39;<br />\r\nrequire &#39;./product&#39;<br />\r\ncategories = []<br />\r\nproducts = []<br />\r\ni = 1<br />\r\n2.times do<br />\r\n&nbsp; category = Category.new<br />\r\n&nbsp; category.id = i<br />\r\n&nbsp; category.name = Faker::Commerce.department(1)<br />\r\n&nbsp; categories.push(category)<br />\r\n&nbsp; 2.times do<br />\r\n&nbsp; &nbsp; product = Product.new<br />\r\n&nbsp; &nbsp; product.id = 1<br />\r\n&nbsp; &nbsp; product.name = Faker::Commerce.product_name<br />\r\n&nbsp; &nbsp; product.price = Faker::Commerce.price(1..499)<br />\r\n&nbsp; &nbsp; product.category_id = categories.sample.id<br />\r\n&nbsp; &nbsp; products.push(product)<br />\r\n&nbsp; &nbsp; i += 1<br />\r\n&nbsp; end<br />\r\n&nbsp; i += 1<br />\r\nend<br />\r\nputs &quot;*&quot; * 50<br />\r\nputs &quot;\\t\\t Listing Products&quot;<br />\r\nputs &quot;*&quot; * 50<br />\r\nproducts.each do |product|<br />\r\n&nbsp; puts &quot;#{product.name} - INR #{product.price}&quot;<br />\r\nend</p>\r\n\r\n<p>6)require &#39;Faker&#39;<br />\r\nrequire &#39;./category&#39;<br />\r\nrequire &#39;./product&#39;<br />\r\ncategories = []<br />\r\nproducts = []<br />\r\ni = 1<br />\r\n2.times do<br />\r\n&nbsp; category = Category.new<br />\r\n&nbsp; category.id = i<br />\r\n&nbsp; category.name = Faker::Commerce.department(1)<br />\r\n&nbsp; categories.push(category)<br />\r\n&nbsp; 2.times do<br />\r\n&nbsp; &nbsp; product = Product.new<br />\r\n&nbsp; &nbsp; product.id = 1<br />\r\n&nbsp; &nbsp; product.name = Faker::Commerce.product_name<br />\r\n&nbsp; &nbsp; product.price = Faker::Commerce.price(100..200)<br />\r\n&nbsp; &nbsp; product.category_id = categories.sample.id<br />\r\n&nbsp; &nbsp; products.push(product)<br />\r\n&nbsp; &nbsp; i += 1<br />\r\n&nbsp; end<br />\r\n&nbsp; i += 1<br />\r\nend<br />\r\nputs &quot;*&quot; * 50<br />\r\nputs &quot;\\t\\t Listing Products&quot;<br />\r\nputs &quot;*&quot; * 50<br />\r\nproducts.each do |product|<br />\r\n&nbsp; puts &quot;#{product.name} - INR #{product.price}&quot;<br />\r\nend</p>\r\n\r\n<p>2)require &#39;Faker&#39;<br />\r\nrequire &#39;./category&#39;<br />\r\nrequire &#39;./product&#39;<br />\r\ncategories = []<br />\r\nproducts = []<br />\r\ni = 1<br />\r\n2.times do<br />\r\n&nbsp; category = Category.new<br />\r\n&nbsp; category.id = i<br />\r\n&nbsp; category.name = Faker::Commerce.department(1)<br />\r\n&nbsp; categories.push(category)<br />\r\n&nbsp; puts category.name<br />\r\n&nbsp; 2.times do<br />\r\n&nbsp; &nbsp; product = Product.new<br />\r\n&nbsp; &nbsp; product.id = 1<br />\r\n&nbsp; &nbsp; product.name = Faker::Commerce.product_name<br />\r\n&nbsp; &nbsp; product.price = Faker::Commerce.price(100..200)<br />\r\n&nbsp; &nbsp; product.category_id = categories.sample.id<br />\r\n&nbsp; &nbsp; products.push(product)<br />\r\n&nbsp; &nbsp; i += 1<br />\r\n&nbsp; end<br />\r\n&nbsp; i += 1<br />\r\nend<br />\r\nputs &quot;*&quot; * 50<br />\r\nputs &quot;\\t\\t Listing Products&quot;<br />\r\nputs &quot;*&quot; * 50<br />\r\nproducts.each do |product|<br />\r\n&nbsp; puts &quot;#{product.name} - INR #{product.price}&quot;<br />\r\nend</p>\r\n	48	17	16	2017-05-10 18:27:04.356686	2017-05-10 18:27:04.356686	\N	\N	\N
557	<p><strong>1) Find the count of products for each of the category<br />\r\n2) Display the name of the category while listing the products</strong></p>\r\n\r\n<p>products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;if count_of_products.member?(product.category_id)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;count_of_products[product.category_id] += 1<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;count_of_products[product.category_id] = 1<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>#uniqe</p>\r\n\r\n<p>products.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{product.name} INR #{product.price}&quot;<br />\r\nend<br />\r\nproducts_count &nbsp;= products.count<br />\r\nputs products_count</p>\r\n\r\n<p>puts &quot;\\t\\t Category Product Count&quot;<br />\r\nputs &quot;*&quot; * 50</p>\r\n\r\n<p>categories.each do |category|<br />\r\n&nbsp;&nbsp; &nbsp;if count_of_products[category.id].nil?<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts category.name + &quot; category has 0 products&quot;<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts category.name + &quot; category has &quot; + count_of_products[category.id].to_s + &quot; products&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p><strong>3) Find all the products whose price is less than 500</strong></p>\r\n\r\n<p>uts &quot;\\n\\n&quot;<br />\r\nputs &quot;\\t\\t Products Price less than 500&quot;<br />\r\nputs &quot;*&quot; * 50<br />\r\nproducts.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;if product.price &lt; 500<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts product.name + &quot; is less than 500&quot;<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts product.name + &quot; is more than 500&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend<br />\r\n<strong>4) Find all the products whose price is in the range of 250 - 700</strong></p>\r\n\r\n<p>puts &quot;\\n\\n&quot;<br />\r\nputs &quot;\\t\\t Products Price between 250 and 700&quot;<br />\r\nputs &quot;*&quot; * 50<br />\r\nproducts.each do |product|<br />\r\n&nbsp;&nbsp; &nbsp;if product.price &gt;=250 and product.price&lt;=700<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts product.name + &quot; is between 250 and 700&quot;<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts product.name + &quot; is not between 250 and 700&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p><strong>6) Find all the products belonging to a certain category whose price is in the range of 100 - 200</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>puts &quot;\\n\\n&quot;<br />\r\nputs &quot;\\t\\t Products belonging to a category whose price is 100 to 200&quot;<br />\r\nputs &quot;*&quot; * 50</p>\r\n\r\n<p>categories.each do |category|<br />\r\n&nbsp;&nbsp; &nbsp;m = 0<br />\r\n&nbsp;&nbsp; &nbsp;10.times do<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if products[m].category_id == category.id<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if products[m].price &gt;= 100 and products[m].price &lt;= 200<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;Category &quot;+category.name+&quot; =&gt; &quot;+ products[m].name+&quot; between 100 and 200&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;m = m + 1<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend<br />\r\n<strong>5) List all the products belonging to a certain category whose price is listed in the ascending order</strong></p>\r\n\r\n<p>dint able to do it ,sir</p>\r\n	48	4	16	2017-05-10 18:27:35.525558	2017-05-10 18:27:35.525558	\N	\N	\N
558	<p>categories.each_with_index do |category,index|<br />\r\n&nbsp; puts &quot;#{index + 1}.#{category.name}&quot;<br />\r\n&nbsp; category_products = products.find_all{|product| product.category_id ==&nbsp; category.id}<br />\r\n&nbsp; puts&nbsp; &quot;count of Products&nbsp; #{category.name} (#{category_products.length})&quot;</p>\r\n\r\n<p>&nbsp; category_products.each_with_index do |product,index|<br />\r\n&nbsp;&nbsp; &nbsp; puts &quot; #{product.name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp; # puts &quot;#{index + 1}.#{category_names}&quot;<br />\r\n&nbsp;&nbsp; &nbsp; if product.price &lt; 500&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; puts &quot;#{product.name} - #{product.price}&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; end &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; if product.price&nbsp; &gt; 250 &amp;&amp;&nbsp; product.price &lt; 700<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;puts &quot;$$$$$$$$$$$$$$$$$$#{product.name} - #{product.price}&quot;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp; end&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n	48	20	16	2017-05-10 18:29:01.282493	2017-05-10 18:29:01.282493	\N	\N	\N
628	<p>controllers are plural&nbsp;</p>\r\n\r\n<p>model is singular&nbsp;</p>\r\n\r\n<p>every controller &nbsp;gets its own view file&nbsp;</p>\r\n\r\n<p>every model has its own data base&nbsp;</p>\r\n\r\n<p>data base are plural</p>\r\n\r\n<p>every tabel will &nbsp;have primary key as integer</p>\r\n\r\n<p>foregin keywill always be associacted model &nbsp;_id&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	63	4	21	2017-05-29 06:40:33.663623	2017-05-29 06:40:33.663623	\N	\N	\N
559	categories.each_with_index do |category,index|\r\n  puts "#{category.name}"\r\n  category_products = products.find_all{|product| product.category_id == category.id}\r\n  puts " count of products  #{category.name} (#{category_products.length})"    ### code for 1 st query\r\n  category_products.each_with_index do |product,index|\r\n    puts "#{category.name} - #{product.name} "           #####code for 2nd query\r\n    if product.price < 500                              ########## code for 3 rd\r\n     puts "product price less than 500 #{product.name} - #{product.price}"\r\n    if (250..700).include?product.price    ############# code for 4 th\r\n     puts "@@@@  #{product.name} - #{product.price}"\r\n        if product.price > 100 && product.price < 200    ######## code for 6 th\r\n      puts " $$$$$$ #{product.name} - #{product.price}"\r\n    end\r\n  end\r\n\r\n\r\n\r\ni didnt get 5 th query \r\nend\r\nend\r\nend\r\nend\r\n	48	10	16	2017-05-11 04:09:24.189503	2017-05-11 04:09:24.189503	\N	\N	\N
560	require 'date'\r\nclass Ticket\r\n  attr_reader :number, :date, :status\r\n  INVALID = %W(SELFIE BARNEY RACHEL MONICA ETIHAD AMAZON)\r\n\r\n  def initialize(bk_status, bk_date)\r\n    @number = booking_number\r\n    @date = bk_date.nil? ? travel_date : bk_date\r\n    @status = bk_status.nil? ? booking_status : bk_status\r\n  end\r\n\r\n  def number\r\n    @number\r\n  end\r\n\r\n  def date\r\n    @date\r\n  end\r\n\r\n  def status\r\n    @status\r\n  end\r\n\r\n  private\r\n\r\n  def booking_number\r\n    num = ""\r\n    begin\r\n      num = first_three_chars + last_three_chars\r\n    end while INVALID.include? num\r\n    return num\r\n  end\r\n\r\n  def travel_date\r\n    dates = ((Date.today - 365*10)..(Date.today)).to_a.map { |d| d.to_s }\r\n    dates.sample\r\n  end\r\n\r\n  def booking_status\r\n    %W(CONFIRMED CANCELLED).sample\r\n  end\r\n\r\n  def first_three_chars\r\n    begin\r\n      num = ('A'..'Z').to_a.sample(3).join('')\r\n    end while num === "EKA"\r\n    return num\r\n  end\r\n\r\n  def last_three_chars\r\n    num = ('A'..'Z').to_a + (0..9).map {|n| n.to_s }\r\n    return num.sample(3).join('')\r\n  end\r\nend\r\n	53	16	18	2017-05-17 17:02:35.678804	2017-05-17 17:02:35.678804	\N	\N	\N
561	require 'faker'\r\n\r\nclass AirlineTicket\r\n    @@count = 0\r\n\t@@tickets = []\r\n\tattr_accessor :booking_number, :passenger_name, :depart_on, :number_of_passengers\r\n\r\n    def initialize(data)\r\n    \t@booking_number = data["booking_number"]\r\n\t\t@passenger_name = data["passenger_name"]\r\n\t\t@depart_on = data["depart_on"]\r\n\t\t@@count +=1\r\n\t\t@@tickets.push(self)\r\n\tend\r\n\r\n    def self.count\r\n   \t  @@count\r\n    end\r\n\r\n    def self.all\r\n    \t@@tickets\r\n    end\r\n\r\n    def details\r\n    \t"#{self.booking_number} - #{self.passenger_name} - #{self.depart_on}"\r\n    end\r\nend\r\n\r\n\r\nputs "enter number of tickets to be booked:"\r\nnumber = gets.to_i\r\ni=1\r\nnumber.times do\r\n   puts "enter #{i}st person name:"\r\n   name = gets.chomp\r\n   data = {\r\n   \t       "booking_number"=>[*('A'..'Z')].sample(3).join+[*('A'..'Z'),*('0'..'9')].sample(3).join, \r\n           "passenger_name"=>name, \r\n           "depart_on"=>Faker::Date.between(Date.parse("2013-04-12"),Date.today)\r\n          } \r\n\r\n   ticket = AirlineTicket.new(data)\r\n   i +=1\r\n\r\nend\r\n\r\nputs "the number of tickets already booked are:"\r\nAirlineTicket.all.each do |ticket|\r\n\tputs ticket.details\r\nend\r\n\r\n#if \r\nputs "the number of tickets that can be issued are:"\r\n\r\nIm not keeping well so couldnt complete it. i'll add the remaining code to the comment section	53	5	18	2017-05-18 18:12:55.920117	2017-05-18 18:12:55.920117	\N	\N	\N
562	<p>class Ticket<br />\r\n&nbsp; attr_accessor :name, :ref_no, :travel_date, :start_date, :end_date</p>\r\n\r\n<p>&nbsp; @@count = 0<br />\r\n&nbsp; @@passengers = []</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @ref_no = data[&quot;ref_no&quot;]<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @start_date = data[&quot;start_date&quot;]<br />\r\n&nbsp; &nbsp; @end_date = data[&quot;end_date&quot;]<br />\r\n&nbsp; &nbsp; @travel_date = data[&quot;travel_date&quot;]<br />\r\n&nbsp; &nbsp; @@count += 1<br />\r\n&nbsp; &nbsp; @@passengers.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.count #passenger.count<br />\r\n&nbsp; &nbsp; @@count # @@passengers.length<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.all # passengers.all<br />\r\n&nbsp; &nbsp; @@passengers<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;#{self.name} ***#{self.ref_no}*** is travelling on #{self.travel_date}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./Airline_tkt&#39;<br />\r\nrequire &#39;date&#39;<br />\r\nrequire &#39;pry&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>puts &quot;Enter name&quot;<br />\r\nname = gets.chomp</p>\r\n\r\n<p>data = {<br />\r\n&nbsp; &quot;name&quot; =&gt; name,<br />\r\n&nbsp; &quot;start_date&quot; =&gt; Date.parse(&quot;2015-05-15&quot;), #start_date = Date.parse(&quot;2015-01-01&quot;)<br />\r\n&nbsp; &quot;end_date&quot; =&gt; Date.today,<br />\r\n&nbsp; &quot;travel_date&quot; =&gt; Faker::Date.between(Date.parse(&quot;2015-05-15&quot;), Date.today),<br />\r\n&nbsp; &quot;ref_no&quot; =&gt; (&#39;A&#39;..&#39;Z&#39;).to_a.shuffle.first(3).join(&quot;&quot;) + &quot; &quot; + ((&#39;A&#39;..&#39;Z&#39;).to_a + (0..9).to_a).shuffle.first(3).join(&quot;&quot;)<br />\r\n}<br />\r\nt1 = Ticket.new(data)<br />\r\n#puts t1.inspect<br />\r\nTicket.all.each do |ticket|<br />\r\n&nbsp; puts ticket.details<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n	53	8	18	2017-05-18 18:18:44.023443	2017-05-18 18:18:44.023443	\N	\N	\N
563	<p>class Ticket<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :name, :ticket_no,:journey_date, :return_date,:travelling_date,:status</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;@@count = 0<br />\r\n&nbsp;&nbsp; &nbsp;@@tickets = []</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def initialize(data)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@ticket_no = data[&quot;ticket_no&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@journey_date = data[&quot;journey_date&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@return_date = data[&quot;return_date&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@travelling_date = data[&quot;travelling_date&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@count +=1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@tickets.push(self)<br />\r\n&nbsp;&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; def self.count<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@count<br />\r\n&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; def self.all<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@tickets<br />\r\n&nbsp;&nbsp; end<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; def details<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;#{self.name} your ticket number is - #{self.ticket_no}- and your travelling_date is #{self.travelling_date}&quot;<br />\r\n&nbsp;&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;faker&#39;<br />\r\nrequire &#39;./ticket&#39;<br />\r\nrequire &#39;date&#39;</p>\r\n\r\n<p>puts &quot;Enter the name&quot;<br />\r\nname = gets.chomp</p>\r\n\r\n<p>data = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; name,<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;ticket_no&quot; =&gt; (&#39;A&#39;..&#39;Z&#39;).to_a.shuffle.first(3).join(&quot;&quot;) + &quot; &quot; + ((&#39;A&#39;..&#39;Z&#39;).to_a + (0..9).to_a).shuffle.first(3).join(&quot;&quot;),<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;journey_date&quot; =&gt; Date.parse(&quot;2017-5-1&quot;),<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;return_date&quot; =&gt; Date.today,<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;travelling_date&quot; =&gt; Faker::Date.between(Date.parse(&quot;2017-5-1&quot;),Date.today)<br />\r\n}</p>\r\n\r\n<p>&nbsp;ticket = Ticket.new(data)</p>\r\n\r\n<p>&nbsp;Ticket.all.each do |ticket|<br />\r\n&nbsp;&nbsp; puts ticket.details<br />\r\n&nbsp;end</p>\r\n\r\n<p>&nbsp;</p>\r\n	53	20	18	2017-05-18 18:22:52.110357	2017-05-18 18:22:52.110357	\N	\N	\N
564	<p>puts &quot;Enter the minimum length of the password&quot;<br />\r\nmin_length_pwd = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter the number of Special characters in the Password&quot;<br />\r\ncount_of_special_char = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter the count of NUMBERS in the Password&quot;<br />\r\ncount_of_Num = gets.to_i</p>\r\n\r\n<p>array_numbers = [0,1,2,3,4,5,6,7,8,9]<br />\r\narray_specialChar = [&quot;?&quot;,&quot;&lt;&quot;,&quot;&gt;&quot;,&quot;&#39;&quot;,&quot;,&quot;,&quot;?&quot;,&quot;[&quot;,&quot;]&quot;,&quot;}&quot;,&quot;{&quot;,&quot;=&quot;,&quot;-&quot;,&quot;)&quot;,&quot;(&quot;,&quot;*&quot;,&quot;&amp;&quot;,&quot;^&quot;,&quot;%&quot;,&quot;$&quot;,&quot;#&quot;,&quot;`&quot;,&quot;~&quot;,&quot;{&quot;,&quot;}&quot;]<br />\r\narray_letters = (&#39;A&#39;..&#39;Z&#39;).to_a + (&#39;a&#39;..&#39;z&#39;).to_a</p>\r\n\r\n<p>min_remCountofPwd = min_length_pwd - count_of_special_char - count_of_Num</p>\r\n\r\n<p>puts &quot;We will provide you 5 variations of Password&quot;<br />\r\ni=0<br />\r\nvariations =5</p>\r\n\r\n<p>while ( i &lt; variations )</p>\r\n\r\n<p>password_special = array_specialChar.sample(count_of_special_char).join(&quot;&quot;)<br />\r\npassword_numbers = array_numbers.sample(count_of_Num).join(&quot;&quot;)<br />\r\npassword_letters = array_letters.sample(min_remCountofPwd).join(&quot;&quot;)</p>\r\n\r\n<p>puts password_special + password_numbers + password_letters</p>\r\n\r\n<p>i += 1<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	54	19	19	2017-05-19 07:03:57.064907	2017-05-19 07:03:57.064907	\N	\N	\N
629	<p>Object Relational Mapping</p>\r\n\r\n<p>We do not need write &nbsp;SQL.&nbsp;</p>\r\n\r\n<p>Every table is a Class and every row in a table is Object.and every column in the table is an attribute of that class</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	62	19	21	2017-05-29 06:40:43.906396	2017-05-29 06:40:43.906396	\N	\N	\N
572	<p>puts &quot;Enter persistent Number&quot;<br />\r\n&nbsp;num = gets.to_i<br />\r\n&nbsp;#puts num.class #string<br />\r\n&nbsp;<br />\r\nwhile(1)&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;numbers = num.to_s.split(&#39;&#39;)</p>\r\n\r\n<p>&nbsp;numbers = numbers.map!{|n| n.to_i}<br />\r\n&nbsp;numbers = numbers.inject(:*)<br />\r\n&nbsp;num = numbers.to_s<br />\r\n&nbsp;if num.length &gt; 1</p>\r\n\r\n<p>&nbsp; next<br />\r\nelse&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp; puts num<br />\r\n&nbsp;break<br />\r\nend<br />\r\nend</p>\r\n	59	20	20	2017-05-26 16:38:39.978063	2017-05-26 16:38:39.978063	\N	\N	\N
828	<p>num = gets.to_i<br />\r\nnumbers= []<br />\r\nwhile 1 &lt;=num</p>\r\n\r\n<p><br />\r\nnumbers.push(num)<br />\r\nnum -=1<br />\r\nend</p>\r\n\r\n<p>final_numbers = numbers.reverse</p>\r\n\r\n<p>puts final_numbers.to_s</p>\r\n	102	39	27	2017-07-05 04:44:02.63357	2017-07-05 04:44:02.63357	\N	\N	\N
829	<p>puts &quot;Enter a number&quot;<br />\r\nnumber = gets.to_i<br />\r\nputs number*= -1</p>\r\n	90	40	27	2017-07-05 14:26:07.879872	2017-07-05 14:26:07.879872	\N	\N	\N
565	<p>puts &quot;Enter the size&quot;<br />\r\nsize = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter the number of special characters&quot;<br />\r\nspecial_char = gets.to_i<br />\r\nputs &quot;Enter how many numbers required&quot;<br />\r\n&nbsp;numbers = gets.to_i<br />\r\n&nbsp;<br />\r\nletters = size-special_char-numbers</p>\r\n\r\n<p>#special = [&quot;?&lt;&gt;&#39;,?[]}{=-)(*&amp;^%$#`~{}&quot;]</p>\r\n\r\n<p>password_special = [&quot;?&quot;,&quot;&lt;&gt;&quot;,&quot;,&quot;,&quot;?&quot;,&quot;[]&quot;,&quot;}&quot;,&quot;{&quot;,&quot;=&quot;,&quot;-&quot;,&quot;)&quot;,&quot;(&quot;,&quot;*&quot;,&quot;&amp;&quot;,&quot;^&quot;,&quot;%&quot;,&quot;$&quot;,&quot;#&quot;,&quot;~&quot;,&quot;{&quot;,&quot;}&quot;]<br />\r\n#print password_special</p>\r\n\r\n<p>password_letters = (&#39;A&#39;..&#39;Z&#39;).to_a&nbsp; + (&#39;a&#39;..&#39;z&#39;).to_a<br />\r\n&nbsp;#print password_letters</p>\r\n\r\n<p>password_numbers = (&#39;0&#39;..&#39;9&#39;).to_a<br />\r\n#print password_numbers<br />\r\ni=0<br />\r\nwhile i &lt; 5</p>\r\n\r\n<p>password_combine = password_special.sample(special_char) + password_numbers.sample(numbers) + password_letters.sample(letters)</p>\r\n\r\n<p>puts password_combine.to_a.shuffle.join(&quot;&quot;)<br />\r\ni +=1<br />\r\n&nbsp;end</p>\r\n	54	20	19	2017-05-19 08:21:59.017209	2017-05-19 08:21:59.017209	\N	\N	\N
566	<p>puts &quot;enter how many numbers you want in password&quot;<br />\r\nnumber = gets.to_i</p>\r\n\r\n<p>puts &quot;enter how many speacial char you want in ur password&quot;<br />\r\nspeacial = gets.to_i</p>\r\n\r\n<p>puts &quot;enter how many leters you want in ur password&quot;<br />\r\nletter = gets.to_i<br />\r\n# s = [ ]<br />\r\nspeacial_char = [&quot;,&quot; ,&quot;.&quot; , &quot;#&quot; , &quot;/&quot; , &quot;}&quot; , &quot;{&quot; , &quot;:&quot; , &quot;;&quot; , &quot;(&quot; , &quot;)&quot;]<br />\r\nnumbers = [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;0&quot;]<br />\r\nchar = (&quot;a&quot;..&quot;z&quot;).to_a</p>\r\n\r\n<p>s = speacial_char.sample(speacial) + numbers.sample(number) + char.sample(letter)</p>\r\n\r\n<p>puts s.to_a.shuffle.join(&quot;&quot;)<br />\r\nputs s.count</p>\r\n	54	4	19	2017-05-19 10:02:29.927014	2017-05-19 10:02:29.927014	\N	\N	\N
567	<p><strong>PASSWORD FILE</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n<strong>class Password<br />\r\n&nbsp; SPECIAL_CHARS = [&#39;\\\\&#39;, &#39;[&#39;, &#39;]&#39;, &#39;^&#39;, &#39;_&#39;, &#39;`&#39;].freeze<br />\r\n&nbsp; def initialize(min_length, no_of_spec_chars, no_of_numbers)<br />\r\n&nbsp; &nbsp; @min_length = min_length<br />\r\n&nbsp; &nbsp; @no_of_spec_chars = no_of_spec_chars<br />\r\n&nbsp; &nbsp; @no_of_numbers = no_of_numbers<br />\r\n&nbsp; end</strong></p>\r\n\r\n<p><strong>&nbsp; def generate<br />\r\n&nbsp; &nbsp; password = generate_special_characters + generate_numbers<br />\r\n&nbsp; &nbsp; password = password + generate_characters(@min_length - password.length) if password.length &lt; @min_length<br />\r\n&nbsp; &nbsp; password.split(&#39;&#39;).shuffle.join(&#39;&#39;)<br />\r\n&nbsp; end</strong></p>\r\n\r\n<p><strong>&nbsp; private</strong></p>\r\n\r\n<p><strong>&nbsp; def generate_characters(count)<br />\r\n&nbsp; &nbsp; word = &#39;&#39;<br />\r\n&nbsp; &nbsp; count.times do<br />\r\n&nbsp; &nbsp; &nbsp; word = word + ((&#39;A&#39;..&#39;z&#39;).to_a - SPECIAL_CHARS).sample<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; word<br />\r\n&nbsp; end</strong></p>\r\n\r\n<p><strong>&nbsp; def generate_special_characters<br />\r\n&nbsp; &nbsp; word = &#39;&#39;<br />\r\n&nbsp; &nbsp; @no_of_spec_chars.times do<br />\r\n&nbsp; &nbsp; &nbsp; word = word + ((&#39;!&#39;..&#39;?&#39;).to_a - (0..9).to_a + SPECIAL_CHARS - [&#39;\\\\&#39;]).sample<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; word<br />\r\n&nbsp; end</strong></p>\r\n\r\n<p><strong>&nbsp; def generate_numbers<br />\r\n&nbsp; &nbsp; number = &#39;&#39;<br />\r\n&nbsp; &nbsp; @no_of_numbers.times do<br />\r\n&nbsp; &nbsp; &nbsp; number = number + (0..9).to_a.sample.to_s<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; number<br />\r\n&nbsp; end</strong></p>\r\n\r\n<p><strong>end</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>INPUT FILE</strong></p>\r\n\r\n<p><strong>require &#39;./password&#39;</strong></p>\r\n\r\n<p><strong>puts &quot;enter the minimum length for the password: &quot;<br />\r\nmin_length = gets.to_i</strong></p>\r\n\r\n<p><strong>puts &quot;enter the special characters: &quot;<br />\r\nno_of_spec_chars = gets.to_i</strong></p>\r\n\r\n<p><strong>while no_of_spec_chars &gt; min_length do<br />\r\n&nbsp; puts &quot;Number cannot be greater than the Minimum Length (#{min_length}). Enter the special characters again: &quot;<br />\r\n&nbsp; no_of_spec_chars = gets.to_i<br />\r\nend</strong></p>\r\n\r\n<p><strong>puts &quot;enter the total number of integers for the password&quot;<br />\r\nno_of_numbers = gets.to_i</strong></p>\r\n\r\n<p><strong>while no_of_numbers &gt; min_length do<br />\r\n&nbsp; puts &quot;Number cannot be greater than the Minimum Length (#{min_length}).<br />\r\n&nbsp; Enter the total number of integers for the password again: &quot;<br />\r\n&nbsp; no_of_numbers = gets.to_i<br />\r\nend</strong></p>\r\n\r\n<p><strong>password = Password.new(min_length.to_i, no_of_spec_chars.to_i, no_of_numbers.to_i).generate</strong></p>\r\n\r\n<p><strong>puts &quot;Here is your new password: #{password.split(&#39;&#39;).shuffle.join(&#39;&#39;)}&quot;</strong><br />\r\n&nbsp;</p>\r\n	54	16	19	2017-05-19 11:00:07.446559	2017-05-19 11:00:07.446559	\N	\N	\N
568	<p>class Person<br />\r\n&nbsp; attr_accessor :first_name,:last_name</p>\r\n\r\n<p>&nbsp;&nbsp; #@@count = 0<br />\r\n&nbsp;&nbsp; @@persons = []<br />\r\n&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;@first_name = data[&quot;first_name&quot;]<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;@last_name =data[&quot;last_name&quot;]<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;@@persons.push(self)<br />\r\n&nbsp; end<br />\r\n# # def self.count<br />\r\n# # &nbsp;&nbsp; &nbsp; @@count<br />\r\n# end<br />\r\ndef self.all<br />\r\n&nbsp;@@persons<br />\r\nend<br />\r\ndef details<br />\r\n&nbsp;&quot;Hello,#{self.first_name} #{self.last_name}&quot;<br />\r\nend<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./person&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>data = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;first_name&quot; =&gt; Faker::Name.first_name,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;last_name&quot; =&gt;&nbsp; Faker::Name.last_name<br />\r\n}</p>\r\n\r\n<p>p1 = Person.new(data)<br />\r\n#puts p1.inspect</p>\r\n\r\n<p>Person.all.each do |name|<br />\r\n&nbsp;&nbsp; &nbsp;puts name.details<br />\r\nend</p>\r\n	55	20	20	2017-05-26 16:38:39.950747	2017-05-26 16:38:39.950747	\N	\N	\N
569	<p>class Cricket<br />\r\n&nbsp; attr_accessor :name, :age,:no_of_test_match,:run_score<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; @@crickets = []<br />\r\n&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;@age = data[&quot;age&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @no_of_test_match = data[&quot;no_of_test_match&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @run_score = data[&quot;run_score&quot;]<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;@@crickets.push(self)<br />\r\n&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; def self.all<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@crickets<br />\r\n&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; def self.average<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return&nbsp; @@crickets.sort!{|a,b| a.run_score &lt;=&gt; b.run_score}<br />\r\n&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; def details<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;Name is: #{self.name} and age is : #{self.age} number of test match is: #{self.no_of_test_match} score is :#{self.run_score}&quot;<br />\r\n&nbsp;&nbsp; end &nbsp;&nbsp; &nbsp;<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./cricket&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>10.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;age&quot; =&gt; Faker::Number.between(20, 50),<br />\r\n&nbsp;&nbsp; &nbsp;&quot;no_of_test_match&quot; =&gt; Faker::Number.between(1, 5),<br />\r\n&nbsp;&nbsp; &nbsp;&quot;run_score&quot; =&gt; Faker::Number.between(1, 100)<br />\r\n}<br />\r\n&nbsp;c1 = Cricket.new(data)<br />\r\n&nbsp;#puts c1.details<br />\r\nend</p>\r\n\r\n<p>puts &quot;***********Listing details of cricketers************&quot;<br />\r\nCricket.all.each do |cricket|<br />\r\n&nbsp;&nbsp; &nbsp;puts cricket.details</p>\r\n\r\n<p>end<br />\r\nputs &quot;*********Sorting by average runs***********&quot;<br />\r\n&nbsp;&nbsp; Cricket.average<br />\r\n&nbsp;Cricket.all.each do |cricket|<br />\r\n&nbsp;&nbsp; &nbsp;puts cricket.details<br />\r\n&nbsp;end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	56	20	20	2017-05-26 16:38:39.970669	2017-05-26 16:38:39.970669	\N	\N	\N
570	<p>class Bank<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :acc_no,:name,:balance<br />\r\n&nbsp;&nbsp;&nbsp; @@count = 0<br />\r\n&nbsp;&nbsp;&nbsp; @@banks = []<br />\r\n&nbsp;&nbsp; &nbsp;def initialize(data)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@acc_no = data[&quot;acc_no&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@balance = data[&quot;balance&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@banks.push(self)<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def self.all<br />\r\n&nbsp;&nbsp;&nbsp; @@banks<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;def self.low_balance(balance)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;low_balance_user = @@banks.find_all{|bank| bank.balance &lt; balance}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;#puts low_balance_user.inspect<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp; def self.withdrawal(acc_number)<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;account_no = @@banks.find{|bank| bank.acc_no == acc_number}<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;puts account_no.inspect<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;if account_no.nil?<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return nil<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;return account_no.balance&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp; end<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def details<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;Account number is #{self.acc_no},Name is #{self.name}, balance is#{self.balance}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./bank&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>def low_balance_user(balance)<br />\r\n&nbsp; Bank.low_balance(balance).each do |low|<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; puts &quot;Customers low balance are #{low.name},#{low.acc_no},#{low.balance}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>10.times do<br />\r\n&nbsp;&nbsp; &nbsp;data = {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;acc_no&quot; =&gt; Faker::Bank.swift_bic,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;balance&quot; =&gt; Faker::Number.between(1, 1000)<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;bank = Bank.new(data)<br />\r\n&nbsp;&nbsp; &nbsp;puts bank.details<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter the balance&quot;<br />\r\nbalance = gets.to_i</p>\r\n\r\n<p>low_balance_user(balance)</p>\r\n\r\n<p>puts &quot;Enter your account number&quot;<br />\r\n&nbsp;acc_number = gets.chomp</p>\r\n\r\n<p>&nbsp;validated_customer_balance = Bank.withdrawal(acc_number)<br />\r\n&nbsp;<br />\r\n&nbsp;if validated_customer_balance == nil<br />\r\n&nbsp;&nbsp; puts &quot;User does not found&quot;<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;This account number :#{acc_number} , balance is #{validated_customer_balance}&quot;</p>\r\n\r\n<p><br />\r\nputs &quot;Enter 0 for withdrawal ,1 for deposit&quot;<br />\r\n&nbsp;option = gets.to_i<br />\r\nif(option == 0)<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Enter amount to be withdrawal&quot;<br />\r\n&nbsp;&nbsp; &nbsp;amount = gets.to_i</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;if validated_customer_balance - amount &lt; 0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;Sorry there is no sufficient amount&quot;<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;remaining_balance = validated_customer_balance - amount<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;After withdrawal your balance is #{remaining_balance}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nelsif (option == 1)<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Enter amount to be deposit&quot;<br />\r\n&nbsp;&nbsp; &nbsp;deposit_amount = gets.to_i</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;amount_deposited = validated_customer_balance + deposit_amount<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;After depositing amount, your total balance is #{amount_deposited}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\nend<br />\r\n&nbsp;<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n	57	20	20	2017-05-26 16:38:39.973225	2017-05-26 16:38:39.973225	\N	\N	\N
571	<p>puts &quot;Enter the size&quot;<br />\r\nsize = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter the number of special characters&quot;<br />\r\nspecial_char = gets.to_i<br />\r\nputs &quot;Enter how many numbers required&quot;<br />\r\n&nbsp;numbers = gets.to_i<br />\r\n&nbsp;<br />\r\nletters = size-special_char-numbers</p>\r\n\r\n<p>#special = [&quot;?&lt;&gt;&#39;,?[]}{=-)(*&amp;^%$#`~{}&quot;]</p>\r\n\r\n<p>password_special = [&quot;?&quot;,&quot;&lt;&gt;&quot;,&quot;,&quot;,&quot;?&quot;,&quot;[]&quot;,&quot;}&quot;,&quot;{&quot;,&quot;=&quot;,&quot;-&quot;,&quot;)&quot;,&quot;(&quot;,&quot;*&quot;,&quot;&amp;&quot;,&quot;^&quot;,&quot;%&quot;,&quot;$&quot;,&quot;#&quot;,&quot;~&quot;,&quot;{&quot;,&quot;}&quot;]<br />\r\n#print password_special</p>\r\n\r\n<p>password_numbers = (&#39;0&#39;..&#39;9&#39;).to_a<br />\r\n#print password_numbers</p>\r\n\r\n<p>password_letters = (&#39;A&#39;..&#39;Z&#39;).to_a&nbsp; + (&#39;a&#39;..&#39;z&#39;).to_a<br />\r\n&nbsp;#print password_letters</p>\r\n\r\n<p>i=0<br />\r\nwhile i &lt; size<br />\r\n&nbsp;password_combine = password_special.sample(special_char) + password_numbers.sample(numbers) + password_letters.sample(letters)<br />\r\n&nbsp;puts password_combine.to_a.shuffle.join(&quot;&quot;)<br />\r\n&nbsp;i +=1<br />\r\n&nbsp;end</p>\r\n\r\n<p>&nbsp;</p>\r\n	54	20	20	2017-05-26 16:38:39.975864	2017-05-26 16:38:39.975864	\N	\N	\N
802	<p>numbers = [2,5,4,5,2,1,3,5]<br />\r\nnumber_hash={}<br />\r\nnumbers.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;number_hash[num] = numbers.count(num)<br />\r\nend<br />\r\n&nbsp;<br />\r\nresult = []<br />\r\nresult = number_hash.values<br />\r\n#puts result.class</p>\r\n\r\n<p>odd_value = result.find_all{|n| n.odd?}<br />\r\nputs odd_value.sort.reverse[0]</p>\r\n	76	20	24	2017-06-15 10:17:08.069821	2017-06-15 10:17:08.069821	\N	\N	\N
573	<p>class Student<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :roll_no,:name,:dept,:course,:yoj<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; @@count = 0<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; @@students = []<br />\r\n&nbsp;&nbsp; &nbsp;def initialize(data)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@roll_no = @@count + 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@dept = data[&quot;dept&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@course = data[&quot;course&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@yoj = data[&quot;yoj&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@count +=1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@students.push(self)<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def self.all<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@students<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;def self.find_all(yoj)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return @@students.find{|student| student.yoj == yoj}&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; def self.find(roll_no)<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; return @@students.find{|student| student.roll_no == roll_no}<br />\r\n&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def details<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;#{self.roll_no} , #{self.name}, #{self.dept} , #{self.course} , #{self.yoj}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;def display<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;#{self.name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./student&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>5.times do<br />\r\n&nbsp;&nbsp; &nbsp;data = {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;roll_no&quot; =&gt; Faker::Number.between(1, 10),<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;dept&quot; =&gt; Faker::Job.field,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;course&quot; =&gt; Faker::Educator.course,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;yoj&quot; =&gt; Faker::Date.between(Date.parse(&quot;2015-05-15&quot;), Date.today)<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;s = Student.new(data)<br />\r\nend</p>\r\n\r\n<p># students = Student.all<br />\r\nputs &quot;*****************List of students ******************&quot;<br />\r\nStudent.all.each do|stud|<br />\r\n&nbsp;&nbsp; &nbsp;students_roll_no = stud.roll_no<br />\r\n&nbsp;&nbsp; &nbsp;students_name = stud.name &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;students_yoj =&nbsp; stud.yoj<br />\r\n&nbsp;&nbsp; &nbsp;students_dept = stud.dept<br />\r\n&nbsp;&nbsp; &nbsp;students_course = stud.course<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Roll_no : #{students_roll_no} \\n Name : #{students_name}\\n joined on: #{students_yoj}\\n Department : #{students_dept}\\n Course : #{students_course}&quot;<br />\r\nend<br />\r\nputs &quot;*************year_of_joining**************&quot;<br />\r\nputs &quot;Enter date&quot;<br />\r\n&nbsp;yoj = Date.parse(gets)<br />\r\n&nbsp;#puts yoj.class</p>\r\n\r\n<p>&nbsp;student_yoj = Student.find_all(yoj)<br />\r\n&nbsp;if student_yoj.nil?<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;puts &quot;Record not found&quot;<br />\r\n&nbsp;else<br />\r\nputs student_yoj.display<br />\r\nend<br />\r\n&nbsp;<br />\r\nputs &quot;***********Roll_NO***********************&quot;<br />\r\nputs &quot;Enter Roll_no&quot;<br />\r\n&nbsp;roll_no = gets.to_i</p>\r\n\r\n<p>&nbsp;student = Student.find(roll_no) #calling class method i,e classname.methodname<br />\r\n&nbsp;if student.nil?<br />\r\n&nbsp;puts &quot;students not found&quot;<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;puts student.details<br />\r\nend</p>\r\n	58	20	20	2017-05-26 16:38:39.981077	2017-05-26 16:38:39.981077	\N	\N	\N
574	<p>str = &quot;ZNGA 1300 266 B,CLH.15NYM 50.5 56.1 B,OWW 10 10.0 B,OGG 10 10.0 B&quot;</p>\r\n\r\n<p>arr1 = str.split(&quot;,&quot;)</p>\r\n\r\n<p>arr2 = []</p>\r\n\r\n<p>i=0</p>\r\n\r\n<p>sum_buy=0</p>\r\n\r\n<p>sum_sell=0</p>\r\n\r\n<p>flag_validated=false</p>\r\n\r\n<p>count_badly_formed=0</p>\r\n\r\n<p>badly_formed_array = []</p>\r\n\r\n<p>while ( i &lt; arr1.length )</p>\r\n\r\n<p>&nbsp; arr2 = arr1[i].split(&quot; &quot;) #ZNGA 1300 2.66 B</p>\r\n\r\n<p>&nbsp; #Apply Validations . If found true then call the below while loop else go to outer loop and re-iterate</p>\r\n\r\n<p>&nbsp; arr_number &nbsp;= arr2[1].split(&quot;.&quot;)</p>\r\n\r\n<p>&nbsp; puts arr_number</p>\r\n\r\n<p>arr_decimal = arr2[2].split(&quot;.&quot;)</p>\r\n\r\n<p>puts arr_decimal</p>\r\n\r\n<p>if ( arr_number.length == 1)</p>\r\n\r\n<p>if (arr_decimal.length == 2 )</p>\r\n\r\n<p>if (arr2[3] == &quot;B&quot; || arr2[3] == &quot;S&quot; )</p>\r\n\r\n<p>flag_validated=true</p>\r\n\r\n<p>end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>puts flag_validated</p>\r\n\r\n<p>if (flag_validated == true )</p>\r\n\r\n<p>j=0</p>\r\n\r\n<p>while ( j &lt; arr2.length )</p>\r\n\r\n<p>temp = arr2[1].to_f * arr2[2].to_f</p>\r\n\r\n<p>if (arr2[3] == &quot;B&quot;)</p>\r\n\r\n<p>sum_buy += &nbsp;temp</p>\r\n\r\n<p>elsif (arr2[3] == &quot;S&quot;)</p>\r\n\r\n<p>sum_sell += temp</p>\r\n\r\n<p>end</p>\r\n\r\n<p>j += 4</p>\r\n\r\n<p>end</p>\r\n\r\n<p>else</p>\r\n\r\n<p>puts &quot;This is a badly formed string : #{arr2}&quot;</p>\r\n\r\n<p>count_badly_formed += 1</p>\r\n\r\n<p>badly_formed_array.push(arr2)</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;i +=1</p>\r\n\r\n<p>&nbsp;end</p>\r\n\r\n<p>puts &quot;Your Input is : #{str}&quot;</p>\r\n\r\n<p>puts &quot;Output is &quot; + &quot; Buy : #{sum_buy.round} Sell : #{sum_sell.round}; Badly formed #{count_badly_formed} : #{badly_formed_array.flatten}&quot;</p>\r\n	60	20	20	2017-05-26 16:38:39.983561	2017-05-26 16:38:39.983561	\N	\N	\N
575	<p>class Person<br />\r\n&nbsp; attr_accessor :first_name, :last_name</p>\r\n\r\n<p>&nbsp; @@person = []<br />\r\n&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @first_name = data[&quot;first_name&quot;]<br />\r\n&nbsp; &nbsp; @last_name = data[&quot;last_name&quot;]<br />\r\n&nbsp; &nbsp; @@person.push(self)<br />\r\n&nbsp; end<br />\r\n&nbsp; def self.all<br />\r\n&nbsp; &nbsp; @@person<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; puts &quot;Welcome, #{self.first_name} #{self.last_name}.&quot;</p>\r\n\r\n<p>&nbsp; end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./DCT07ac&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>data = {<br />\r\n&nbsp; &quot;first_name&quot; =&gt; Faker::Name.first_name,<br />\r\n&nbsp; &quot;last_name&quot; =&gt; Faker::Name.last_name<br />\r\n}</p>\r\n\r\n<p>p1 = Person.new(data)<br />\r\nputs p1.details</p>\r\n	55	8	20	2017-05-26 16:57:26.211995	2017-05-26 16:57:26.211995	\N	\N	\N
576	<p>class Player<br />\r\n&nbsp; attr_accessor :name, :age, :num_test_matches, :avg_runs<br />\r\n&nbsp; @@player = []<br />\r\n&nbsp; @@player2 = {}</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @age = data[&quot;age&quot;]<br />\r\n&nbsp; &nbsp; @num_test_matches = data[&quot;num_test_matches&quot;]<br />\r\n&nbsp; &nbsp; @avg_runs = data[&quot;avg_runs&quot;]<br />\r\n&nbsp; &nbsp; @@player.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; puts &quot;#{self.name} has scored an average runs of #{avg_runs}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.average_runs<br />\r\n&nbsp; &nbsp; @@player.each do |player|<br />\r\n&nbsp; &nbsp; &nbsp; @@player2[player.name] = player.avg_runs<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; players2 = @@player2.values<br />\r\n&nbsp; &nbsp; players2_sorted = players2.sort</p>\r\n\r\n<p>&nbsp; &nbsp; i =0<br />\r\n&nbsp; &nbsp; while ( i &lt; players2_sorted.length)<br />\r\n&nbsp; &nbsp; &nbsp; puts @@player2.key(players2_sorted[i]) =&gt; players2_sorted[i]<br />\r\n&nbsp; &nbsp; &nbsp; i += 1<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./player&#39;<br />\r\nrequire &#39;Faker&#39;</p>\r\n\r\n<p>3.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;age&quot; =&gt; Faker::Number.between(18, 28),<br />\r\n&nbsp; &nbsp; &quot;num_test_matches&quot; =&gt; &nbsp;Faker::Number.between(1, 5),<br />\r\n&nbsp; &nbsp; &quot;avg_runs&quot; =&gt; Faker::Number.between(10, 50)<br />\r\n&nbsp; }</p>\r\n\r\n<p>&nbsp; p1 = Player.new(data)<br />\r\n&nbsp; puts p1.details</p>\r\n\r\n<p>end</p>\r\n\r\n<p>Player.average_runs</p>\r\n	56	8	20	2017-05-26 16:57:26.214662	2017-05-26 16:57:26.214662	\N	\N	\N
577	<p>class Customer<br />\r\n&nbsp; attr_accessor :ac_no, :name, :balance</p>\r\n\r\n<p>&nbsp; @@customer = []</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @ac_no = data[&quot;ac_no&quot;]<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @balance = data[&quot;balance&quot;]<br />\r\n&nbsp; &nbsp; @@customer.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.low_balance(low_bal_var)<br />\r\n&nbsp; &nbsp; low_balance_customer = @@customer.find_all {|customer| customer.balance &lt; low_bal_var}<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.validate_accnum(acc_num)</p>\r\n\r\n<p>&nbsp; &nbsp; var_cust_num = @@customer.find {|customer| customer.ac_no == acc_num }</p>\r\n\r\n<p>&nbsp; &nbsp; if var_cust_num.nil?<br />\r\n&nbsp; &nbsp; &nbsp; return nil<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; return var_cust_num.balance<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;***#{self.ac_no}*** belongs to #{self.name} and has a balance amount of INR: #{self.balance} &quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./customer&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>def low_balance_customers(low_bal_var)</p>\r\n\r\n<p>&nbsp; Customer.low_balance(low_bal_var).each do |low_balance|<br />\r\n&nbsp; &nbsp; puts &quot;Customers with a low balance are: #{low_balance.name} *** A/c no - #{low_balance.ac_no} *** #{low_balance.balance}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>10.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;ac_no&quot; =&gt; Faker::Bank.swift_bic,<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;balance&quot; =&gt; Faker::Number.between(1, 1000)<br />\r\n&nbsp; }<br />\r\n&nbsp; c1 = Customer.new(data)<br />\r\n&nbsp; puts c1.details<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter the balance below which you need the Customers list&quot;<br />\r\nlow_bal_var = gets.to_i</p>\r\n\r\n<p>low_balance_customers(low_bal_var)</p>\r\n\r\n<p>puts &quot;Enter your Customer number&quot;<br />\r\nacc_num = gets.chomp</p>\r\n\r\n<p>validated_customer_with_ac_balance = Customer.validate_accnum(acc_num)</p>\r\n\r\n<p>if validated_customer_with_ac_balance == nil</p>\r\n\r\n<p>&nbsp; puts &quot;Sorry user does not exist&quot;</p>\r\n\r\n<p>else<br />\r\n&nbsp; puts &quot;#{acc_num} your current balance is : &nbsp;#{validated_customer_with_ac_balance}&quot;</p>\r\n\r\n<p>&nbsp; puts &quot; 0 for withdrawl and 1 for Deposit&quot;<br />\r\n&nbsp; option = gets.to_i</p>\r\n\r\n<p>&nbsp; if ( option == 0)</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter withdrawl amount&quot;<br />\r\n&nbsp; &nbsp; withdraw_amnt = gets.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; if (validated_customer_with_ac_balance - withdraw_amnt &lt; 0)<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;The balance is insufficient for the specified withdrawal&quot;<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; updated_balance = validated_customer_with_ac_balance - withdraw_amnt<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot; After withdrawal, your new balance is #{updated_balance}&quot;<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; elsif (option == 1)</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter Deposit amount&quot;<br />\r\n&nbsp; &nbsp; deposit_amnt = gets.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; updated_balance = validated_customer_with_ac_balance + deposit_amnt</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot; After Deposit, your new balance is #{updated_balance}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n	57	8	20	2017-05-26 16:57:26.217156	2017-05-26 16:57:26.217156	\N	\N	\N
678	<p>if we having one particular category and many products under that category then we will use has_many</p>\r\n\r\n<p>if we having so many products that are related to particular category then we will use belongs_to</p>\r\n\r\n<p>has_many is a one to many association i.e for a category so many products will be thier</p>\r\n\r\n<p>eg has_many :products</p>\r\n\r\n<p>in has_many products is the plural</p>\r\n\r\n<p>belongs_to is a many to one association i.e all products belongs to one particular category</p>\r\n\r\n<p>eg belongs_to :category</p>\r\n\r\n<p>in belongs_to category is the singular</p>\r\n	71	10	23	2017-06-05 07:36:41.384835	2017-06-05 07:36:41.384835	\N	\N	\N
803	<p>puts &quot;enter a string&quot;<br />\r\n&nbsp;string = gets.chomp<br />\r\n&nbsp;<br />\r\n&nbsp;def string_capitalize(string)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;array = []<br />\r\n&nbsp;&nbsp; &nbsp;words = string.split(&quot; &quot;)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;words.each do |word|<br />\r\n&nbsp;&nbsp; &nbsp;array &lt;&lt; word.capitalize<br />\r\nend<br />\r\n&nbsp;&nbsp; &nbsp;return array<br />\r\nend<br />\r\nresult = string_capitalize(string)<br />\r\nputs result.join(&quot;&quot;)</p>\r\n	77	20	24	2017-06-15 10:17:08.078719	2017-06-15 10:17:08.078719	\N	\N	\N
578	<p>puts &quot;Enter minimum length of the password&quot;<br />\r\nmin_length = gets.to_i<br />\r\nputs &quot;Specify number of special characters&quot;<br />\r\nspl_char = gets.to_i<br />\r\nputs &quot;Specify number of numbers&quot;<br />\r\nnumber_num = gets.to_i</p>\r\n\r\n<p>special_char = [&quot;!&quot;, &quot;@&quot;, &quot;#&quot;, &quot;$&quot;, &quot;%&quot;, &quot;^&quot;, &quot;&amp;&quot;, &quot;*&quot;, &quot;(&quot;, &quot;)&quot;, &quot;_&quot;, &quot;+&quot;, &quot;{&quot;, &quot;}&quot;, &quot;|&quot;, &quot;:&quot;, &quot;&gt;&quot;, &quot;?&quot;, &quot;&lt;&quot;, &quot;[&quot;, &quot;]&quot;, &quot;&#39;&quot;, &quot;;&quot;, &quot;,&quot;, &quot;.&quot;, &quot;`&quot;, &quot;~&quot;]<br />\r\nalphabets = (&#39;a&#39;..&#39;z&#39;).to_a + (&#39;A&#39;..&#39;Z&#39;).to_a<br />\r\nnumbers = (0..9).to_a</p>\r\n\r\n<p>password = (special_char.sample(spl_char)).join(&quot;&quot;)+(alphabets.sample(6).join(&quot;&quot;))+(numbers.sample(1).join(&quot;&quot;))</p>\r\n\r\n<p>puts password</p>\r\n	54	8	20	2017-05-26 16:57:26.219235	2017-05-26 16:57:26.219235	\N	\N	\N
579	<p>require &#39;pry&#39;</p>\r\n\r\n<p>puts &quot;Enter your number&quot;<br />\r\nnumbers = gets.to_s.chomp<br />\r\nnumbers = numbers.split(&quot;&quot;)#[1,2,3]<br />\r\n#binding.pry<br />\r\ni = 0<br />\r\nnum = 1<br />\r\n#puts numbers</p>\r\n\r\n<p>numbers.each do |number|<br />\r\n&nbsp; if numbers.length &gt; 1<br />\r\n&nbsp; &nbsp; num *= number.to_i<br />\r\n&nbsp; &nbsp; i += 1<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end<br />\r\n&nbsp; puts num<br />\r\n&nbsp; #binding.pry<br />\r\nend</p>\r\n	59	8	20	2017-05-26 16:57:26.222095	2017-05-26 16:57:26.222095	\N	\N	\N
580	<p>class Department<br />\r\n&nbsp; attr_accessor :department, :course, :dept_id</p>\r\n\r\n<p>&nbsp; @@department = []</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @dept_id = Random.rand(1..5)<br />\r\n&nbsp; &nbsp; @department = data[&quot;department&quot;]<br />\r\n&nbsp; &nbsp; @course = data[&quot;course&quot;]<br />\r\n&nbsp; &nbsp; @@department.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.all<br />\r\n&nbsp; &nbsp; @@department<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;#{self.dept_id} - #{self.department} - #{self.course}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>class Student<br />\r\n&nbsp; attr_accessor :roll_number, :name, :year_of_joining<br />\r\n&nbsp; @@student = []<br />\r\n&nbsp; @@count = 0<br />\r\n&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @roll_number = @@count + 1<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @year_of_joining = data[&quot;year_of_joining&quot;]<br />\r\n&nbsp; &nbsp; @@count += 1<br />\r\n&nbsp; &nbsp; @@student.push(self)<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.all<br />\r\n&nbsp; &nbsp; @@student<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.find(args)<br />\r\n&nbsp; &nbsp; if args[&quot;roll_number&quot;]<br />\r\n&nbsp; &nbsp; &nbsp; return @@student.find{|student| student.roll_number == args[&quot;roll_number&quot;]}<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; elsif args[&quot;year_of_joining&quot;]<br />\r\n&nbsp; &nbsp; &nbsp; return @@student.find_all{|student| student.year_of_joining.year == args[&quot;year_of_joining&quot;]}<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;#{self.roll_number} - #{self.name} - #{self.year_of_joining}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./student_info&#39;<br />\r\nrequire &#39;./dept_info&#39;<br />\r\nrequire &#39;faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>3.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;department&quot; =&gt; Faker::Job.field,<br />\r\n&nbsp; &nbsp; &quot;course&quot; =&gt; Faker::Educator.course<br />\r\n&nbsp; }<br />\r\n&nbsp; d1 = Department.new(data)<br />\r\n&nbsp; #puts d1.inspect</p>\r\n\r\n<p>&nbsp; #binding.pry<br />\r\nend</p>\r\n\r\n<p>5.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;roll_number&quot; =&gt; Faker::Number.number(3),<br />\r\n&nbsp; &nbsp; &quot;year_of_joining&quot; =&gt; Faker::Date.between(Date.parse(&quot;2015-05-15&quot;), Date.today)<br />\r\n&nbsp; }<br />\r\n&nbsp; s1 = Student.new(data)<br />\r\n&nbsp; puts s1.inspect<br />\r\n&nbsp; #binding.pry<br />\r\nend</p>\r\n\r\n<p>def list_students</p>\r\n\r\n<p>&nbsp; puts &quot;*&quot; * 50<br />\r\n&nbsp; puts &quot;\\t Listing students&quot;<br />\r\n&nbsp; puts &quot;*&quot; * 50<br />\r\n&nbsp; Student.all.each do |student|</p>\r\n\r\n<p>&nbsp; &nbsp; puts student.details<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>def display_student<br />\r\n&nbsp; puts &quot;Find by \\n1. Roll Number\\n2. Year of joining&quot;<br />\r\n&nbsp; option = gets.to_i<br />\r\n&nbsp; #student = nil<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; case option<br />\r\n&nbsp; when 1<br />\r\n&nbsp; &nbsp; puts &quot;Enter the roll_number&quot;<br />\r\n&nbsp; &nbsp; roll_number = gets.to_i<br />\r\n&nbsp; &nbsp; student = Student.find({&quot;roll_number&quot; =&gt; roll_number})<br />\r\n&nbsp; &nbsp; if student.nil?<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;student not found&quot;<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; puts student.details<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; when 2<br />\r\n&nbsp; &nbsp; puts &quot;Enter the joining year&quot;<br />\r\n&nbsp; &nbsp; year_of_joining = gets.to_i<br />\r\n&nbsp; &nbsp; students = Student.find({&quot;year_of_joining&quot; =&gt; year_of_joining})<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; students.each do |student|<br />\r\n&nbsp; &nbsp; &nbsp; if student.year_of_joining == year_of_joining</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; puts students</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; elsif students.empty?<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; puts &quot;students not found&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; puts students<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; puts &quot;select Option: \\n1. List student details&quot;<br />\r\n&nbsp; puts &quot;2. Find Student&quot;<br />\r\n&nbsp; option = gets.to_i<br />\r\n&nbsp; case option<br />\r\n&nbsp; when 1<br />\r\n&nbsp; &nbsp; list_students<br />\r\n&nbsp; when 2<br />\r\n&nbsp; &nbsp; display_student<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; puts &quot;Invalid input&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n	58	8	20	2017-05-26 16:57:26.22502	2017-05-26 16:57:26.22502	\N	\N	\N
581	<p>I did not attempt this one, Aniruddha.&nbsp;</p>\r\n	60	8	20	2017-05-26 16:57:26.228535	2017-05-26 16:57:26.228535	\N	\N	\N
582	<p>class Preson&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;attr_accessor :first_name, :last_name<br />\r\n&nbsp;&nbsp; &nbsp;def details&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;Hello,#{self.first_name} #{self.last_name}!&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>p1 = Preson.new<br />\r\nputs &quot;enter the first name&quot;<br />\r\np1.first_name = gets.chomp</p>\r\n\r\n<p>puts &quot;enter the last name&quot;<br />\r\np1.last_name = gets.chomp</p>\r\n\r\n<p>puts p1.details</p>\r\n	55	4	20	2017-05-26 17:07:28.53259	2017-05-26 17:07:28.53259	\N	\N	\N
583	<p>require &#39;faker&#39;</p>\r\n\r\n<p>class Cricketer<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :name, :age, :test_matches_played, :average_runs<br />\r\n&nbsp; &nbsp; @@cricketers = []<br />\r\n&nbsp;&nbsp; &nbsp;def initialize(data)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@age = data[&quot;age&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@test_matches_played = data[&quot;test_matches_played&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@average_runs = data[&quot;average_runs&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@cricketers.push(self)<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp; &nbsp; def self.all<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;@@cricketers<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; def details<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&quot;Name:#{self.name}\\tAge:#{self.age}\\tTest_matches_played:#{self.test_matches_played}\\tAverage_runs_scored:#{self.average_runs}&quot;<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def self.rearrange<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;@@cricketers.sort!{|a, b| a.average_runs &lt;=&gt; b.average_runs}<br />\r\n&nbsp; &nbsp; end<br />\r\nend</p>\r\n	56	4	20	2017-05-26 17:07:28.53558	2017-05-26 17:07:28.53558	\N	\N	\N
584	<p>require&#39;faker&#39;</p>\r\n\r\n<p>class Bank&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :account_number, :name, :balance<br />\r\n&nbsp;&nbsp; &nbsp;@@customers = []<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;def initialize(data)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@account_number = data[&quot;account_number&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@balance = data[&quot;balance&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@customers.push(self)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;def self.all<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@customers<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;def details<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;Account_number:#{self.account_number} \\t Name:#{self.name} \\t Balance:#{self.balance}&quot;<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;def self.low_balance<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@customers.find_all{|customer|customer.balance&lt;100}<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;def self.transaction(account_number,amount,option)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;result = @@customers.find{|a|a.account_number == account_number}<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;if result == nil<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;Invalid account number&quot;<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;case option<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;when 1<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;result.balance = result.balance + amount<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;puts &quot;Amount deposited successfully, the account balance is:#{result.balance}&quot;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;when 0<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;enter Account_number &quot;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (result.balance &lt; amount || result.balance &lt;=100)<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;The abalance is insufficient for the specified withdrawal&quot;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;result.balance = result.balance - amount<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;Amount withdrawn successfully, the account balance is:INR#{result_account.balance}&quot;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;enter valid option &quot;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;end&nbsp;</p>\r\n	57	4	20	2017-05-26 17:07:28.538391	2017-05-26 17:07:28.538391	\N	\N	\N
585	<p>puts &quot;enter how many numbers you want in password&quot;<br />\r\nnumber = gets.to_i</p>\r\n\r\n<p>puts &quot;enter how many speacial char you want in ur password&quot;<br />\r\nspeacial = gets.to_i</p>\r\n\r\n<p>puts &quot;enter how many leters you want in ur password&quot;<br />\r\nletter = gets.to_i<br />\r\n# s = [ ]</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;speacial_char = [&quot;,&quot; ,&quot;.&quot; , &quot;#&quot; , &quot;/&quot; , &quot;}&quot; , &quot;{&quot; , &quot;:&quot; , &quot;;&quot; , &quot;(&quot; , &quot;)&quot;,&quot;!&quot;,&quot;+&quot;,&quot;*&quot;,&quot;&amp;&quot;,&quot;%&quot;,&quot;@&quot;,&quot;&lt;&quot;,&quot;&gt;&quot;,&quot;~&quot;,&quot;`&quot;,&quot;$&quot;,&quot;^&quot;,&quot;-&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;numbers = [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;0&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;char = (&quot;a&quot;..&quot;z&quot;).to_a</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;s = speacial_char.sample(speacial) + numbers.sample(number) + char.sample(letter)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;puts s.to_a.shuffle.join(&quot;&quot;)</p>\r\n	54	4	20	2017-05-26 17:07:28.540692	2017-05-26 17:07:28.540692	\N	\N	\N
586	<p>puts &quot;Enter the number&quot;<br />\r\nnumber = gets.to_i<br />\r\n# puts product(array)<br />\r\nwhile 1</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;num = number.to_s.split(&quot;&quot;).map(&amp;:to_i)<br />\r\n&nbsp;&nbsp; &nbsp;final = 1</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;num.each do |i|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;final *= i<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;number = final.to_s</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;if number.length&gt;1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;next<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts number<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n	59	4	20	2017-05-26 17:07:28.546689	2017-05-26 17:07:28.546689	\N	\N	\N
587	<p>#yet to do</p>\r\n	58	4	20	2017-05-26 17:07:28.551971	2017-05-26 17:07:28.551971	\N	\N	\N
588	<p>#yet to do&nbsp;</p>\r\n	60	4	20	2017-05-26 17:07:28.554186	2017-05-26 17:07:28.554186	\N	\N	\N
679	<ul>\r\n\t<li>reference is very easy</li>\r\n\t<li>maintainance of code is very simple</li>\r\n</ul>\r\n	72	10	23	2017-06-05 07:36:41.386443	2017-06-05 07:36:41.386443	\N	\N	\N
589	<p>class Person</p>\r\n\r\n<p>&nbsp; attr_accessor :name, :surname</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp;&nbsp;&nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @surname = data[&quot;surname&quot;]<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def greet<br />\r\n&nbsp;&nbsp;&nbsp; &quot;Hello, #{self.name} #{self.surname}!&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter name&quot;<br />\r\nname = gets.chomp</p>\r\n\r\n<p>puts &quot;Enter surname&quot;<br />\r\nsurname = gets.chomp</p>\r\n\r\n<p>data = {<br />\r\n&nbsp; &quot;name&quot; =&gt; name,<br />\r\n&nbsp; &quot;surname&quot; =&gt; surname<br />\r\n}</p>\r\n\r\n<p>p1 = Person.new(data)<br />\r\nresult = p1.greet<br />\r\nputs result</p>\r\n\r\n<p>&nbsp;</p>\r\n	55	3	20	2017-05-26 17:37:39.79599	2017-05-26 17:37:39.79599	\N	\N	\N
590	<p>class Player<br />\r\n&nbsp; attr_accessor :name, :age, :num_test_matches, :avg_runs<br />\r\n&nbsp; @@players = []<br />\r\n&nbsp; @@player_hash = {}<br />\r\n&nbsp; def initialize(data)<br />\r\n&nbsp;&nbsp;&nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @age = data[&quot;age&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @num_test_matches = data[&quot;num_test_matches&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @avg_runs = data[&quot;avg_runs&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @@players.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp;&nbsp;&nbsp; puts &quot;#{self.name} AVG: #{avg_runs}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.sort<br />\r\n&nbsp;&nbsp;&nbsp; @@players.each do |player|<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @@player_hash[player.name] = player.avg_runs<br />\r\n&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp;&nbsp;&nbsp; sorted_player_hash = @@player_hash.values.sort<br />\r\n&nbsp;&nbsp;&nbsp; #puts &quot;Name - #{sorted_player_hash.key} Average run - #{sorted_player_hash.values}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./cricket&#39;<br />\r\nrequire &#39;faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>10.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp;&nbsp;&nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp;&nbsp;&nbsp; &quot;age&quot; =&gt; Faker::Number.between(18, 35),<br />\r\n&nbsp;&nbsp;&nbsp; &quot;num_test_matches&quot; =&gt;&nbsp; Faker::Number.between(1, 20),<br />\r\n&nbsp;&nbsp;&nbsp; &quot;avg_runs&quot; =&gt; Faker::Number.between(100, 250)<br />\r\n&nbsp; }</p>\r\n\r\n<p>&nbsp; p1 = Player.new(data)<br />\r\n&nbsp; puts p1.details</p>\r\n\r\n<p>end</p>\r\n\r\n<p>result = Player.sort<br />\r\nputs result</p>\r\n\r\n<p>&nbsp;</p>\r\n	56	3	20	2017-05-26 17:37:39.802373	2017-05-26 17:37:39.802373	\N	\N	\N
591	<p>require &#39;faker&#39;<br />\r\nclass Bank<br />\r\n&nbsp; attr_accessor :account_number, :name, :balance #assume 200 customers<br />\r\n&nbsp; @@customers = []</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp;&nbsp;&nbsp; @account_number = data[&quot;account_number&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @balance = data[&quot;balance&quot;]<br />\r\n&nbsp;&nbsp;&nbsp; @@customers.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.all<br />\r\n&nbsp;&nbsp;&nbsp; @@customers<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp;&nbsp;&nbsp; &quot;Acc_number:#{self.account_number}\\tName:#{self.name}\\tBalance:INR#{self.balance}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.low_balance<br />\r\n&nbsp;&nbsp;&nbsp; @@customers.find_all{|customer|customer.balance&lt;100}<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.deposit(account_number, amount)<br />\r\n&nbsp;&nbsp;&nbsp; customer_account = @@customers.find{|customer| customer.account_number == account_number}<br />\r\n&nbsp;&nbsp;&nbsp; if customer_account == nil<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts &quot;Enter valid account number&quot;<br />\r\n&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; customer_account.balance = customer_account.balance + amount<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts &quot;Amount deposited. Your balance is #{customer_account.balance}&quot;<br />\r\n&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.withdrawal(account_number, amount )<br />\r\n&nbsp;&nbsp;&nbsp; customer_account = @@customers.find{|customer| customer.account_number == account_number}<br />\r\n&nbsp;&nbsp;&nbsp; if amount &gt; customer_account.balance<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts &quot;no sufficient balance&quot;<br />\r\n&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if customer_account == nil<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts &quot;Enter Valid account number&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; customer_account.balance = customer_account.balance - amount<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; puts &quot;Amount withdrawn. Your balance is #{customer_account.balance}&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp;&nbsp;&nbsp; end</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>20.times do<br />\r\n&nbsp; data = {&quot;account_number&quot;=&gt;Faker::Bank.iban,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;name&quot;=&gt;Faker::Name.name,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;balance&quot;=&gt;Random.rand(95..250)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp; Bank.new(data)<br />\r\nend</p>\r\n\r\n<p>puts &quot;\\nAccount details:\\n&quot;<br />\r\nBank.all.each do |customer|<br />\r\n&nbsp; puts customer.details<br />\r\nend</p>\r\n\r\n<p>puts &quot;\\nEnter the Acc No, Amount, option (1 for deposit, 0 for withdrawal):&quot;<br />\r\nputs &quot;Enter Account Number&quot;<br />\r\naccount_number = gets.chomp<br />\r\nputs &quot;Enter Amount&quot;<br />\r\namount = gets.to_i<br />\r\nputs &quot;Enter Option&quot;<br />\r\noption = gets.to_i</p>\r\n\r\n<p>if option == 1<br />\r\n&nbsp; Bank.deposit(account_number, amount)<br />\r\nelsif option == 0<br />\r\n&nbsp; Bank.withdrawal(account_number, amount)<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n	57	3	20	2017-05-26 17:37:39.80657	2017-05-26 17:37:39.80657	\N	\N	\N
592	<p>def generate_password(special_char_length, number_length, cap_length, small_length)<br />\r\n&nbsp; special_char = (&#39;!&#39;..&#39;?&#39;).to_a<br />\r\n&nbsp; number_array = (0..1).to_a<br />\r\n&nbsp; cap_array = (&#39;A&#39;..&#39;Z&#39;).to_a<br />\r\n&nbsp; small_array = (&#39;a&#39;..&#39;z&#39;).to_a</p>\r\n\r\n<p>&nbsp; secure_password = special_char.sample(special_char_length) + number_array.sample(number_length) + cap_array.sample(cap_length) + small_array.sample(small_length)<br />\r\n&nbsp; secure_password.shuffle.join(&quot;&quot;)</p>\r\n\r\n<p>end</p>\r\n\r\n<p><br />\r\nputs &quot;Enter length of special character&quot;<br />\r\nspecial_char_length = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter length of number&quot;<br />\r\nnumber_length = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter length of capital character&quot;<br />\r\ncap_length = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter length of small character&quot;<br />\r\nsmall_length = gets.to_i</p>\r\n\r\n<p>result = generate_password(special_char_length, number_length, cap_length, small_length)<br />\r\nputs result</p>\r\n\r\n<p>&nbsp;</p>\r\n	54	3	20	2017-05-26 17:37:39.809662	2017-05-26 17:37:39.809662	\N	\N	\N
593	<p>require &#39;pry&#39;<br />\r\ndef bugger(num)<br />\r\n&nbsp; if num.length &gt; 1<br />\r\n&nbsp;&nbsp;&nbsp; i = 0<br />\r\n&nbsp;&nbsp;&nbsp; #binding.pry<br />\r\n&nbsp;&nbsp;&nbsp; numbers = num.split(&quot;&quot;)<br />\r\n&nbsp;&nbsp;&nbsp; puts numbers<br />\r\n&nbsp;&nbsp;&nbsp; result = 1<br />\r\n&nbsp;&nbsp;&nbsp; while i &lt; numbers.length<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result = result * numbers[i].to_i<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i +=1<br />\r\n&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp;&nbsp;&nbsp; num =result.to_s<br />\r\n&nbsp;&nbsp;&nbsp; if num.length &gt;1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result = bugger(num)<br />\r\n&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;#{num} is Persistent&quot;<br />\r\n&nbsp;&nbsp;&nbsp; end<br />\r\n&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp; puts &quot;#{num} is Persistent&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter your Persistent Number&quot;<br />\r\nnum = gets.chomp<br />\r\nresult = bugger(num)<br />\r\nputs result</p>\r\n\r\n<p>&nbsp;</p>\r\n	59	3	20	2017-05-26 17:37:39.812442	2017-05-26 17:37:39.812442	\N	\N	\N
594	<p>i will do it by tomorrow</p>\r\n	58	3	20	2017-05-26 17:37:39.81569	2017-05-26 17:37:39.81569	\N	\N	\N
595	<p>i will do it by tomorrow</p>\r\n	60	3	20	2017-05-26 17:37:39.818547	2017-05-26 17:37:39.818547	\N	\N	\N
596	<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>###############greetings.rb##################</p>\r\n\r\n<p>require &#39;./person_new.rb&#39;<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>100.times do<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\ndata = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;first_name&quot; =&gt; Faker::Name.first_name,<br />\r\n&nbsp;&nbsp; &nbsp;&quot;last_name&quot; &nbsp;=&gt; Faker::Name.last_name<br />\r\n}</p>\r\n\r\n<p>p1= Person_new.new(data)</p>\r\n\r\n<p>puts p1.details<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\nend</p>\r\n\r\n<p>############person_new.rb##############</p>\r\n\r\n<p>class Person_new</p>\r\n\r\n<p>attr_accessor :first_name, :last_name</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def initialize(data)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@first_name = data[&quot;first_name&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@last_name &nbsp;= &nbsp;data[&quot;last_name&quot;]</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;def details<br />\r\n&nbsp; &nbsp; &quot;Hello, #{self.first_name} #{self.last_name}! &quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p><br />\r\nend<br />\r\n&nbsp;</p>\r\n	55	19	20	2017-05-26 18:20:23.557812	2017-05-26 18:20:23.557812	\N	\N	\N
597	<p>########player.rb####################</p>\r\n\r\n<p>require &#39;pry&#39;<br />\r\nclass Player<br />\r\n&nbsp; attr_accessor :name, :age, :num_test_matches, :avg_runs<br />\r\n&nbsp; @@player = []<br />\r\n&nbsp; @@player2 = {}</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @age = data[&quot;age&quot;]<br />\r\n&nbsp; &nbsp; @num_test_matches = data[&quot;num_test_matches&quot;]<br />\r\n&nbsp; &nbsp; @avg_runs = data[&quot;avg_runs&quot;]<br />\r\n&nbsp; &nbsp; @@player.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; puts &quot;#{self.name} AVG: #{avg_runs}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; def self.averagerunsofplayers</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; @@player.each do |player|</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; @@player2[player.name] = player.avg_runs</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;players2 = @@player2.values<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;players2_sorted = players2.sort</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; i =0<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; while ( i &lt; players2_sorted.length)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts @@player2.key(players2_sorted[i]) =&gt; players2_sorted[i]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i += 1<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end</p>\r\n\r\n<p><br />\r\n&nbsp; &nbsp;end</p>\r\n\r\n<p><br />\r\nend</p>\r\n\r\n<p>########Cricket Avg app.rb############</p>\r\n\r\n<p>require &#39;./player&#39;<br />\r\nrequire &#39;Faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>100.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;age&quot; =&gt; Faker::Number.between(18, 28),<br />\r\n&nbsp; &nbsp; &quot;num_test_matches&quot; =&gt; &nbsp;Faker::Number.between(1, 5),<br />\r\n&nbsp; &nbsp; &quot;avg_runs&quot; =&gt; Faker::Number.between(10, 50)<br />\r\n&nbsp; }</p>\r\n\r\n<p>&nbsp; p1 = Player.new(data)<br />\r\n&nbsp; puts p1.details</p>\r\n\r\n<p>end</p>\r\n\r\n<p>Player.averagerunsofplayers</p>\r\n	56	19	20	2017-05-26 18:20:23.565692	2017-05-26 18:20:23.565692	\N	\N	\N
598	<p>########CUSTOMER#######################</p>\r\n\r\n<p>require &#39;pry&#39;<br />\r\nclass Customer<br />\r\n&nbsp; attr_accessor :ac_no, :name, :balance</p>\r\n\r\n<p>&nbsp; @@customer = []</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @ac_no = data[&quot;ac_no&quot;]<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @balance = data[&quot;balance&quot;]<br />\r\n&nbsp; &nbsp; @@customer.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.low_balance(low_bal_var)<br />\r\n&nbsp; &nbsp; low_balance_customer = @@customer.find_all {|customer| customer.balance &lt; low_bal_var}<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.validate_accnum(acc_num)</p>\r\n\r\n<p>&nbsp; &nbsp; var_cust_num = @@customer.find {|customer| customer.ac_no == acc_num }</p>\r\n\r\n<p>&nbsp; &nbsp; if var_cust_num.nil?<br />\r\n&nbsp; &nbsp; &nbsp; return nil<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; return var_cust_num.balance<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p><br />\r\n&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;***#{self.ac_no}*** belongs to #{self.name} and has a balance amount of INR: #{self.balance} &quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>########BANK TRANSACTION###############</p>\r\n\r\n<p>require &#39;./customer&#39;<br />\r\nrequire &#39;faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>def low_balance_customers(low_bal_var)</p>\r\n\r\n<p>&nbsp; Customer.low_balance(low_bal_var).each do |low_balance|<br />\r\n&nbsp; &nbsp; puts &quot;Customers with a low balance are: #{low_balance.name} *** A/c no - #{low_balance.ac_no} *** #{low_balance.balance}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>200.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;ac_no&quot; =&gt; Faker::Bank.swift_bic,<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;balance&quot; =&gt; Faker::Number.between(1, 1000)<br />\r\n&nbsp; }<br />\r\n&nbsp; c1 = Customer.new(data)<br />\r\n&nbsp; puts c1.details<br />\r\nend</p>\r\n\r\n<p><br />\r\nputs &quot;Enter the balance below which you need the Customers list&quot;<br />\r\nlow_bal_var = gets.to_i</p>\r\n\r\n<p>low_balance_customers(low_bal_var)</p>\r\n\r\n<p><br />\r\nputs &quot;Enter your Customer number&quot;<br />\r\nacc_num = gets.chomp</p>\r\n\r\n<p>validated_customer_with_ac_balance = Customer.validate_accnum(acc_num)</p>\r\n\r\n<p>if validated_customer_with_ac_balance == nil</p>\r\n\r\n<p>&nbsp; puts &quot;Sorry user does not exist&quot;</p>\r\n\r\n<p>else<br />\r\n&nbsp; puts &quot;#{acc_num} your current balance is : &nbsp;#{validated_customer_with_ac_balance}&quot;</p>\r\n\r\n<p>&nbsp; puts &quot; 0 for withdrawl and 1 for Deposit&quot;<br />\r\n&nbsp; option = gets.to_i</p>\r\n\r\n<p>&nbsp; if ( option == 0)</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter withdrawl amount&quot;<br />\r\n&nbsp; &nbsp; withdraw_amnt = gets.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; if (validated_customer_with_ac_balance - withdraw_amnt &lt; 0)<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;The balance is insufficient for the specified withdrawal&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; else</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; updated_balance = validated_customer_with_ac_balance - withdraw_amnt</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; puts &quot; After withdrawal, your new balance is #{updated_balance}&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; elsif (option == 1)</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter Deposit amount&quot;<br />\r\n&nbsp; &nbsp; deposit_amnt = gets.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; updated_balance = validated_customer_with_ac_balance + deposit_amnt</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot; After Deposit, your new balance is #{updated_balance}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p><br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	57	19	20	2017-05-26 18:20:23.570941	2017-05-26 18:20:23.570941	\N	\N	\N
599	<p>puts &quot;Enter the minimum length of the password&quot;<br />\r\nmin_length_pwd = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter the number of Special characters in the Password&quot;<br />\r\ncount_of_special_char = gets.to_i</p>\r\n\r\n<p>puts &quot;Enter the count of NUMBERS in the Password&quot;<br />\r\ncount_of_Num = gets.to_i</p>\r\n\r\n<p>array_numbers = [0,1,2,3,4,5,6,7,8,9]<br />\r\narray_specialChar = [&quot;?&quot;,&quot;&lt;&quot;,&quot;&gt;&quot;,&quot;&#39;&quot;,&quot;,&quot;,&quot;?&quot;,&quot;[&quot;,&quot;]&quot;,&quot;}&quot;,&quot;{&quot;,&quot;=&quot;,&quot;-&quot;,&quot;)&quot;,&quot;(&quot;,&quot;*&quot;,&quot;&amp;&quot;,&quot;^&quot;,&quot;%&quot;,&quot;$&quot;,&quot;#&quot;,&quot;`&quot;,&quot;~&quot;,&quot;{&quot;,&quot;}&quot;]<br />\r\narray_letters = (&#39;A&#39;..&#39;Z&#39;).to_a + (&#39;a&#39;..&#39;z&#39;).to_a</p>\r\n\r\n<p>min_remCountofPwd = min_length_pwd - count_of_special_char - count_of_Num</p>\r\n\r\n<p>puts &quot;We will provide you 5 variations of Password&quot;<br />\r\ni=0<br />\r\nvariations =5</p>\r\n\r\n<p>while ( i &lt; variations )</p>\r\n\r\n<p>password_special = array_specialChar.sample(count_of_special_char).join(&quot;&quot;)<br />\r\npassword_numbers = array_numbers.sample(count_of_Num).join(&quot;&quot;)<br />\r\npassword_letters = array_letters.sample(min_remCountofPwd).join(&quot;&quot;)<br />\r\npasswrd = &nbsp;password_special + password_numbers + password_letters<br />\r\nfinal_password = passwrd.split(&quot;&quot;)<br />\r\nputs final_password.shuffle.join(&quot;&quot;)</p>\r\n\r\n<p>i += 1<br />\r\nend</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n	54	19	20	2017-05-26 18:20:23.57506	2017-05-26 18:20:23.57506	\N	\N	\N
600	<p>puts &quot;Enter your Persistent Number&quot;<br />\r\nnum = gets.chomp<br />\r\nif num.length &gt;1</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while (1)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;splitted_num = num.split(&quot;&quot;)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;i =0&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var=1</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while (i &lt; splitted_num.length)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var *= splitted_num[i].to_i</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;i += 1</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;num = var.to_s<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts num</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if num.length &gt; 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;next<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;your num is : #{num}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Your Num #{num} is the Persistent Number as its already a one digit number&quot;<br />\r\nend</p>\r\n	59	19	20	2017-05-26 18:20:23.578343	2017-05-26 18:20:23.578343	\N	\N	\N
601	<p>DEPT_INFO</p>\r\n\r\n<p>class Department</p>\r\n\r\n<p>&nbsp; attr_accessor :department, :course, :dept_id</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; @@department = []</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; def initialize(data)</p>\r\n\r\n<p>&nbsp; &nbsp; @dept_id = Random.rand(1..5)</p>\r\n\r\n<p>&nbsp; &nbsp; @department = data[&quot;department&quot;]</p>\r\n\r\n<p>&nbsp; &nbsp; @course = data[&quot;course&quot;]</p>\r\n\r\n<p>&nbsp; &nbsp; @@department.push(self)</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; def self.all</p>\r\n\r\n<p>&nbsp; &nbsp; @@department</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; def details</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;#{self.dept_id} - #{self.department} - #{self.course}&quot;</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>STUDENT.RB</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./student_info&#39;</p>\r\n\r\n<p>require &#39;./dept_info&#39;</p>\r\n\r\n<p>require &#39;faker&#39;</p>\r\n\r\n<p>require &#39;pry&#39;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3.times do</p>\r\n\r\n<p>&nbsp; data = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;department&quot; =&gt; Faker::Job.field,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;course&quot; =&gt; Faker::Educator.course</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>&nbsp; d1 = Department.new(data)</p>\r\n\r\n<p>&nbsp; puts d1.inspect</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; #binding.pry</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>5.times do</p>\r\n\r\n<p>&nbsp; data = {</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;roll_number&quot; =&gt; Faker::Number.number(3),</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;year_of_joining&quot; =&gt; Faker::Date.between(Date.parse(&quot;2015-05-15&quot;), Date.today)</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>&nbsp; s1 = Student.new(data)</p>\r\n\r\n<p>&nbsp; puts s1.inspect</p>\r\n\r\n<p>&nbsp; #binding.pry</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>def list_students</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; puts &quot;*&quot; * 50</p>\r\n\r\n<p>&nbsp; puts &quot;\\t Listing students&quot;</p>\r\n\r\n<p>&nbsp; puts &quot;*&quot; * 50</p>\r\n\r\n<p>&nbsp; Student.all.each do |student|</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; puts student.details</p>\r\n\r\n<p>&nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>def display_student</p>\r\n\r\n<p>&nbsp; puts &quot;Find by \\n1. Roll Number\\n2. Year of joining&quot;</p>\r\n\r\n<p>&nbsp; option = gets.to_i</p>\r\n\r\n<p>&nbsp; #student = nil</p>\r\n\r\n<p>&nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; case option</p>\r\n\r\n<p>&nbsp; when 1</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter the roll_number&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; roll_number = gets.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; student = Student.find({&quot;roll_number&quot; =&gt; roll_number})</p>\r\n\r\n<p>&nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; when 2</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter the joining year&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; year_of_joining = gets.chomp</p>\r\n\r\n<p>&nbsp; &nbsp; student = Student.find({&quot;year_of_joining&quot; =&gt; year_of_joining})</p>\r\n\r\n<p>&nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp; if student.nil?</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;student not found&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; else</p>\r\n\r\n<p>&nbsp; &nbsp; puts student.details</p>\r\n\r\n<p>&nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>puts &quot;select Option: \\n1. List student details&quot;</p>\r\n\r\n<p>puts &quot;2. Find Student&quot;</p>\r\n\r\n<p>option = gets.to_i</p>\r\n\r\n<p>case option</p>\r\n\r\n<p>when 1</p>\r\n\r\n<p>&nbsp; list_students</p>\r\n\r\n<p>when 2</p>\r\n\r\n<p>&nbsp; display_student</p>\r\n\r\n<p>else</p>\r\n\r\n<p>&nbsp; puts &quot;Invalid input&quot;</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>STUDENT_INFO.RB</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>class Student</p>\r\n\r\n<p>&nbsp; attr_accessor :roll_number, :name, :year_of_joining</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; @@student = []</p>\r\n\r\n<p>&nbsp; @@count = 0</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; def initialize(data)</p>\r\n\r\n<p>&nbsp; &nbsp; @roll_number = @@count + 1</p>\r\n\r\n<p>&nbsp; &nbsp; @name = data[&quot;name&quot;]</p>\r\n\r\n<p>&nbsp; &nbsp; @year_of_joining = data[&quot;year_of_joining&quot;]</p>\r\n\r\n<p>&nbsp; &nbsp; @@count += 1</p>\r\n\r\n<p>&nbsp; &nbsp; @@student.push(self)</p>\r\n\r\n<p>&nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; def self.all</p>\r\n\r\n<p>&nbsp; &nbsp; @@student</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; def self.find(args)</p>\r\n\r\n<p>&nbsp; &nbsp; if args[&quot;roll_number&quot;]</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; return @@student.find{|student| student.roll_number == args[&quot;roll_number&quot;]}</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; &nbsp; elsif args[&quot;year_of_joining&quot;]</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; return @@student.find{|student| student.year_of_joining == args[&quot;year_of_joining&quot;]}</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; #binding.pry</p>\r\n\r\n<p>&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; def details</p>\r\n\r\n<p>&nbsp; &nbsp; &quot;#{self.roll_number} - #{<a href="http://self.name/" target="_blank">self.name</a>} - #{self.year_of_joining}&quot;</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>end</p>\r\n	58	19	20	2017-05-26 18:20:23.599372	2017-05-26 18:20:23.599372	\N	\N	\N
602	<p>#str = &quot;GOOG 300 542.0 B&quot;<br />\r\nstr = &quot;ZNGA 1300 266 B,CLH.15NYM 50.5 56.1 B,OWW 10 10.0 B,OGG 10 10.0 B&quot;<br />\r\narr1 = str.split(&quot;,&quot;)<br />\r\narr2 = []<br />\r\ni=0<br />\r\nsum_buy=0<br />\r\nsum_sell=0<br />\r\nflag_validated=false<br />\r\ncount_badly_formed=0<br />\r\nbadly_formed_array = []</p>\r\n\r\n<p><br />\r\nwhile ( i &lt; arr1.length )</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr2 = arr1[i].split(&quot; &quot;) #ZNGA 1300 2.66 B</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;#Apply Validations . If found true then call the below while loop else go to outer loop and re-iterate<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr_number &nbsp;= arr2[1].split(&quot;.&quot;)<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts arr_number<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;arr_decimal = arr2[2].split(&quot;.&quot;)&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts arr_decimal</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ( arr_number.length == 1)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (arr_decimal.length == 2 )<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (arr2[3] == &quot;B&quot; || arr2[3] == &quot;S&quot; )<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;flag_validated=true<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts flag_validated<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; if (flag_validated == true )<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;j=0<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while ( j &lt; arr2.length )</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;temp = arr2[1].to_f * arr2[2].to_f<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (arr2[3] == &quot;B&quot;)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sum_buy += &nbsp;temp<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;elsif (arr2[3] == &quot;S&quot;)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sum_sell += temp<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;j += 4</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;This is a badly formed string : #{arr2}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;count_badly_formed += 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;badly_formed_array.push(arr2)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;i +=1</p>\r\n\r\n<p>&nbsp;end</p>\r\n\r\n<p>puts &quot;Your Input is : #{str}&quot;<br />\r\nputs &quot;Output is &quot; + &quot; Buy : #{sum_buy.round} Sell : #{sum_sell.round}; Badly formed #{count_badly_formed} : #{badly_formed_array.flatten}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	60	19	20	2017-05-26 18:20:23.611109	2017-05-26 18:20:23.611109	\N	\N	\N
603	<p>class Person<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :first_name, :last_name<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;def greet<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return &quot;Hello, #{first_name} #{last_name}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n\r\n<p>p1=Person.new<br />\r\nputs &quot;enter the first name:&quot;<br />\r\np1.first_name = gets.chomp<br />\r\nputs &quot;enter the last name:&quot;<br />\r\np1.last_name = gets.chomp<br />\r\nputs p1.greet<br />\r\n&nbsp;</p>\r\n	55	5	20	2017-05-26 18:21:57.129089	2017-05-26 18:21:57.129089	\N	\N	\N
604	<p>=begin<br />\r\nAn object contains name of cricketer, his age, number of test matches that he has played and the average runs that he has scored in each test match. Create an array of objects to hold records of 10 such cricketers and then write a program to read these records and arrange them in ascending order by average runs. Use sort stand library method<br />\r\n=end<br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>class Cricketer<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :name, :age, :test_matches_played, :average_runs<br />\r\n&nbsp; &nbsp; @@cricketers = []<br />\r\n&nbsp;&nbsp; &nbsp;def initialize(data)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@age = data[&quot;age&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@test_matches_played = data[&quot;test_matches_played&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@average_runs = data[&quot;average_runs&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@cricketers.push(self)<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp; &nbsp; def self.all<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;@@cricketers<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; def details<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&quot;Name:#{self.name}\\tAge:#{self.age}\\tTest_matches_played:#{self.test_matches_played}\\tAverage_runs_scored:#{self.average_runs}&quot;<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def self.rearrange<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;@@cricketers.sort!{|a, b| a.average_runs &lt;=&gt; b.average_runs}<br />\r\n&nbsp; &nbsp; end<br />\r\nend</p>\r\n\r\n<p><br />\r\n10.times do<br />\r\n&nbsp;&nbsp; &nbsp;data = {&quot;name&quot;=&gt;Faker::Name.name, &quot;age&quot;=&gt;Faker::Number.between(25, 45), &quot;test_matches_played&quot;=&gt;Faker::Number.between(2, 20), &quot;average_runs&quot;=&gt;Faker::Number.between(50, 200)}<br />\r\n&nbsp; &nbsp; Cricketer.new(data)<br />\r\nend</p>\r\n\r\n<p>puts &quot;Records of cricketers:\\n&quot;<br />\r\nCricketer.all.each do |cricket|<br />\r\n&nbsp;&nbsp; &nbsp;puts cricket.details<br />\r\nend</p>\r\n\r\n<p>puts &quot;\\nRecords in ascending order by average runs:\\n&quot;<br />\r\nCricketer.rearrange<br />\r\nCricketer.all.each do |cricket|&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;puts cricket.details<br />\r\nend</p>\r\n	56	5	20	2017-05-26 18:21:57.142501	2017-05-26 18:21:57.142501	\N	\N	\N
605	<p><br />\r\nrequire &#39;faker&#39;</p>\r\n\r\n<p>class Bank<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :acc_number, :name, :balance #assume 200 customers<br />\r\n&nbsp; &nbsp; @@customers = []</p>\r\n\r\n<p>&nbsp; &nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;@acc_number = data[&quot;acc_number&quot;]<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;@balance = data[&quot;balance&quot;]<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;@@customers.push(self)<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; def self.all<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;@@customers<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; def details<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&quot;Acc_number:#{self.acc_number}\\tName:#{self.name}\\tBalance:INR#{self.balance}&quot;<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def self.low_balance<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@customers.find_all{|customer|customer.balance&lt;100}<br />\r\n&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def self.transaction(acc_number,amount,option)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;result_account = @@customers.find{|a|a.acc_number == acc_number}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if result_account == nil&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;puts &quot;Invalid account number&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;case option<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;when 1<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result_account.balance = result_account.balance + amount<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts &quot;Amount deposited successfully, the account balance is:INR#{result_account.balance}&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;when 0<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; if (result_account.balance &lt; amount || result_account.balance &lt;= 100)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts &quot;The abalance is insufficient for the specified withdrawal&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result_account.balance = result_account.balance - amount<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts &quot;Amount withdrawn successfully, the account balance is:INR#{result_account.balance}&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;puts &quot;enter valid option&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;end<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end&nbsp;<br />\r\n&nbsp; &nbsp; end<br />\r\nend</p>\r\n\r\n<p>200.times do<br />\r\n&nbsp; &nbsp; data = {&quot;acc_number&quot;=&gt;Faker::Bank.iban, &quot;name&quot;=&gt;Faker::Name.name, &quot;balance&quot;=&gt;Random.rand(95..250)}<br />\r\n&nbsp; &nbsp; Bank.new(data)<br />\r\nend</p>\r\n\r\n<p>puts &quot;\\nAccount details:\\n&quot;<br />\r\nBank.all.each do |customer|<br />\r\n&nbsp;&nbsp; &nbsp;puts customer.details<br />\r\nend</p>\r\n\r\n<p>puts &quot;\\nAccount details of customers whose balance below INR 100 are:&quot;<br />\r\nBank.low_balance.each do |low|<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Acc_number:#{low.acc_number}\\tName:#{low.name}\\tBalance:INR#{low.balance}&quot;<br />\r\nend</p>\r\n\r\n<p>puts &quot;\\nEnter the Acc No, Amount, code (1 for deposit, 0 for withdrawal):&quot;<br />\r\nacc_no = gets.chomp<br />\r\namount = gets.to_i<br />\r\ncode = gets.to_i<br />\r\nBank.transaction(acc_no,amount,code)</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n	57	5	20	2017-05-26 18:21:57.150292	2017-05-26 18:21:57.150292	\N	\N	\N
606	<p>puts &quot;\\nLet&#39;s generate a secure password:\\n&quot;<br />\r\nputs &quot;How many numbers do you need in password?&quot;<br />\r\nnum_size = gets.to_i</p>\r\n\r\n<p>puts &quot;How many speacial characters do you need in password?&quot;<br />\r\nchar_size = gets.to_i</p>\r\n\r\n<p>puts &quot;How many alphabets do you need in password?&quot;<br />\r\nalpha_size = gets.to_i</p>\r\n\r\n<p>speacial_chars = [&quot;,&quot; ,&quot;.&quot; , &quot;#&quot; , &quot;/&quot; , &quot;}&quot; , &quot;{&quot; , &quot;:&quot; , &quot;;&quot; , &quot;(&quot; , &quot;)&quot;,&quot;!&quot;,&quot;+&quot;,&quot;*&quot;,&quot;&amp;&quot;,&quot;%&quot;,&quot;@&quot;,&quot;&lt;&quot;,&quot;&gt;&quot;,&quot;~&quot;,&quot;`&quot;,&quot;$&quot;,&quot;^&quot;,&quot;-&quot;]<br />\r\nnumbers = [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;,&quot;9&quot;,&quot;0&quot;]<br />\r\nchar = (&quot;a&quot;..&quot;z&quot;).to_a<br />\r\nif (num_size&lt;2 || char_size&lt;2 || alpha_size&lt;2)<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Warning-password should contain atleast 2 numbers, 2 alphabets and speacial characters&quot;<br />\r\nelse&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;password = speacial_chars.sample(char_size) + numbers.sample(num_size) + char.sample(alpha_size)<br />\r\n&nbsp; &nbsp; &nbsp;puts password.to_a.shuffle.join(&quot;&quot;)<br />\r\nend<br />\r\n&nbsp;</p>\r\n	54	5	20	2017-05-26 18:21:57.161187	2017-05-26 18:21:57.161187	\N	\N	\N
607	<p>def persistence(num)<br />\r\n&nbsp; &nbsp; if num&lt;10<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; return 0<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;while(1)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; numbers=num.to_s.split(&quot;&quot;) #[&quot;9&quot;, &quot;9&quot;, &quot;9&quot;]&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; numbers.map!{|n|n.to_i} #[9, 9, 9]<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; numbers = numbers.inject(:*) #729 i need result 2&#39;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; num = numbers.to_s<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if num.length &gt;1<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;next<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return num<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts &quot;enter the number:&quot;<br />\r\nnum = gets.to_i #999<br />\r\nputs persistence(num)</p>\r\n	59	5	20	2017-05-26 18:21:57.166637	2017-05-26 18:21:57.166637	\N	\N	\N
608	<p>require &#39;faker&#39;<br />\r\nclass StudentManagement<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :roll_number, :name, :department, :course, :year_of_joining<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; @@students = []<br />\r\n&nbsp;&nbsp; &nbsp;def self.list_by_year(year)<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; students_list = []<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; students_list = students.find_all{|student| student.year_of_joining == year}<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; students_list.each do |student|<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; puts &quot;Name: #{student.name}\\t#{student.year}&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; if students_list.empty?<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;puts &quot;No students available for this year&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;def self.data_by_rollnumber(rollnum)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;student_info = students.find{|student| student.roll_number == rollnum}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;Roll number: #{student_info.roll_number}\\tName: #{student_info.name}\\tDepartment: #{student_info.department}\\tCourse: #{student_info.course}\\tYear of joing: #{student_info.year_of_joining}&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; if student_info == nil<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;puts &quot;Invalid roll number&quot;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>10.times do<br />\r\n&nbsp; &nbsp;student = StudentManagement.new<br />\r\n&nbsp; &nbsp;student.roll_number = (2050..2100)<br />\r\n&nbsp; &nbsp;student.name = Faker::Name.name<br />\r\n&nbsp; &nbsp;student.department = [&quot;CS&quot;,&quot;IS&quot;,&quot;Civil&quot;].sample(1)<br />\r\n&nbsp; &nbsp;student.course = [&quot;Engg in computers&quot;,&quot;enggg in information&quot;,&quot;engg in Civil&quot;].sample(1)<br />\r\n&nbsp; &nbsp;student.year_of_joining = Faker::Date.backward(1)<br />\r\n&nbsp; &nbsp;students.push(student)<br />\r\nend</p>\r\n\r\n<p>puts &quot;List of students:&quot;<br />\r\nstudents.each do |student|<br />\r\n&nbsp; &nbsp;puts &quot;Roll number: #{student.roll_number}\\tName: #{student.name}\\tDepartment: #{student.department}\\tCourse: #{student.course}\\tYear of joing: #{student.year_of_joining}&quot;<br />\r\nend<br />\r\nputs &quot;Enter the year to list names of all students who joined on this year:&quot;<br />\r\nyear = gets.chomp<br />\r\nputs StudentManagement.list_by_year(year)<br />\r\nputs &quot;Enter the roll number to print data of student:&quot;<br />\r\nrollnum = gets.chomp<br />\r\nputs StudentManagement.data_by_rollnumber(rollnum)</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n	58	5	20	2017-05-26 18:21:57.16923	2017-05-26 18:21:57.16923	\N	\N	\N
609	<p>I&#39;ll be adding this program in comment section.</p>\r\n	60	5	20	2017-05-26 18:21:57.172262	2017-05-26 18:21:57.172262	\N	\N	\N
610	<p><strong>PERSON FILE</strong></p>\r\n\r\n<p>require &#39;faker&#39;<br />\r\n# require &#39;pry&#39;<br />\r\nclass Person<br />\r\n&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @first_name = Faker::Name.first_name<br />\r\n&nbsp; &nbsp; @last_name = Faker::Name.last_name<br />\r\n&nbsp; end</p>\r\n\r\n<p><br />\r\n&nbsp; def first_name<br />\r\n&nbsp; &nbsp; @first_name<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def last_name<br />\r\n&nbsp; &nbsp; @last_name<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; # binding.pry<br />\r\n&nbsp; def greet<br />\r\n&nbsp; &nbsp;puts &nbsp;&quot;Hello, #{first_name} #{last_name}&quot;<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p><strong>SCRIPT FILE</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>require &#39;./person&#39;<br />\r\n<br />\r\nputs &quot;Welcome to Greetings prompter!&quot;<br />\r\nperson = Person.new<br />\r\n<br />\r\nputs &quot;Greetings will begin in any second now!&quot;</strong></p>\r\n\r\n<p><strong>person.greet</strong><br />\r\n&nbsp;</p>\r\n	55	16	20	2017-05-26 18:26:25.95236	2017-05-26 18:26:25.95236	\N	\N	\N
611	<p><strong>CRICKETER FILE</strong></p>\r\n\r\n<p>require &#39;faker&#39;<br />\r\nrequire &#39;./test_match&#39;<br />\r\nclass Cricketer<br />\r\n&nbsp; attr_reader :name, :age, :matches_played, :runs<br />\r\n&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @name = Faker::Name.name<br />\r\n&nbsp; &nbsp; @age = Faker::Number.between(20, 40)<br />\r\n&nbsp; &nbsp; @test_matches = []<br />\r\n&nbsp; &nbsp; 10.times do<br />\r\n&nbsp; &nbsp; &nbsp; @test_matches.push(TestMatch.new)<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; @average_runs = @test_matches.map(&amp;:runs).reduce(0, :+) / @test_matches.count<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def name<br />\r\n&nbsp; &nbsp; @name<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def age<br />\r\n&nbsp; &nbsp; @age<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def matches_played<br />\r\n&nbsp; &nbsp; @test_matches.count<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def average_runs<br />\r\n&nbsp; &nbsp; @average_runs<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;#{@name} at the age of #{@age} has played #{matches_played} test matches and has scored at an average of #{@average_runs} runs per match.&quot;<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p><strong>ACADEMY FILE</strong></p>\r\n\r\n<p>require &#39;./cricketer&#39;<br />\r\nclass Academy<br />\r\n&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @cricketers = []<br />\r\n&nbsp; &nbsp; 10.times do<br />\r\n&nbsp; &nbsp; &nbsp; @cricketers.push(Cricketer.new)<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def cricketer_career<br />\r\n&nbsp; &nbsp; @cricketers.each do |cricketer|<br />\r\n&nbsp; &nbsp; &nbsp; puts cricketer.details<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def sort_by_runs<br />\r\n&nbsp; &nbsp; cricketers = @cricketers.sort_by {|c| c.average_runs }<br />\r\n&nbsp; &nbsp; puts &quot;Cricketers sorted by runs&quot;<br />\r\n&nbsp; &nbsp; cricketers.each do |cricketer|<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;#{cricketer.name} - #{cricketer.average_runs}&quot;<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end<br />\r\nend<br />\r\n<br />\r\n<br />\r\n<strong>TESTMATCH FILE</strong></p>\r\n\r\n<p>class TestMatch<br />\r\n&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @runs = (200..700).to_a.sample<br />\r\n&nbsp; end<br />\r\n&nbsp; def runs<br />\r\n&nbsp; &nbsp; @runs<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p><strong>SCRIPT FILE</strong></p>\r\n\r\n<p><strong>require &#39;./academy&#39;</strong></p>\r\n\r\n<p><strong>puts &#39;Welcome to DCT Cricket Club&#39;</strong></p>\r\n\r\n<p><strong>academy = Academy.new</strong></p>\r\n\r\n<p><strong>puts &quot;DCT Cricket Club has 10 Cricketers&quot;</strong></p>\r\n\r\n<p><strong>puts &#39;Here are their career details&#39;</strong></p>\r\n\r\n<p><strong>academy.cricketer_career</strong></p>\r\n\r\n<p><strong>puts &#39;And Here are the cricketers sorted by average runs scored&#39;</strong></p>\r\n\r\n<p><strong>academy.sort_by_runs</strong><br />\r\n&nbsp;</p>\r\n	56	16	20	2017-05-26 18:26:25.967989	2017-05-26 18:26:25.967989	\N	\N	\N
612	<p>require &#39;faker&#39;<br />\r\nclass Customer<br />\r\n&nbsp; attr_accessor :name, :account_number, :balance<br />\r\n&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @name = Faker::Name.name<br />\r\n&nbsp; &nbsp; @account_number = Faker::Number.number(7)<br />\r\n&nbsp; &nbsp; @balance = (10..10000).to_a.sample<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def name<br />\r\n&nbsp; &nbsp; @name<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def account_number<br />\r\n&nbsp; &nbsp; @account_number<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def balance<br />\r\n&nbsp; &nbsp; @balance<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; puts &quot;ACCOUNT NUMBER:#{account_number} CUSTOMER NAME:#{name} BALANCE IN RUPEES:#{balance}&quot;<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p>require &#39;pry&#39;<br />\r\nrequire &#39;./customer&#39;<br />\r\n# Bank Class<br />\r\nclass Bank<br />\r\n&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @customers = []<br />\r\n&nbsp; &nbsp; 200.times do<br />\r\n&nbsp; &nbsp; &nbsp; @customers.push(Customer.new)<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def customer_detail<br />\r\n&nbsp; &nbsp; @customers.each do |customer|<br />\r\n&nbsp; &nbsp; &nbsp; puts customer.details<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def low_balance<br />\r\n&nbsp; &nbsp; customers = @customers.select { |customer| customer.balance &lt;= 100 }<br />\r\n&nbsp; &nbsp; customers.each do |customer|<br />\r\n&nbsp; &nbsp; &nbsp; puts customer.details<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def transact(acc_num, amount, transaction_code)<br />\r\n&nbsp; &nbsp; customer = @customers.find { |c| c.account_number == acc_num }<br />\r\n&nbsp; &nbsp; return withdrawal(customer, amount) if transaction_code.zero?<br />\r\n&nbsp; &nbsp; return deposit(customer, amount) if transaction_code == 1<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; private</p>\r\n\r\n<p>&nbsp; def withdrawal(customer, amount)<br />\r\n&nbsp; &nbsp; if customer.balance &gt; amount<br />\r\n&nbsp; &nbsp; &nbsp; customer.balance = customer.balance - amount<br />\r\n&nbsp; &nbsp; &nbsp; &quot;Transaction Successful. Your account balance now is #{customer.balance}&quot;<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &quot;Insufficient Balance in your account. Your account balance &nbsp;is #{customer.balance}&quot;<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def deposit(customer, amount)<br />\r\n&nbsp; &nbsp; customer.balance = customer.balance + amount<br />\r\n&nbsp; &nbsp; &quot;Transaction Successful! Your account balance now is #{customer.balance}&quot;<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p>require &#39;./bank&#39;</p>\r\n\r\n<p>puts &#39;Welcome to DCT Overseas Bank&#39;<br />\r\nputs &#39;We have over 200 loyal customers&#39;<br />\r\nputs &#39;Glad to have you with us&#39;</p>\r\n\r\n<p>bank = Bank.new</p>\r\n\r\n<p>puts &#39;Here are the customer details&#39;<br />\r\nbank.customer_detail</p>\r\n\r\n<p>puts &#39;Customers with balance below 100&#39;<br />\r\nbank.low_balance</p>\r\n\r\n<p>puts &#39;Enter your account number&#39;<br />\r\naccount_number = gets.chomp</p>\r\n\r\n<p>puts &#39;What would you like to do? (Enter \\&#39;Withdraw\\&#39; to Withdraw money or \\&#39;Deposit\\&#39; to Deposit money)&#39;<br />\r\nstatus = gets.chomp.downcase</p>\r\n\r\n<p>case status<br />\r\nwhen &#39;deposit&#39;<br />\r\n&nbsp; transaction_code = 1<br />\r\n&nbsp; puts &#39;How much money would you like to deposit?&#39;<br />\r\nwhen &#39;withdraw&#39;<br />\r\n&nbsp; transaction_code = 0<br />\r\n&nbsp; puts &#39;How much money would you like to withdraw?&#39;<br />\r\nelse<br />\r\n&nbsp; puts &#39;Wrong action&#39;<br />\r\nend</p>\r\n\r\n<p>amount = gets.chomp.to_i</p>\r\n\r\n<p>puts account_number<br />\r\nputs amount<br />\r\nputs transaction_code</p>\r\n\r\n<p>bank.transact(account_number, amount, transaction_code)<br />\r\n&nbsp;</p>\r\n	57	16	20	2017-05-26 18:26:26.009282	2017-05-26 18:26:26.009282	\N	\N	\N
613	<p>require &#39;./bank&#39;</p>\r\n\r\n<p>puts &#39;Welcome to DCT Overseas Bank&#39;<br />\r\nputs &#39;We have over 200 loyal customers&#39;<br />\r\nputs &#39;Glad to have you with us&#39;</p>\r\n\r\n<p>bank = Bank.new</p>\r\n\r\n<p>puts &#39;Here are the customer details&#39;<br />\r\nbank.customer_detail</p>\r\n\r\n<p>puts &#39;Customers with balance below 100&#39;<br />\r\nbank.low_balance</p>\r\n\r\n<p>puts &#39;Enter your account number&#39;<br />\r\naccount_number = gets.chomp</p>\r\n\r\n<p>puts &#39;What would you like to do? (Enter \\&#39;Withdraw\\&#39; to Withdraw money or \\&#39;Deposit\\&#39; to Deposit money)&#39;<br />\r\nstatus = gets.chomp.downcase</p>\r\n\r\n<p>case status<br />\r\nwhen &#39;deposit&#39;<br />\r\n&nbsp; transaction_code = 1<br />\r\n&nbsp; puts &#39;How much money would you like to deposit?&#39;<br />\r\nwhen &#39;withdraw&#39;<br />\r\n&nbsp; transaction_code = 0<br />\r\n&nbsp; puts &#39;How much money would you like to withdraw?&#39;<br />\r\nelse<br />\r\n&nbsp; puts &#39;Wrong action&#39;<br />\r\nend</p>\r\n\r\n<p>amount = gets.chomp.to_i</p>\r\n\r\n<p>puts account_number<br />\r\nputs amount<br />\r\nputs transaction_code</p>\r\n\r\n<p>bank.transact(account_number, amount, transaction_code)<br />\r\n&nbsp;</p>\r\n	54	16	20	2017-05-26 18:26:26.018682	2017-05-26 18:26:26.018682	\N	\N	\N
614	<p>def Persistence(n)<br />\r\n&nbsp; product = 1<br />\r\n&nbsp; while(n != 0)<br />\r\n&nbsp; &nbsp; digit = n%10<br />\r\n&nbsp; &nbsp; product *= digit<br />\r\n&nbsp; &nbsp; n = n/10<br />\r\n&nbsp; &nbsp; # &nbsp;binding.pry<br />\r\n&nbsp; end<br />\r\n&nbsp; return product<br />\r\nend</p>\r\n\r\n<p><br />\r\ndef count_digit(n)<br />\r\n&nbsp; count = 0<br />\r\n&nbsp; while(n != 0)<br />\r\n&nbsp; &nbsp; digit = n%10<br />\r\n&nbsp; &nbsp; count += 1<br />\r\n&nbsp; &nbsp; n = n/10<br />\r\n&nbsp; end<br />\r\n&nbsp; return count<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter the number: &quot;<br />\r\nnumber = gets.to_i</p>\r\n\r\n<p>while(count_digit(number) &gt; 1)<br />\r\n&nbsp; number = Persistence(number)<br />\r\n&nbsp; puts(number)<br />\r\nend<br />\r\n&nbsp;</p>\r\n	59	16	20	2017-05-26 18:26:26.031076	2017-05-26 18:26:26.031076	\N	\N	\N
615	<p>require &#39;faker&#39;<br />\r\nclass Student<br />\r\n&nbsp; attr_reader :name, :year, :id, :course, :department<br />\r\n&nbsp; @@count = 0<br />\r\n&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @id = @@count += 1<br />\r\n&nbsp; &nbsp; @name = Faker::Name.name<br />\r\n&nbsp; &nbsp; @course = Faker::Educator.course<br />\r\n&nbsp; &nbsp; @department = Faker::Job.field<br />\r\n&nbsp; &nbsp; @year = Date.today.year - (1..10).to_a.shuffle.sample<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def name<br />\r\n&nbsp; &nbsp; @name<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;#{@name} with Roll Number #{@id} has enrolled for #{@course} in the #{@department} for the year #{@year}&quot;<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./student&#39;<br />\r\nrequire &#39;pry&#39;<br />\r\nclass School</p>\r\n\r\n<p>&nbsp; def initialize<br />\r\n&nbsp; &nbsp; @students = []<br />\r\n&nbsp; &nbsp; 100.times do<br />\r\n&nbsp; &nbsp; &nbsp; @students.push(Student.new)<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def student_by_year(year)<br />\r\n&nbsp; &nbsp; students = @students.select {|s| s if s.year == year.to_i}<br />\r\n&nbsp; &nbsp; students.map { |s| s.name &nbsp;}<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def student_details_by_id(id)<br />\r\n&nbsp; &nbsp; student = @students.find {|s| s if s.id == id.to_i}<br />\r\n&nbsp; &nbsp; student.details<br />\r\n&nbsp; end</p>\r\n\r\n<p>end<br />\r\n&nbsp;</p>\r\n\r\n<p>require &#39;./school&#39;</p>\r\n\r\n<p>school = School.new<br />\r\nputs &quot;Welcome to my school. We have 100 students&quot;<br />\r\nputs &quot;Enter Roll Number to check details&quot;<br />\r\nroll_number = gets.chomp<br />\r\ndetails = school.student_details_by_id(roll_number)<br />\r\nputs details<br />\r\nputs &quot;Enter the year to list the students of that year&quot;<br />\r\nyear = gets.chomp<br />\r\nstudents = school.student_by_year(year)<br />\r\nstudents.each do |student|<br />\r\n&nbsp; puts &quot;#{student} joined in #{year}&quot;<br />\r\nend<br />\r\n&nbsp;</p>\r\n	58	16	20	2017-05-26 18:26:26.035213	2017-05-26 18:26:26.035213	\N	\N	\N
616	<p>Didn&#39;t&nbsp;Start</p>\r\n	60	16	20	2017-05-26 18:26:26.054743	2017-05-26 18:26:26.054743	\N	\N	\N
617	orm stands for object relational mapping\r\nactive record is the orm available for rails\r\nit maps classes to tables object attributes to table columns and objects to rows	62	10	21	2017-05-29 06:31:31.78911	2017-05-29 06:31:31.78911	\N	\N	\N
618	1 every table will have primary key called as id\r\n2 foreign key will always being the associate model name_id  \r\n3 class name should be singular \r\n4 table name should be plural\r\n	63	10	21	2017-05-29 06:31:31.792227	2017-05-29 06:31:31.792227	\N	\N	\N
619	<p>ORM means object relational mapping</p>\r\n\r\n<p>ORM maps classes to table</p>\r\n\r\n<p>attributes to columns</p>\r\n\r\n<p>and object to rows.</p>\r\n	62	3	21	2017-05-29 06:34:42.784816	2017-05-29 06:34:42.784816	\N	\N	\N
620	<p>controllers are plural e.g categories</p>\r\n\r\n<p>Models are singular e.g Category</p>\r\n\r\n<p>every controller have its own view folder</p>\r\n\r\n<p>every action in controller have its own view file</p>\r\n\r\n<p>every table has one primary key called as ids.</p>\r\n\r\n<p>Foireign key is always associated to modelname_id</p>\r\n	63	3	21	2017-05-29 06:34:42.786639	2017-05-29 06:34:42.786639	\N	\N	\N
621	<p>ORM stands for &quot;Object Relational Mapping&quot;</p>\r\n\r\n<p>1 -&nbsp; It maps classes to tables</p>\r\n\r\n<p>2 - It maps object attributes to columns</p>\r\n\r\n<p>3 - It maps object to row</p>\r\n	62	12	21	2017-05-29 06:34:48.672889	2017-05-29 06:34:48.672889	\N	\N	\N
622	<p>1 - Every table must have primary key.</p>\r\n\r\n<p>2 - Classes or tables are always mapped using id.</p>\r\n\r\n<p>3 - Every column must have a unique column with a unique id.</p>\r\n\r\n<p>4- Foreign key will always be the associated model name_id.</p>\r\n\r\n<p>5- While naming a column, also specify data type.</p>\r\n	63	12	21	2017-05-29 06:34:48.674833	2017-05-29 06:34:48.674833	\N	\N	\N
623	ORM is nothing but object Relational model\r\n\r\nIt maps class to tables,\r\nobject attributes to table column,\r\nobjects to rows.	62	20	21	2017-05-29 06:38:34.672318	2017-05-29 06:38:34.672318	\N	\N	\N
624	1)controllers are plural\r\nex:categories_controller\r\n2)model are singular\r\nex:Category\r\n3)Every controller gets its own view folder\r\n4)Every action in controller will have its own view file\r\n5)Every model will have its own DB tabel,tabel name should be plural. Ex:categories\r\n6)Every table must have primary key and that should be auto_increment and which is an integer ,there should be only one primary key in a table.\r\n7)Foreign key associated with mode name_id, foreign key can be multiple in a table.	63	20	21	2017-05-29 06:38:34.674093	2017-05-29 06:38:34.674093	\N	\N	\N
625	ORM stands for Object relational mapping.\r\nUses:-\r\n1)ORM maps classes to tables\r\n2)ORM maps object attributes to table columns\r\n3)ORM maps Object to rows\r\n	62	16	21	2017-05-29 06:39:48.412346	2017-05-29 06:39:48.412346	\N	\N	\N
626	1) controllers are plural\r\n2)models are singular\r\n3) Every model will have its own database table\r\n4)Every controller gets its own view folder\r\n5)Every action in controller will have its own view file\r\n6) Every table has a primary key called as id which is an integer and is set to auto-increment\r\n7)Any changes to the schema of the database is done via the database only	63	16	21	2017-05-29 06:39:48.414815	2017-05-29 06:39:48.414815	\N	\N	\N
627	<p>ORM is Object Relational mapping .</p>\r\n\r\n<p>ORM maps classes to tables, &nbsp;object attributes , table to column and objects row&#39;s&nbsp;</p>\r\n	62	4	21	2017-05-29 06:40:33.661772	2017-05-29 06:40:33.661772	\N	\N	\N
680	<p>To add a column for the existing database then we will use migration</p>\r\n\r\n<p>In migration we have to give tablename , column name,column type</p>\r\n\r\n<p>we will create migratio file&nbsp; by using this command</p>\r\n\r\n<p>rails generate migration MigrationName</p>\r\n	69	10	23	2017-06-05 07:36:41.38837	2017-06-05 07:36:41.38837	\N	\N	\N
630	<p>Controllers are named in Plural</p>\r\n\r\n<p>Model name is singular</p>\r\n\r\n<p>Every Controller &nbsp;gets its own view file</p>\r\n\r\n<p>Every Model will have its own DB table and its plural</p>\r\n\r\n<p>Models are regular ruby classes which inherits from Active record Base</p>\r\n\r\n<p>Every table will have Integer Primary Key called as ID and it will be set to auto-increment</p>\r\n\r\n<p>Foreign Key will always be the associated ModelName_id (tableName) is singular_form_id Eg in SUb_categories table, the FK column name will be Category_id&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>The columns in a table(categories) will be the ATTRIBUTES(column names of the table) of the object for the class(Category) created for that table(categories)</p>\r\n\r\n<p>&nbsp;</p>\r\n	63	19	21	2017-05-29 06:40:43.908449	2017-05-29 06:40:43.908449	\N	\N	\N
631	ORM stands for Object Relational Mapping.\r\nORM is available for rails in the form of active records\r\nORM maps classes to tables, objects attributes to table columns and objects to rows.	62	17	21	2017-05-29 06:41:15.969147	2017-05-29 06:41:15.969147	\N	\N	\N
632	The conventions over configurations are\r\n \r\n1. Controller are pluar.\r\nexample: movies\r\n2. Model is singular\r\nexample: movie\r\n3. Every controller gets its own view folder\r\n4. Every action inside the controller gets its own view file\r\n5. Every model will have its own database table and the table name will be pluar.\r\n6. Every table will have primary key called as id which is an integer and set to auto increment\r\n7. Foreign key will always being the associated model name-id (associated table name will be in singular form-id)	63	17	21	2017-05-29 06:41:15.971753	2017-05-29 06:41:15.971753	\N	\N	\N
633	<p>Object Relational Mapping means the mapping of&nbsp;</p>\r\n\r\n<p>classes to tables</p>\r\n\r\n<p>attributes to&nbsp;column</p>\r\n\r\n<p>objects to rows.&nbsp;</p>\r\n	62	8	21	2017-05-29 06:41:16.985017	2017-05-29 06:41:16.985017	\N	\N	\N
634	<p>- Models are singular.</p>\r\n\r\n<p>- Controllers are plural</p>\r\n\r\n<p>- Every controller has their own view folder.</p>\r\n\r\n<p>- Every action inside controller has its own view file.&nbsp;</p>\r\n\r\n<p>- Every model will have its own table with a plural name.</p>\r\n\r\n<p>- Every table will have primary key with an id</p>\r\n\r\n<p>- Foreign key will have a model name id.&nbsp;</p>\r\n\r\n<p>- Columns in a table are the attributes of the object.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	63	8	21	2017-05-29 06:41:16.986714	2017-05-29 06:41:16.986714	\N	\N	\N
635	ORM stands for Object Relational Mapping. ORM maps the SQL queries for us. \r\nmaps classes to tables.\r\n	62	5	21	2017-05-29 06:42:11.925251	2017-05-29 06:42:11.925251	\N	\N	\N
636	1.Controllers are plural\r\n2.model is singular\r\n3.every model has its own database\r\n4.every model gets its own view folder\r\n5.classes names are mapped to the table names\r\n6.instance variables names are mapped to table columns\r\n7.class objects are mapped to table rows\r\n8.every table will have primary key called id which is an integer and set to an increment\r\n9.foreign key will always be the associated  model name_id \r\n	63	5	21	2017-05-29 06:42:11.926968	2017-05-29 06:42:11.926968	\N	\N	\N
637	<p>Object Relational Mapping</p>\r\n	62	2	21	2017-05-29 06:42:46.342252	2017-05-29 06:42:46.342252	\N	\N	\N
638	<p>1.Controllers are plural.</p>\r\n\r\n<p>2.Model is singular.</p>\r\n\r\n<p>3.Every controller gets its own view folder.</p>\r\n\r\n<p>4.Every action inside the controller gets its own view file.</p>\r\n\r\n<p>5.Every model will have its own database table, the table name will be plural.</p>\r\n\r\n<p>6.Every table will have primary key calle as id, which is an integer and set to auto increment.</p>\r\n\r\n<p>7.Foreign key will always be the associated model name_id.(model name is singular)</p>\r\n\r\n<p>8.The columns in a table will be the attributes of the object.</p>\r\n\r\n<p>&nbsp;</p>\r\n	63	2	21	2017-05-29 06:42:46.34459	2017-05-29 06:42:46.34459	\N	\N	\N
639	Object Relational mapping is the technique in which we can map the object class to tables in the database and instance attributes to rows in the table.It acts as a layer between Application programming and the Database. It is helpful to interact with the Database without manually/directly calling the database.Active Record Base is the library that provides ORM in Ruby on rails.\r\nActiveRecord is the M in MVC.Using ORM we can map models in the applications to the tables in the database, We can store and retrieve date from Database with out Directly providing the SQL queried.\r\n\r\nORM allows to do things like Category.All\r\n\r\nOther ORM examples are Hibernate	62	9	21	2017-05-29 10:59:26.718406	2017-05-29 10:59:26.718406	\N	\N	\N
640	In Ruby on Rails if we follow conventions over configuration the code we need to write can be reduced.\r\n\r\nWe need to take the below considerations while creating the applciation\r\n\r\n1. Naming conventions of Models/Class and tables/schemas . Model naming convention is   always Singular whereas the table name is plural example Model name Category and table name categories.\r\n2.In the table, we have a primary key column by named id of type integer already created and also have two additional columns created_at and updated_at \r\n3. Models are created out of(Inherited from ActiveRecord::Base)\r\n4. Reading and Writing Data, we have four  operations on data CRUD (create , Read, Update and Delete)\r\n5. Rails also provide a way to manage the Database table schema. It provides a Database Migration file which can be used to modify the column details though \r\nrails db:migrate and to roll it back, rails db:rollback.	63	9	21	2017-05-29 10:59:26.721444	2017-05-29 10:59:26.721444	\N	\N	\N
641	<p>DCT07ac.rb</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;pry&#39;<br />\r\nclass Person<br />\r\n&nbsp; attr_accessor :first_name, :last_name</p>\r\n\r\n<p>&nbsp; #binding.pry<br />\r\n&nbsp; @@person = []<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @first_name = data[&quot;first_name&quot;]<br />\r\n&nbsp; &nbsp; @last_name = data[&quot;last_name&quot;]<br />\r\n&nbsp; &nbsp; @@person.push(self)<br />\r\n&nbsp; end<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; def self.all<br />\r\n&nbsp; &nbsp; @@person<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; #binding.pry<br />\r\n&nbsp; def details<br />\r\n&nbsp; &nbsp; puts &quot;Welcome, #{self.first_name} #{self.last_name}.&quot;<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p>person.rb</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./DCT07ac&#39;<br />\r\nrequire &#39;faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>data = {<br />\r\n&nbsp; &quot;first_name&quot; =&gt; Faker::Name.first_name,<br />\r\n&nbsp; &quot;last_name&quot; =&gt; Faker::Name.last_name<br />\r\n}<br />\r\n#binding.pry</p>\r\n\r\n<p>p1 = Person.new(data)<br />\r\nputs p1.details<br />\r\n&nbsp;</p>\r\n	55	12	20	2017-05-30 17:54:37.131249	2017-05-30 17:54:37.131249	\N	\N	\N
650	require 'faker'\r\nclass Bank\r\n  attr_accessor :name, :account_number, :balance\r\n  @@bankers = []\r\n\r\n  def initialize(data)\r\n    @name = data["name"]\r\n    @account_number = data["account_number"]\r\n    @balance = data["balance"]\r\n    @@bankers.push(self)\r\n  end\r\n  def self.all\r\n    @@bankers\r\n  end\r\n  def details\r\n    "#{self.name} - #{self.account_number} - #{self.balance}"\r\n  end\r\n  def self.balance_details\r\n    @@bankers.find_all{|banker| banker.balance<100}\r\n  end\r\n  def self.deposit_details(account_number,amount,option)\r\n    result = @@bankers.find{|a|a.account_number == account_number}\r\n    if result == nil\r\n      puts "Invalid account details"\r\n    else\r\n      case option\r\n      when 1\r\n        result.balance = result.balance + amount\r\n        puts "Amount deposited in account #{result.balance}"\r\n\r\n      when 0\r\n        if (result.balance < amount || result.balance <= 100)\r\n          puts "balance is running low"\r\n        else\r\n          result.balance = result.balance - amount\r\n          puts "Amount withdrawn INR#{result.balance}"\r\n        end\r\n      else\r\n        puts "enter valid option"\r\n      end\r\n    end\r\n  end\r\nend\r\n100.times  do\r\n  data={\r\n    "name" => Faker::Name.name,\r\n    "account_number" => Faker::Bank.iban,\r\n    "balance" => Faker::Number.between(10,1000)\r\n  }\r\n  Bank.new(data)\r\nend\r\nputs "bank details"\r\nBank.all.each do |banker|\r\n  puts banker.details\r\nend\r\nputs "\\nAccount details below 100:"\r\nBank.balance_details.each do |bal|\r\n  puts "Account_number:#{bal.account_number}\\tName:#{bal.name}\\tBalance:INR#{bal.balance}"\r\nend\r\n\r\nputs "\\nEnter the Acc No, Amount, code (1 for deposit, 0 for withdrawal):"\r\naccount_number = gets.chomp\r\namount = gets.to_i\r\ncode = gets.to_i\r\nBank.deposit_details(account_number,amount,code)\r\nrequire 'faker'\r\nclass Bank\r\n  attr_accessor :name, :account_number, :balance\r\n  @@bankers = []\r\n\r\n  def initialize(data)\r\n    @name = data["name"]\r\n    @account_number = data["account_number"]\r\n    @balance = data["balance"]\r\n    @@bankers.push(self)\r\n  end\r\n  def self.all\r\n    @@bankers\r\n  end\r\n  def details\r\n    "#{self.name} - #{self.account_number} - #{self.balance}"\r\n  end\r\n  def self.balance_details\r\n    @@bankers.find_all{|banker| banker.balance<100}\r\n  end\r\n  def self.deposit_details(account_number,amount,option)\r\n    result = @@bankers.find{|a|a.account_number == account_number}\r\n    if result == nil\r\n      puts "Invalid account details"\r\n    else\r\n      case option\r\n      when 1\r\n        result.balance = result.balance + amount\r\n        puts "Amount deposited in account #{result.balance}"\r\n\r\n      when 0\r\n        if (result.balance < amount || result.balance <= 100)\r\n          puts "balance is running low"\r\n        else\r\n          result.balance = result.balance - amount\r\n          puts "Amount withdrawn INR#{result.balance}"\r\n        end\r\n      else\r\n        puts "enter valid option"\r\n      end\r\n    end\r\n  end\r\nend\r\n100.times  do\r\n  data={\r\n    "name" => Faker::Name.name,\r\n    "account_number" => Faker::Bank.iban,\r\n    "balance" => Faker::Number.between(10,1000)\r\n  }\r\n  Bank.new(data)\r\nend\r\nputs "bank details"\r\nBank.all.each do |banker|\r\n  puts banker.details\r\nend\r\nputs "\\nAccount details below 100:"\r\nBank.balance_details.each do |bal|\r\n  puts "Account_number:#{bal.account_number}\\tName:#{bal.name}\\tBalance:INR#{bal.balance}"\r\nend\r\n\r\nputs "\\nEnter the Acc No, Amount, code (1 for deposit, 0 for withdrawal):"\r\naccount_number = gets.chomp\r\namount = gets.to_i\r\ncode = gets.to_i\r\nBank.deposit_details(account_number,amount,code)\r\n	57	10	20	2017-05-30 18:18:33.291235	2017-05-30 18:18:33.291235	\N	\N	\N
681	<p>orm stands for object relational mapping</p>\r\n\r\n<p>it maps to datebase tables</p>\r\n\r\n<p>it deals with database operations</p>\r\n\r\n<p>it maps attributes to table clumns</p>\r\n\r\n<p>it maps tables to classes</p>\r\n\r\n<p>it maps rows to objects</p>\r\n\r\n<p>&nbsp;</p>\r\n	62	10	23	2017-06-05 07:36:41.390183	2017-06-05 07:36:41.390183	\N	\N	\N
642	<p>cricket_app.rb</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./player&#39;<br />\r\nrequire &#39;Faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>3.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;age&quot; =&gt; Faker::Number.between(18, 28),<br />\r\n&nbsp; &nbsp; &quot;num_test_matches&quot; =&gt; &nbsp;Faker::Number.between(1, 5),<br />\r\n&nbsp; &nbsp; &quot;avg_runs&quot; =&gt; Faker::Number.between(10, 50)<br />\r\n&nbsp; }</p>\r\n\r\n<p>&nbsp; p1 = Player.new(data)<br />\r\n&nbsp; puts p1.details</p>\r\n\r\n<p>end</p>\r\n\r\n<p>Player.somemethodxyz<br />\r\n&nbsp;</p>\r\n\r\n<p>player.rb</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;pry&#39;<br />\r\nclass Player<br />\r\n&nbsp; attr_accessor :name, :age, :num_test_matches, :avg_runs<br />\r\n&nbsp; @@player = []<br />\r\n&nbsp; @@player2 = {}</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @age = data[&quot;age&quot;]<br />\r\n&nbsp; &nbsp; @num_test_matches = data[&quot;num_test_matches&quot;]<br />\r\n&nbsp; &nbsp; @avg_runs = data[&quot;avg_runs&quot;]<br />\r\n&nbsp; &nbsp; @@player.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; puts &quot;#{self.name} AVG: #{avg_runs}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.somemethodxyz</p>\r\n\r\n<p>&nbsp; &nbsp; @@player.each do |player|</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; @@player2[player.name] = player.avg_runs</p>\r\n\r\n<p>&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; &nbsp; players2 = @@player2.values<br />\r\n&nbsp; &nbsp; players2_sorted = players2.sort</p>\r\n\r\n<p>&nbsp; &nbsp; i =0<br />\r\n&nbsp; &nbsp; while ( i &lt; players2_sorted.length)<br />\r\n&nbsp; &nbsp; &nbsp; puts @@player2.key(players2_sorted[i]) =&gt; players2_sorted[i]<br />\r\n&nbsp; &nbsp; &nbsp; i += 1<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n	56	12	20	2017-05-30 17:54:37.134683	2017-05-30 17:54:37.134683	\N	\N	\N
643	<p>customer.rb</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;pry&#39;<br />\r\nclass Customer<br />\r\n&nbsp; attr_accessor :ac_no, :name, :balance</p>\r\n\r\n<p>&nbsp; @@customer = []</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @ac_no = data[&quot;ac_no&quot;]<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @balance = data[&quot;balance&quot;]<br />\r\n&nbsp; &nbsp; @@customer.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.low_balance(low_bal_var)<br />\r\n&nbsp; &nbsp; low_balance_customer = @@customer.find_all {|customer| customer.balance &lt; low_bal_var}<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.validate_accnum(acc_num)</p>\r\n\r\n<p>&nbsp; &nbsp; var_cust_num = @@customer.find {|customer| customer.ac_no == acc_num }</p>\r\n\r\n<p>&nbsp; &nbsp; if var_cust_num.nil?<br />\r\n&nbsp; &nbsp; &nbsp; return nil<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; return var_cust_num.balance<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p><br />\r\n&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;***#{self.ac_no}*** belongs to #{self.name} and has a balance amount of INR: #{self.balance} &quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>end<br />\r\n&nbsp;</p>\r\n\r\n<p>customer_app.rb</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>require &#39;./customer&#39;<br />\r\nrequire &#39;faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>def low_balance_customers(low_bal_var)</p>\r\n\r\n<p>&nbsp; Customer.low_balance(low_bal_var).each do |low_balance|<br />\r\n&nbsp; &nbsp; puts &quot;Customers with a low balance are: #{low_balance.name} *** A/c no - #{low_balance.ac_no} *** #{low_balance.balance}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>2.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;ac_no&quot; =&gt; Faker::Bank.swift_bic,<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;balance&quot; =&gt; Faker::Number.between(1, 1000)<br />\r\n&nbsp; }<br />\r\n&nbsp; c1 = Customer.new(data)<br />\r\n&nbsp; puts c1.details<br />\r\nend</p>\r\n\r\n<p><br />\r\nputs &quot;Enter the balance below which you need the Customers list&quot;<br />\r\nlow_bal_var = gets.to_i</p>\r\n\r\n<p>low_balance_customers(low_bal_var)</p>\r\n\r\n<p><br />\r\nputs &quot;Enter your Customer number&quot;<br />\r\nacc_num = gets.chomp</p>\r\n\r\n<p>validated_customer_with_ac_balance = Customer.validate_accnum(acc_num)</p>\r\n\r\n<p>if validated_customer_with_ac_balance == nil</p>\r\n\r\n<p>&nbsp; puts &quot;Sorry user does not exist&quot;</p>\r\n\r\n<p>else<br />\r\n&nbsp; puts &quot;#{acc_num} your current balance is : &nbsp;#{validated_customer_with_ac_balance}&quot;</p>\r\n\r\n<p>&nbsp; puts &quot; 0 for withdrawl and 1 for Deposit&quot;<br />\r\n&nbsp; option = gets.to_i</p>\r\n\r\n<p>&nbsp; if ( option == 0)</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter withdrawl amount&quot;<br />\r\n&nbsp; &nbsp; withdraw_amnt = gets.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; if (validated_customer_with_ac_balance - withdraw_amnt &lt; 0)<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;The balance is insufficient for the specified withdrawal&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; else</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; updated_balance = validated_customer_with_ac_balance - withdraw_amnt</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; puts &quot; After withdrawal, your new balance is #{updated_balance}&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; elsif (option == 1)</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot;Enter Deposit amount&quot;<br />\r\n&nbsp; &nbsp; deposit_amnt = gets.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; updated_balance = validated_customer_with_ac_balance + deposit_amnt</p>\r\n\r\n<p>&nbsp; &nbsp; puts &quot; After Deposit, your new balance is #{updated_balance}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p><br />\r\nend<br />\r\n&nbsp;</p>\r\n	57	12	20	2017-05-30 17:54:37.138494	2017-05-30 17:54:37.138494	\N	\N	\N
644	<p>=begin<br />\r\nCreate a program that generates a secure password. Prompt the user for the minimum length<br />\r\nthe number of special characters, and the number of numbers. Then generate a password for the user using those inputs. Provide multiple options for the user to choose.<br />\r\n=end</p>\r\n\r\n<p>puts &quot;Enter length of the password&quot;<br />\r\npassword = gets.to_i<br />\r\nputs &quot;Enter the number of special character in password&quot;<br />\r\nspecial_char = gets.to_i<br />\r\nputs &quot;Enter number of numbers&quot;<br />\r\nnum_count = gets.to_i</p>\r\n\r\n<p>array_of_special_char = (&#39;!&#39;..&#39;?&#39;).to_a</p>\r\n\r\n<p><br />\r\narray_of_char1 = (&#39;a&#39;..&#39;z&#39;).to_a<br />\r\narray_of_char2 = (&#39;A&#39;..&#39;Z&#39;).to_a</p>\r\n\r\n<p><br />\r\nconfirm_password = array_of_special_char.sample(password) + array_of_char1.sample(special_char) + array_of_char2.sample(num_count)<br />\r\nputs confirm_password.shuffle.join(&quot;&quot;)<br />\r\n&nbsp;</p>\r\n	54	12	20	2017-05-30 17:54:37.141082	2017-05-30 17:54:37.141082	\N	\N	\N
645	<p>puts &quot;Enter a num to bug&quot;<br />\r\nnumber = gets.chomp<br />\r\nnumber = number.split(&quot;&quot;)</p>\r\n\r\n<p><br />\r\nnum = []<br />\r\ni=0<br />\r\nnumber.each do |number|<br />\r\n&nbsp; num = num.push(number)<br />\r\nend<br />\r\nputs num<br />\r\n&nbsp;</p>\r\n\r\n<p>confused !!!!&nbsp;</p>\r\n	59	12	20	2017-05-30 17:54:37.143392	2017-05-30 17:54:37.143392	\N	\N	\N
646	<p>dep_info.rb</p>\r\n\r\n<p>class Department<br />\r\n&nbsp; attr_accessor :department, :course, :dept_id</p>\r\n\r\n<p>&nbsp; @@department = []</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @dept_id = Random.rand(1..5)<br />\r\n&nbsp; &nbsp; @department = data[&quot;department&quot;]<br />\r\n&nbsp; &nbsp; @course = data[&quot;course&quot;]<br />\r\n&nbsp; &nbsp; @@department.push(self)<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.all<br />\r\n&nbsp; &nbsp; @@department<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;#{self.dept_id} - #{self.department} - #{self.course}&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>end<br />\r\n&nbsp;</p>\r\n\r\n<p>student.rb</p>\r\n\r\n<p>require &#39;./student_info&#39;<br />\r\nrequire &#39;./dept_info&#39;<br />\r\nrequire &#39;faker&#39;<br />\r\nrequire &#39;pry&#39;</p>\r\n\r\n<p>3.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;department&quot; =&gt; Faker::Job.field,<br />\r\n&nbsp; &nbsp; &quot;course&quot; =&gt; Faker::Educator.course<br />\r\n&nbsp; }<br />\r\n&nbsp; d1 = Department.new(data)<br />\r\n&nbsp; puts d1.inspect</p>\r\n\r\n<p>&nbsp; #binding.pry<br />\r\nend</p>\r\n\r\n<p>5.times do<br />\r\n&nbsp; data = {<br />\r\n&nbsp; &nbsp; &quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp; &nbsp; &quot;roll_number&quot; =&gt; Faker::Number.number(3),<br />\r\n&nbsp; &nbsp; &quot;year_of_joining&quot; =&gt; Faker::Date.between(Date.parse(&quot;2015-05-15&quot;), Date.today)<br />\r\n&nbsp; }<br />\r\n&nbsp; s1 = Student.new(data)<br />\r\n&nbsp; puts s1.inspect<br />\r\n&nbsp; #binding.pry<br />\r\nend</p>\r\n\r\n<p>def list_students</p>\r\n\r\n<p>&nbsp; puts &quot;*&quot; * 50<br />\r\n&nbsp; puts &quot;\\t Listing students&quot;<br />\r\n&nbsp; puts &quot;*&quot; * 50<br />\r\n&nbsp; Student.all.each do |student|</p>\r\n\r\n<p>&nbsp; &nbsp; puts student.details<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>def display_student<br />\r\n&nbsp; puts &quot;Find by \\n1. Roll Number\\n2. Year of joining&quot;<br />\r\n&nbsp; option = gets.to_i<br />\r\n&nbsp; #student = nil<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; case option<br />\r\n&nbsp; when 1<br />\r\n&nbsp; &nbsp; puts &quot;Enter the roll_number&quot;<br />\r\n&nbsp; &nbsp; roll_number = gets.to_i<br />\r\n&nbsp; &nbsp; student = Student.find({&quot;roll_number&quot; =&gt; roll_number})<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; when 2<br />\r\n&nbsp; &nbsp; puts &quot;Enter the joining year&quot;<br />\r\n&nbsp; &nbsp; year_of_joining = gets.chomp<br />\r\n&nbsp; &nbsp; student = Student.find({&quot;year_of_joining&quot; =&gt; year_of_joining})<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end<br />\r\n&nbsp; if student.nil?<br />\r\n&nbsp; &nbsp; puts &quot;student not found&quot;<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; puts student.details<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts &quot;select Option: \\n1. List student details&quot;<br />\r\nputs &quot;2. Find Student&quot;<br />\r\noption = gets.to_i<br />\r\ncase option<br />\r\nwhen 1<br />\r\n&nbsp; list_students<br />\r\nwhen 2<br />\r\n&nbsp; display_student<br />\r\nelse<br />\r\n&nbsp; puts &quot;Invalid input&quot;<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p>student_info.rb</p>\r\n\r\n<p>class Student<br />\r\n&nbsp; attr_accessor :roll_number, :name, :year_of_joining</p>\r\n\r\n<p>&nbsp; @@student = []<br />\r\n&nbsp; @@count = 0</p>\r\n\r\n<p>&nbsp; def initialize(data)<br />\r\n&nbsp; &nbsp; @roll_number = @@count + 1<br />\r\n&nbsp; &nbsp; @name = data[&quot;name&quot;]<br />\r\n&nbsp; &nbsp; @year_of_joining = data[&quot;year_of_joining&quot;]<br />\r\n&nbsp; &nbsp; @@count += 1<br />\r\n&nbsp; &nbsp; @@student.push(self)<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.all<br />\r\n&nbsp; &nbsp; @@student<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def self.find(args)<br />\r\n&nbsp; &nbsp; if args[&quot;roll_number&quot;]<br />\r\n&nbsp; &nbsp; &nbsp; return @@student.find{|student| student.roll_number == args[&quot;roll_number&quot;]}<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; elsif args[&quot;year_of_joining&quot;]<br />\r\n&nbsp; &nbsp; &nbsp; return @@student.find{|student| student.year_of_joining == args[&quot;year_of_joining&quot;]}<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def details<br />\r\n&nbsp; &nbsp; &quot;#{self.roll_number} - #{self.name} - #{self.year_of_joining}&quot;<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n	58	12	20	2017-05-30 17:54:37.146538	2017-05-30 17:54:37.146538	\N	\N	\N
647	<p>i didn&#39;t try sir.</p>\r\n	60	12	20	2017-05-30 17:54:37.14908	2017-05-30 17:54:37.14908	\N	\N	\N
648	class Person\r\n  attr_accessor :first_name, :last_name\r\n  def initialize(data)\r\n    @first_name = data["first_name"]\r\n    @last_name = data["last_name"]\r\n  end\r\n  def details\r\n    "hello  #{self.first_name} #{self.last_name}!"\r\n  end\r\nend\r\n\r\ndata = {\r\n  "first_name" => gets.chomp,\r\n  "last_name" => gets.chomp\r\n}\r\np1 = Person.new(data)\r\nputs p1.details\r\n	55	10	20	2017-05-30 18:18:33.281945	2017-05-30 18:18:33.281945	\N	\N	\N
649	require 'faker'\r\nclass Cricketer\r\n  attr_accessor :name, :age, :test_matches, :average_runs\r\n  @@cricketers = []\r\n  def initialize(data)\r\n    @name = data["name"]\r\n    @age = data["age"]\r\n    @test_matches = data["test_matches"]\r\n    @average_runs = data["average_runs"]\r\n    @@cricketers.push(self)\r\n  end\r\n  def self.all\r\n    @@cricketers\r\n  end\r\n  def self.average\r\n    @@cricketers.sort!{|a,b| a.average_runs<=>b.average_runs}\r\n  end\r\n  def details\r\n    "#{self.name} - #{self.age} - #{self.test_matches} - #{average_runs}"\r\n  end\r\nend\r\n10.times do\r\n  data={\r\n    "name" => Faker::Name.name,\r\n    "age" => Faker::Number.between(25,45),\r\n    "test_matches" => Faker::Number.between(2,20),\r\n    "average_runs" => Faker::Number.between(50,200)\r\n  }\r\n  Cricketer.new(data)\r\nend\r\nputs "cricketers data"\r\nCricketer.all.each do |cricket|\r\n  puts cricket.details\r\nend\r\nputs "*" * 50\r\nCricketer.average\r\nCricketer.all.each do |cricket|\r\n  puts cricket.details\r\nend\r\n	56	10	20	2017-05-30 18:18:33.288856	2017-05-30 18:18:33.288856	\N	\N	\N
677	<ol>\r\n\t<li>has_many</li>\r\n\t<li>has_one</li>\r\n\t<li>belongs_to</li>\r\n\t<li>has_many through</li>\r\n</ol>\r\n	70	10	23	2017-06-05 07:36:41.382838	2017-06-05 07:36:41.382838	\N	\N	\N
682	<p>if we write anything in migration file then to save that we are using rake db:migrate</p>\r\n\r\n<p>after performing that command changes will be saved for that particular migration</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	64	10	23	2017-06-05 07:36:41.391948	2017-06-05 07:36:41.391948	\N	\N	\N
651	class Password\r\n  SPECIAL_CHARS = ['\\\\', '[', ']', '^', '_', '`'].freeze\r\n  def initialize(min_length, no_of_spec_chars, no_of_numbers)\r\n    @min_length = min_length\r\n    @no_of_spec_chars = no_of_spec_chars\r\n    @no_of_numbers = no_of_numbers\r\n  end\r\n\r\n  def generate\r\n    password = generate_special_characters + generate_numbers\r\n    password = password + generate_characters(@min_length - password.length) if password.length < @min_length\r\n    password.split('').shuffle.join('')\r\n  end\r\n\r\n  private\r\n\r\n  def generate_characters(count)\r\n    word = ''\r\n    count.times do\r\n      word = word + (('A'..'z').to_a - SPECIAL_CHARS).sample\r\n    end\r\n    word\r\n  end\r\n\r\n  def generate_special_characters\r\n    word = ''\r\n    @no_of_spec_chars.times do\r\n      word = word + (('!'..'?').to_a - (0..9).to_a + SPECIAL_CHARS - ['\\\\']).sample\r\n    end\r\n    word\r\n  end\r\n\r\n  def generate_numbers\r\n    number = ''\r\n    @no_of_numbers.times do\r\n      number = number + (0..9).to_a.sample.to_s\r\n    end\r\n    number\r\n  end\r\n\r\nend\r\n\r\n\r\n\r\nINPUT FILE\r\n\r\nrequire './password'\r\n\r\nputs "enter the minimum length for the password: "\r\nmin_length = gets.to_i\r\n\r\nputs "enter the special characters: "\r\nno_of_spec_chars = gets.to_i\r\n\r\nwhile no_of_spec_chars > min_length do\r\n  puts "Number cannot be greater than the Minimum Length (#{min_length}). Enter the special characters again: "\r\n  no_of_spec_chars = gets.to_i\r\nend\r\n\r\nputs "enter the total number of integers for the password"\r\nno_of_numbers = gets.to_i\r\n\r\nwhile no_of_numbers > min_length do\r\n  puts "Number cannot be greater than the Minimum Length (#{min_length}).\r\n  Enter the total number of integers for the password again: "\r\n  no_of_numbers = gets.to_i\r\nend\r\n\r\npassword = Password.new(min_length.to_i, no_of_spec_chars.to_i, no_of_numbers.to_i).generate\r\n\r\nputs "Here is your new password: #{password.split('').shuffle.join('')}"\r\n\r\n\r\n	54	10	20	2017-05-30 18:18:33.293367	2017-05-30 18:18:33.293367	\N	\N	\N
652	puts "Enter persistent Number"\r\nnum = gets.to_i\r\n#puts num.class #string\r\n\r\nwhile(1)\r\n  numbers = num.to_s.split('')\r\n\r\n  numbers = numbers.map!{|n| n.to_i}\r\n  numbers = numbers.inject(:*)\r\n  num = numbers.to_s\r\n  if num.length > 1\r\n\r\n    next\r\n  else\r\n    puts num\r\n    break\r\n  end\r\nend\r\n\r\n\r\nsir this program iam not getting error not getting output also	59	10	20	2017-05-30 18:18:33.295316	2017-05-30 18:18:33.295316	\N	\N	\N
653	require 'faker'\r\nclass Student\r\n  attr_accessor :name, :id , :department, :course, :joining_year\r\n  @@students = []\r\n  def initialize(data)\r\n    @name = data["name"]\r\n    @id = data["id"]\r\n    @department = data["department"]\r\n    @course = data["course"]\r\n    @joining_year = data["joining_year"]\r\n    @@students.push(self)\r\n  end\r\n  def self.all\r\n    @@students\r\n  end\r\n  def self.find(args)\r\n    if args["joining_year"]\r\n      return @@students.find{|student| student.joining_year == args["id"]}\r\n    elsif args["id"]\r\n      return @@students.find{|student| student.id == args["id"]}\r\n    end\r\n  end\r\n  def details\r\n    "#{self.name} - #{self.id} - #{self.department} - #{self.course} - #{self.joining_year}"\r\n  end\r\nend\r\n10.times do\r\n  data= {\r\n    "name" => Faker::Name.name,\r\n    "id" => Faker::Number.number(2),\r\n    "department" => Faker::Job.field,\r\n    "course" => Faker::Educator.course,\r\n    "joining_year" => Faker::Number.between(2000,2017)\r\n  }\r\n  Student.new(data)\r\nend\r\nputs "student details"\r\nStudent.all.each do |student|\r\n  puts student.details\r\nend\r\ndef student_details\r\n  puts " find by \\n1. joining_year\\n2. id"\r\n  option = gets.to_i\r\n  student = nil\r\n  case option\r\n  when 1\r\n    puts "enter the joining year"\r\n    joining_year = gets.to_i\r\n    student = Student.find({"joining_year" => joining_year})\r\n  when 2\r\n    puts "enter the id"\r\n    name = gets.to_i\r\n    student = Student.find({"id" => id})\r\n  else\r\n    puts "invalid option"\r\n  end\r\n\r\n  if student.nil?\r\n    puts "student not found"\r\n  else\r\n    puts student.details\r\n  end\r\n\r\nend\r\ncont = 'y'\r\nwhile cont == 'y'\r\n  puts "select option : \\n1.based on joining year"\r\n  puts "2. based on id"\r\n  puts "select your option"\r\n  option = gets.to_i\r\n  case option\r\n  when 1\r\n    student_details\r\n  when 2\r\n    student_details\r\n  else\r\n    puts "invalid input"\r\n  end\r\n  puts "do you wish to continue (y/n)"\r\n  cont = gets.chomp\r\nend\r\n\r\n\r\n\r\nsir iam getting output for this program but not the exact ouput	58	10	20	2017-05-30 18:18:33.297413	2017-05-30 18:18:33.297413	\N	\N	\N
654	still working on this program	60	10	20	2017-05-30 18:18:33.299857	2017-05-30 18:18:33.299857	\N	\N	\N
655	<p>i missed the class , i&#39;ll go through video and update</p>\r\n	70	2	23	2017-06-05 07:22:40.948702	2017-06-05 07:22:40.948702	\N	\N	\N
656	<p>i missed the class , i&#39;ll go through video and update</p>\r\n	71	2	23	2017-06-05 07:22:40.953603	2017-06-05 07:22:40.953603	\N	\N	\N
657	<p>i missed the class , i&#39;ll go through video and update</p>\r\n	72	2	23	2017-06-05 07:22:40.955274	2017-06-05 07:22:40.955274	\N	\N	\N
658	<p>1. Add column to existing table</p>\r\n\r\n<p>2.Remove column from existing class</p>\r\n\r\n<p>3.Rename the column name</p>\r\n\r\n<p>4.Make changes to type of column</p>\r\n\r\n<p>5.Drop a table</p>\r\n	69	2	23	2017-06-05 07:22:40.95696	2017-06-05 07:22:40.95696	\N	\N	\N
659	<p>Object Relational mapping</p>\r\n	62	2	23	2017-06-05 07:22:40.958783	2017-06-05 07:22:40.958783	\N	\N	\N
660	<p>Runs migration which haven&#39;t been run yet</p>\r\n	64	2	23	2017-06-05 07:22:40.960626	2017-06-05 07:22:40.960626	\N	\N	\N
661	<p>GET- to fetch record</p>\r\n\r\n<p>PUT-to input the record</p>\r\n	65	2	23	2017-06-05 07:22:40.962077	2017-06-05 07:22:40.962077	\N	\N	\N
662	<p>Handles decision &amp; co-oridinates commads between Views &amp; Models</p>\r\n	73	2	23	2017-06-05 07:22:40.963727	2017-06-05 07:22:40.963727	\N	\N	\N
663	<p>render passes command to perform an operation</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>redirect is used to redirect to particular path</p>\r\n	74	2	23	2017-06-05 07:22:40.965231	2017-06-05 07:22:40.965231	\N	\N	\N
664	<p>Index</p>\r\n\r\n<p>New</p>\r\n\r\n<p>Create</p>\r\n\r\n<p>Show</p>\r\n\r\n<p>Edit</p>\r\n\r\n<p>Update</p>\r\n\r\n<p>Destroy</p>\r\n	66	2	23	2017-06-05 07:22:40.966934	2017-06-05 07:22:40.966934	\N	\N	\N
665	<p>POST &nbsp;- Create data</p>\r\n\r\n<p>GET - Read data</p>\r\n\r\n<p>PUT&nbsp;- Update data</p>\r\n\r\n<p>DELETE&nbsp;- Destroy/remove data</p>\r\n	67	2	23	2017-06-05 07:22:40.968562	2017-06-05 07:22:40.968562	\N	\N	\N
666	<ol>\r\n\t<li>has_many</li>\r\n\t<li>belongs_to</li>\r\n\t<li>has_one</li>\r\n\t<li>has_many through</li>\r\n</ol>\r\n	70	4	23	2017-06-05 07:33:04.853609	2017-06-05 07:33:04.853609	\N	\N	\N
667	<p># i wll go home an submit this sir</p>\r\n	71	4	23	2017-06-05 07:33:04.855388	2017-06-05 07:33:04.855388	\N	\N	\N
668	<p># i wll go home an submit this sir</p>\r\n	72	4	23	2017-06-05 07:33:04.857357	2017-06-05 07:33:04.857357	\N	\N	\N
669	<ol>\r\n\t<li>make changes to the scheme &nbsp;of the &nbsp;database&nbsp;</li>\r\n\t<li>removing columns from existing column</li>\r\n\t<li>renaming the column name</li>\r\n\t<li>making&nbsp;changers to the &nbsp;column&nbsp;</li>\r\n\t<li>droping tables completely&nbsp;</li>\r\n</ol>\r\n	69	4	23	2017-06-05 07:33:04.858861	2017-06-05 07:33:04.858861	\N	\N	\N
670	<p>ORM - Object relational mapping&nbsp;</p>\r\n\r\n<p>mapping the classes to tables , object attributes to table column and object&#39;s to row&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	62	4	23	2017-06-05 07:33:04.860706	2017-06-05 07:33:04.860706	\N	\N	\N
671	<p>it create&#39;s all the listed colums present in the recent migration file in data base&nbsp;</p>\r\n	64	4	23	2017-06-05 07:33:04.86246	2017-06-05 07:33:04.86246	\N	\N	\N
672	<p>p1 =Product.new</p>\r\n\r\n<p>p1.name = &quot;redmi&quot;</p>\r\n\r\n<p>p1.save&nbsp;</p>\r\n	65	4	23	2017-06-05 07:33:04.864397	2017-06-05 07:33:04.864397	\N	\N	\N
673	<p># i wll go home an submit this sir</p>\r\n	73	4	23	2017-06-05 07:33:04.866796	2017-06-05 07:33:04.866796	\N	\N	\N
674	<ol>\r\n\t<li>redirect _to</li>\r\n\t<li>render action: &quot;new&quot;&nbsp;</li>\r\n</ol>\r\n\r\n<ul>\r\n\t<li>bascicaly it takes us to the path metioned after the action performed&nbsp;</li>\r\n\t<li>reder will perform the action which is mentioned&nbsp;</li>\r\n</ul>\r\n	74	4	23	2017-06-05 07:33:04.868826	2017-06-05 07:33:04.868826	\N	\N	\N
675	<ol>\r\n\t<li>index - it lists all the data&nbsp;</li>\r\n\t<li>new - set up a form</li>\r\n\t<li>create - is to save the data coming from the form</li>\r\n\t<li>show - is to show the specific data along withis assoction data</li>\r\n\t<li>edit - to fetch the record to b edited and displayed</li>\r\n\t<li>update - is to update the data coming from the form</li>\r\n\t<li>destroy - is to find the recored to be deleted&nbsp;</li>\r\n</ol>\r\n	66	4	23	2017-06-05 07:33:04.870968	2017-06-05 07:33:04.870968	\N	\N	\N
676	<ol>\r\n\t<li>GET</li>\r\n\t<li>POST</li>\r\n\t<li>PUT</li>\r\n\t<li>DELETE</li>\r\n</ol>\r\n\r\n<p>here&nbsp;</p>\r\n\r\n<ul>\r\n\t<li>GET method is similar to &nbsp;read action</li>\r\n\t<li>POST&nbsp; method is similar to &nbsp;create&nbsp;action</li>\r\n\t<li>PUT&nbsp; method is similar to &nbsp;update&nbsp;action</li>\r\n\t<li>DELETE&nbsp; method is similar to &nbsp;destroy&nbsp;action</li>\r\n</ul>\r\n	67	4	23	2017-06-05 07:33:04.872732	2017-06-05 07:33:04.872732	\N	\N	\N
683	<p>create : create is used to instantiate an object, assign values and then save it</p>\r\n\r\n<p>.save is an instance method</p>\r\n\r\n<p>.errors is also an instance method</p>\r\n\r\n<p>read : read is used to find all the records in the database</p>\r\n\r\n<p>.find is an class method which can be used only on the id</p>\r\n\r\n<p>.where is a class method in which we can find records based on the condition</p>\r\n\r\n<p>update : update is used to update the database</p>\r\n\r\n<p>.find</p>\r\n\r\n<p>.update_attributes</p>\r\n\r\n<p>destroy : destroy is used to delete any data from the database</p>\r\n\r\n<p>.find</p>\r\n\r\n<p>.destroy</p>\r\n\r\n<p>&nbsp;</p>\r\n	65	10	23	2017-06-05 07:36:41.39359	2017-06-05 07:36:41.39359	\N	\N	\N
684	<p>controller will perform authorization based on the request</p>\r\n\r\n<p>it handles both model and views</p>\r\n\r\n<p>rails generate controller controllerName this command we are using to create a controller</p>\r\n\r\n<p>&nbsp;</p>\r\n	73	10	23	2017-06-05 07:36:41.39526	2017-06-05 07:36:41.39526	\N	\N	\N
685	<p>redirect : when record is saved it will redirect to specific path</p>\r\n\r\n<p>render : if the record is not saved then it will render to specific path</p>\r\n	74	10	23	2017-06-05 07:36:41.396673	2017-06-05 07:36:41.396673	\N	\N	\N
686	<p>index is used to list all the resources</p>\r\n\r\n<p>new is used to set up a new form</p>\r\n\r\n<p>create is used to save the data coming in from the form</p>\r\n\r\n<p>show&nbsp; is used to show data along with its associated resources</p>\r\n\r\n<p>edit is used to fetch the record to be edited and display it in a form</p>\r\n\r\n<p>update is used to update the data coming</p>\r\n\r\n<p>destroy is used to find and delete the record</p>\r\n\r\n<p>&nbsp;</p>\r\n	66	10	23	2017-06-05 07:36:41.398157	2017-06-05 07:36:41.398157	\N	\N	\N
687	<p>http methods&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; crud methods</p>\r\n\r\n<p>get&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read</p>\r\n\r\n<p>post&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; create</p>\r\n\r\n<p>put&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; update</p>\r\n\r\n<p>delete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; destroy</p>\r\n	67	10	23	2017-06-05 07:36:41.399589	2017-06-05 07:36:41.399589	\N	\N	\N
688	<p>belongs_to</p>\r\n\r\n<p>has_many</p>\r\n\r\n<p>&nbsp;</p>\r\n	70	6	23	2017-06-05 07:38:04.97077	2017-06-05 07:38:04.97077	\N	\N	\N
689	<p>when mapping associations between models in your Rails application, &nbsp;</p>\r\n\r\n<p>you will inevitably come to a point when two models both &lsquo;has&rsquo; and &lsquo;belongs_to&rsquo; each other</p>\r\n\r\n<p>In this situation, you need to choose between a has_many :through relationship and a has_ and_belongs_to_many relationship&nbsp;</p>\r\n	71	6	23	2017-06-05 07:38:04.9732	2017-06-05 07:38:04.9732	\N	\N	\N
690	<p>whenever we define a&nbsp;<code>belongs_to</code>&nbsp;association, it is required to have the associated record present by default after&nbsp;this&nbsp;change.</p>\r\n	72	6	23	2017-06-05 07:38:04.975148	2017-06-05 07:38:04.975148	\N	\N	\N
691	<p>The generators you can use to create them</p>\r\n\r\n<p>The methods Active Record provides to manipulate your database</p>\r\n\r\n<p>The Rake tasks that manipulate them</p>\r\n\r\n<p>How they relate to&nbsp;<tt>schema.rb</tt></p>\r\n	69	6	23	2017-06-05 07:38:04.97726	2017-06-05 07:38:04.97726	\N	\N	\N
692	<p><strong>Object-relational mapping</strong></p>\r\n\r\n<p><strong>1 &nbsp;</strong>When we work with an object-oriented systems, there&#39;s a mismatch between the object model and the relational database</p>\r\n\r\n<p>2&nbsp;&nbsp;represent data in a tabular format wheres &nbsp;object-oriented languages</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	62	6	23	2017-06-05 07:38:04.980978	2017-06-05 07:38:04.980978	\N	\N	\N
693	<p><code>rake db:migrate</code>&nbsp;- Runs the migrations which haven&#39;t been run yet.</p>\r\n	64	6	23	2017-06-05 07:38:04.983917	2017-06-05 07:38:04.983917	\N	\N	\N
694	<p>Create - put</p>\r\n\r\n<p>Read,- get</p>\r\n\r\n<p>Update - post</p>\r\n\r\n<p>&amp; Destroy - delet</p>\r\n	65	6	23	2017-06-05 07:38:04.986138	2017-06-05 07:38:04.986138	\N	\N	\N
695	<p><strong>Controllers</strong>&nbsp;do the work of parsing user requests, data submissions, cookies, sessions and the &ldquo;browser stuff&rdquo;. They&rsquo;re the pointy-haired manager that orders employees around.&nbsp;<strong>The best controller is Dilbert-esque:</strong>&nbsp;It gives orders without knowing (or caring) how it gets done. In our case, the show method in the video controller knows it needs to lookup a video. It asks the model to get video 15, and will eventually display it to the user</p>\r\n	73	6	23	2017-06-05 07:38:04.988052	2017-06-05 07:38:04.988052	\N	\N	\N
696	<p>redirect_to and render are used in your controller to reply to a request. redirect_to will simply redirect the request to a new URL, if in your controller you add</p>\r\n\r\n<pre>\r\n\r\n&nbsp;</pre>\r\n	74	6	23	2017-06-05 07:38:04.989745	2017-06-05 07:38:04.989745	\N	\N	\N
697	<p>new</p>\r\n\r\n<p>update</p>\r\n\r\n<p>create</p>\r\n\r\n<p>destory</p>\r\n\r\n<p>index</p>\r\n\r\n<p>show</p>\r\n\r\n<p>new</p>\r\n	66	6	23	2017-06-05 07:38:04.991442	2017-06-05 07:38:04.991442	\N	\N	\N
698	<ul>\r\n\t<li>HTTP GET - SELECT/Request</li>\r\n\t<li>HTTP PUT - UPDATE</li>\r\n\t<li>HTTP POST - INSERT/Create</li>\r\n\t<li>HTTP put- When <strong>put</strong>ting a complete resource representation is cumbersome and utilizes more bandwidth, e.g.: when you have to update partially a column</li>\r\n\t<li>HTTP DELETE - DELETE</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n	67	6	23	2017-06-05 07:38:04.993738	2017-06-05 07:38:04.993738	\N	\N	\N
699	<p>1.has_many</p>\r\n\r\n<p>2.has_one</p>\r\n\r\n<p>3.belongs_to</p>\r\n\r\n<p>4.has_many_through</p>\r\n	70	20	23	2017-06-05 07:39:03.410322	2017-06-05 07:39:03.410322	\N	\N	\N
700	<p>has_many : when we want to fetch multiple records for one particular thing.</p>\r\n\r\n<p>we use where clause.</p>\r\n\r\n<p>ex: category</p>\r\n\r\n<p>has_many :products</p>\r\n\r\n<p>belongs_to : when we want to find a single record.</p>\r\n\r\n<p>we use a find method</p>\r\n\r\n<p>ex: belongs_to category</p>\r\n	71	20	23	2017-06-05 07:39:03.411955	2017-06-05 07:39:03.411955	\N	\N	\N
701	<p>1) operations simpler and easier in&nbsp; code.</p>\r\n\r\n<p>2)Its the Active Record pattern .</p>\r\n\r\n<p>3)Avoide using &quot;find and where&quot; while using association .</p>\r\n\r\n<p>3)It reduces code significantly and makes&nbsp; queries significantly easier to read.</p>\r\n\r\n<p>&nbsp;</p>\r\n	72	20	23	2017-06-05 07:39:03.413861	2017-06-05 07:39:03.413861	\N	\N	\N
702	<p>By using rails migration,</p>\r\n\r\n<p>1) adding a column/columns.</p>\r\n\r\n<p>ex: rails g migration add_column_sc_id_to_products</p>\r\n\r\n<p>2)Removing column/columns.</p>\r\n\r\n<p>3)Renaming column name</p>\r\n\r\n<p>4)changes to column type.</p>\r\n\r\n<p>5.drop table.</p>\r\n	69	20	23	2017-06-05 07:39:03.417074	2017-06-05 07:39:03.417074	\N	\N	\N
703	<p>ORM is nothing but Object Relational mapping</p>\r\n\r\n<p>1. It maps classess to tables.</p>\r\n\r\n<p>2.It maps object attributes to table column.</p>\r\n\r\n<p>3.It maps object to rows.</p>\r\n	62	20	23	2017-06-05 07:39:03.419441	2017-06-05 07:39:03.419441	\N	\N	\N
704	<p>rake db:migrate</p>\r\n\r\n<p>this command is use to run the migration file.</p>\r\n	64	20	23	2017-06-05 07:39:03.421505	2017-06-05 07:39:03.421505	\N	\N	\N
801	<p>def CamelCase(sentence)</p>\r\n\r\n<p>words = sentence.split(&quot; &quot;)<br />\r\nstring = &quot;&quot;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;words.each do |word|</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;string += word.capitalize</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>return string</p>\r\n\r\n<p>end</p>\r\n\r\n<p>sentence = &quot;hello case&quot;</p>\r\n\r\n<p>Capitalized = CamelCase(sentence)<br />\r\nputs Capitalized</p>\r\n	77	19	24	2017-06-15 10:00:42.184272	2017-06-15 10:00:42.184272	\N	\N	\N
705	<p>1)create : create method is use to save records to DB.</p>\r\n\r\n<p>ex:&nbsp; .save</p>\r\n\r\n<p>2)Read : Read is to get the data from DB.</p>\r\n\r\n<p>ex1) c = Category.all</p>\r\n\r\n<p>.all method is use to find all rows in the table.</p>\r\n\r\n<p>ex2) category = Category.find(1)</p>\r\n\r\n<p>.find is a class method</p>\r\n\r\n<p>.find method can be used only on id column.</p>\r\n\r\n<p>3)update : update method is use to update the records to existing record.</p>\r\n\r\n<p>ex: 1) category = Category.find(1)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 2)category.update_attributes(name:&quot;deepikaaa&quot;)</p>\r\n\r\n<p>4)Destroy : destroy method is use to delete the record.</p>\r\n\r\n<p>ex:1) first find the id</p>\r\n\r\n<p>c = Category.find(1)</p>\r\n\r\n<p>c.destroy</p>\r\n\r\n<p>&nbsp;</p>\r\n	65	20	23	2017-06-05 07:39:03.423008	2017-06-05 07:39:03.423008	\N	\N	\N
706	<p>The&nbsp; Role of Rails Controller is</p>\r\n\r\n<p>It acts like brige between model and the view.</p>\r\n\r\n<p>It contains all the CRUD methods.</p>\r\n	73	20	23	2017-06-05 07:39:03.424627	2017-06-05 07:39:03.424627	\N	\N	\N
707	<p>redirct_to :</p>\r\n\r\n<p>When record gets save it will redirect_to &quot;Required path&quot;</p>\r\n\r\n<p>render :</p>\r\n\r\n<p>when the record has not saved it will render back to &quot;Required path&quot;</p>\r\n	74	20	23	2017-06-05 07:39:03.426426	2017-06-05 07:39:03.426426	\N	\N	\N
708	<p>1)index : It is use to list all the records from the DB.</p>\r\n\r\n<p>2)new: It is use to get the form</p>\r\n\r\n<p>3)create : It is use to pass the required params and save record to DB.</p>\r\n\r\n<p>4)show : find the id for specific record and display</p>\r\n\r\n<p>5)edit : find the id for specific record and edit the record in the form.</p>\r\n\r\n<p>6)destroy : find the id for specfic record and call destroy method on it.</p>\r\n	66	20	23	2017-06-05 07:39:03.428405	2017-06-05 07:39:03.428405	\N	\N	\N
709	<p>HTTP methods&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CRUD</p>\r\n\r\n<p>1.GET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; index</p>\r\n\r\n<p>2.GET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new</p>\r\n\r\n<p>3.POST&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; create</p>\r\n\r\n<p>4.GET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; show</p>\r\n\r\n<p>5.GET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; edit</p>\r\n\r\n<p>6.PUT/PATCH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; update</p>\r\n\r\n<p>7.delete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Destroy</p>\r\n	67	20	23	2017-06-05 07:39:03.430458	2017-06-05 07:39:03.430458	\N	\N	\N
710	has_many\r\nhas_one\r\nbelongs_to\r\nhas_many through	70	7	23	2017-06-05 07:40:32.036889	2017-06-05 07:40:32.036889	\N	\N	\N
711	We have a many products in products we use has_many that product belongs to category	71	7	23	2017-06-05 07:40:32.039347	2017-06-05 07:40:32.039347	\N	\N	\N
712	Creating has many products belongs to each one category\r\n	72	7	23	2017-06-05 07:40:32.041022	2017-06-05 07:40:32.041022	\N	\N	\N
713	Adding column to existing table\r\nRemoving column from existing table\r\nDrop the table\r\nRename the column \r\nMake change in the column	69	7	23	2017-06-05 07:40:32.042968	2017-06-05 07:40:32.042968	\N	\N	\N
714	Object relational mapping\r\nObject attributes of table column\r\nObject attributes of table rows\r\n	62	7	23	2017-06-05 07:40:32.045373	2017-06-05 07:40:32.045373	\N	\N	\N
715	It is used change the schema in database	64	7	23	2017-06-05 07:40:32.048508	2017-06-05 07:40:32.048508	\N	\N	\N
716	Create\r\n.save\r\n.errors\r\nRead\r\n.find\r\n.where\r\nUpdate\r\n.find\r\nDestroy\r\n.find\r\n.destroy	65	7	23	2017-06-05 07:40:32.051904	2017-06-05 07:40:32.051904	\N	\N	\N
717	To define the 7 action in controller\r\nController accept request perform the action and\r\nPass control to the view	73	7	23	2017-06-05 07:40:32.054292	2017-06-05 07:40:32.054292	\N	\N	\N
718	Redirect perform the url \r\nRender perform the action 	74	7	23	2017-06-05 07:40:32.057503	2017-06-05 07:40:32.057503	\N	\N	\N
719	Index-to list the data\r\nNew-to setup a form\r\nCreate-to save the data is coming from\r\nShow-to show one specific data \r\nEdit -to fetch the record to edited and display it in form\r\nUpdate-is to update the data coming in the form\r\nDestroy-to find the record to be deleted &invoke the destroy action	66	7	23	2017-06-05 07:40:32.059794	2017-06-05 07:40:32.059794	\N	\N	\N
720	Get-read\r\nPut-update\r\nPost-create\r\nDelete-Destroy	67	7	23	2017-06-05 07:40:32.061976	2017-06-05 07:40:32.061976	\N	\N	\N
721	<p>Associations in rails:</p>\r\n\r\n<p>1. has_many</p>\r\n\r\n<p>2. belongs_to</p>\r\n\r\n<p>3. has_many_through</p>\r\n\r\n<p>In the example of a bus route and passengers,</p>\r\n\r\n<p>The bus_route will have many passengers and</p>\r\n\r\n<p>a passenger will belong to a bus route.&nbsp;</p>\r\n	70	8	23	2017-06-05 07:45:16.979659	2017-06-05 07:45:16.979659	\N	\N	\N
722	<p>We use associations when we have to associate multiple models to each other.</p>\r\n	71	8	23	2017-06-05 07:45:16.98239	2017-06-05 07:45:16.98239	\N	\N	\N
723	<p>The advantages of associations are that the instance methods defined in one model can be access in another associated model too.&nbsp;</p>\r\n	72	8	23	2017-06-05 07:45:16.984761	2017-06-05 07:45:16.984761	\N	\N	\N
724	<p>Rails migration can be used to:</p>\r\n\r\n<p>1. Create a new column.</p>\r\n\r\n<p>2. Change a&nbsp;column name.</p>\r\n\r\n<p>3. Change a column type.</p>\r\n\r\n<p>4. Removing a column from an existing table.</p>\r\n\r\n<p>5. Dropping a table.&nbsp;</p>\r\n	69	8	23	2017-06-05 07:45:16.987134	2017-06-05 07:45:16.987134	\N	\N	\N
725	<p>Object Relational Mapping is the mapping that relates</p>\r\n\r\n<p>1. classes to table.</p>\r\n\r\n<p>2. columns to attributes.</p>\r\n\r\n<p>3. rows to objects.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	62	8	23	2017-06-05 07:45:16.989573	2017-06-05 07:45:16.989573	\N	\N	\N
726	<p>rake db:migrate updates to the most recent changes made to the model.&nbsp;</p>\r\n	64	8	23	2017-06-05 07:45:16.991808	2017-06-05 07:45:16.991808	\N	\N	\N
727	<p>.where is used to find objects based on their value.</p>\r\n\r\n<p>eg: Product.where(&#39;price &lt;&nbsp;?&#39;, 300) would list all the products with a price less than 300.</p>\r\n\r\n<p>.find is used to retrieve a particular object on which some action has to be performed.&nbsp;</p>\r\n\r\n<p>eg: Product.find[:id] will find an object with the specified id. Post this actions like update, delete, etc can be performed on the object.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	65	8	23	2017-06-05 07:45:16.994035	2017-06-05 07:45:16.994035	\N	\N	\N
728	<p>Rails controller performs the decision making tasks.&nbsp;</p>\r\n\r\n<p>It forms a connection between the models and view.&nbsp;</p>\r\n\r\n<p>It performs the 7 actions:</p>\r\n\r\n<p>index</p>\r\n\r\n<p>new</p>\r\n\r\n<p>create</p>\r\n\r\n<p>show</p>\r\n\r\n<p>edit</p>\r\n\r\n<p>update</p>\r\n\r\n<p>destroy</p>\r\n	73	8	23	2017-06-05 07:45:16.996295	2017-06-05 07:45:16.996295	\N	\N	\N
729	<p>redirect_to redirects&nbsp;to another page to perform an action specified, if the value returns true. Here the page gets navigated to another action page.</p>\r\n\r\n<p>renders :action- &nbsp;is performed if the value returns false. In this case, the page is redirected based on an action that is to be performed. Here the page is reloaded to perform the action again.&nbsp;</p>\r\n	74	8	23	2017-06-05 07:45:16.998646	2017-06-05 07:45:16.998646	\N	\N	\N
730	<p>index - Lists all objects in that model.</p>\r\n\r\n<p>new- Displays a form to take input from user.&nbsp;</p>\r\n\r\n<p>create - After input is taken from user and submitted, the object gets created.&nbsp;</p>\r\n\r\n<p>show- The created object and its details are displayed here.&nbsp;</p>\r\n\r\n<p>edit- Displays a form to edit a particular object.&nbsp;</p>\r\n\r\n<p>update - The edit form once submitted initiates the update action.&nbsp;</p>\r\n\r\n<p>destroy - A selected object gets deleted with a destory action.&nbsp;</p>\r\n	66	8	23	2017-06-05 07:45:17.000898	2017-06-05 07:45:17.000898	\N	\N	\N
731	<p>INDEX</p>\r\n\r\n<p>action- GET</p>\r\n\r\n<p>displays all contents that belong to a particular model.&nbsp;</p>\r\n\r\n<p>path: models_path</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>NEW</p>\r\n\r\n<p>A form gets displayed&nbsp;to create a new object. Here the user will only enter details in the form.&nbsp;</p>\r\n\r\n<p>action - GET</p>\r\n\r\n<p>path - model_new_path</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>CREATE</p>\r\n\r\n<p>On click of the submit button in a new page, the create&nbsp;action gets instantiated.&nbsp;</p>\r\n\r\n<p>action - POST</p>\r\n\r\n<p>path - models/object_id</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>SHOW</p>\r\n\r\n<p>Displays the object and its details.&nbsp;</p>\r\n\r\n<p>action - GET</p>\r\n\r\n<p>path - models/object_id</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>EDIT</p>\r\n\r\n<p>A form to edit a particular object gets displayed here.&nbsp;</p>\r\n\r\n<p>action - GET</p>\r\n\r\n<p>path - models/object_id/edit</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>UPDATE</p>\r\n\r\n<p>On click of the submit button in Edit option, the update action gets instantiated.&nbsp;</p>\r\n\r\n<p>action - PUT/ PATCH</p>\r\n\r\n<p>path - models/object_id</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>DESTROY</p>\r\n\r\n<p>Here the object to be deleted gets destroyed.</p>\r\n\r\n<p>action - DELETE</p>\r\n\r\n<p>path - models_path</p>\r\n\r\n<p>&nbsp;</p>\r\n	67	8	23	2017-06-05 07:45:17.003317	2017-06-05 07:45:17.003317	\N	\N	\N
732	<p>1 - has_many &nbsp;eg - a category has many products # add association to your category model file - has_many :products</p>\r\n\r\n<p>2 - belongs_to eg - products belongs to a category #&nbsp;add association to your product&nbsp;model file - belongs_to :category</p>\r\n\r\n<p>3 - has_one</p>\r\n\r\n<p>4 - has_many_through</p>\r\n	70	12	23	2017-06-05 07:45:28.961436	2017-06-05 07:45:28.961436	\N	\N	\N
733	<p>we use association to make our code simpler and by adding association we can use instance method as reader and writer.</p>\r\n\r\n<p>1 - add association to your category model file - has_many :products.</p>\r\n\r\n<p>2-&nbsp;&nbsp;add association to your product&nbsp;model file - belongs_to :category</p>\r\n	71	12	23	2017-06-05 07:45:28.965908	2017-06-05 07:45:28.965908	\N	\N	\N
734	<p>we use association to make our code simpler and by adding association we can use instance method as reader and writer.</p>\r\n\r\n<p>eg -&nbsp;product.category.name instead of using&nbsp;Category.find(product.category_id).name</p>\r\n\r\n<p>here we performing find query and .category is a method which can be only added after adding association to our model file so that here will get category name as an output.</p>\r\n\r\n<p>so basically its handling the work of foreign key.</p>\r\n	72	12	23	2017-06-05 07:45:28.970395	2017-06-05 07:45:28.970395	\N	\N	\N
735	<p>1 - Removing col/cols from existing table.</p>\r\n\r\n<p>2 - Dropping the table.</p>\r\n\r\n<p>3 - Renaming col/cols from the existing table.</p>\r\n\r\n<p>4 - Change the type of the col/cols&nbsp;</p>\r\n	69	12	23	2017-06-05 07:45:28.972455	2017-06-05 07:45:28.972455	\N	\N	\N
736	<p>ORM stands for &quot;Object Relational Mapping&quot;</p>\r\n\r\n<p>1 -&nbsp; It maps classes to tables</p>\r\n\r\n<p>2 - It maps object attributes to columns</p>\r\n\r\n<p>3 - It maps object to row</p>\r\n	62	12	23	2017-06-05 07:45:28.974665	2017-06-05 07:45:28.974665	\N	\N	\N
737	<p>Its update our database.</p>\r\n	64	12	23	2017-06-05 07:45:28.976529	2017-06-05 07:45:28.976529	\N	\N	\N
738	<p>1. create =&gt; &nbsp;#instantiate an object eg -sc1 = SubCategory.new<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #assign values eg - sc1.name = &quot;lab&quot;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; #save it eg - sc1.save<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # can check errors by using .errors</p>\r\n\r\n<p>2. read =&gt; # .all is used as find all in ruby&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; # .find will return a single object<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;# .where will return object based on a condition [these all are class methods]</p>\r\n\r\n<p>3. update =&gt; Its a two way process first we have find a record we wanna update by using .find method and then apply .update_attributes method on it.</p>\r\n\r\n<p>4. delete =&gt;&nbsp;Its a two way process first we have find a record we wanna delete&nbsp;by using .find method and then apply .destroy method on it<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;we can use delete_all to delete oll the records<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	65	12	23	2017-06-05 07:45:28.978861	2017-06-05 07:45:28.978861	\N	\N	\N
739	<p>It controls models and views files in our application.</p>\r\n\r\n<p>it performs 7 actions<br />\r\nindex</p>\r\n\r\n<p>new</p>\r\n\r\n<p>create</p>\r\n\r\n<p>show</p>\r\n\r\n<p>edit</p>\r\n\r\n<p>update</p>\r\n\r\n<p>destroy</p>\r\n	73	12	23	2017-06-05 07:45:28.981126	2017-06-05 07:45:28.981126	\N	\N	\N
740	<p>redirect is used to redirect to the page by clicking on button.<br />\r\nand render is used to reload the page if the value returns to false eg - render: :action #(new)</p>\r\n	74	12	23	2017-06-05 07:45:28.983269	2017-06-05 07:45:28.983269	\N	\N	\N
741	<p>index - Lists oll objects in that model.</p>\r\n\r\n<p>new - Displays a form to take input from user.</p>\r\n\r\n<p>create - After input from user it performs .save method and save all the entries.</p>\r\n\r\n<p>show - The created object is displayed here.</p>\r\n\r\n<p>edit - Display a form to edit a particular object.</p>\r\n\r\n<p>update - The edit form once submitted then it got update into the datebase.</p>\r\n\r\n<p>destroy - A selected object gets deleted from database.&nbsp;</p>\r\n	66	12	23	2017-06-05 07:45:28.984749	2017-06-05 07:45:28.984749	\N	\N	\N
742	<p>1 - index performs GET action which is http method and path is categories_path.</p>\r\n\r\n<p>2- new&nbsp;performs GET action which is http method and path is new_categories_path.</p>\r\n\r\n<p>3- create&nbsp;performs POST&nbsp;action which is http method and path is model/object_id.</p>\r\n\r\n<p>4- show&nbsp;performs GET action which is http method and path is model/obj_id.</p>\r\n\r\n<p>5- edit&nbsp;performs GET&nbsp;action which is http method and path is model/obj_id/edit.</p>\r\n\r\n<p>6- update&nbsp;performs PUT&nbsp;action which is http method and path is model/obj_id.</p>\r\n\r\n<p>7- destroy&nbsp;performs DELETE&nbsp;action which is http method and path is categories_path.</p>\r\n	67	12	23	2017-06-05 07:45:28.986634	2017-06-05 07:45:28.986634	\N	\N	\N
743	<p>1 has_many</p>\r\n\r\n<p>2 belongs_to</p>\r\n\r\n<p>3 has_one</p>\r\n\r\n<p>4 has_many through</p>\r\n	70	3	23	2017-06-05 07:49:25.234435	2017-06-05 07:49:25.234435	\N	\N	\N
744	<p>when we refer to a primary key at that time we use has_many association.</p>\r\n\r\n<p>when we refer to a foreign key&nbsp;at that time we use belongs_to association.</p>\r\n\r\n<p>for example</p>\r\n\r\n<p>we have 2 models Product and Category</p>\r\n\r\n<p>In Product id is primary key and category_id is foreign key so,</p>\r\n\r\n<p>in Product.rb</p>\r\n\r\n<p>belongs_to :category</p>\r\n\r\n<p>in Category.rb</p>\r\n\r\n<p>has_many :products</p>\r\n	71	3	23	2017-06-05 07:49:25.236865	2017-06-05 07:49:25.236865	\N	\N	\N
745	<p>The advantage of using association is we can dirctly use instance method of that model</p>\r\n\r\n<p>@product.category.name</p>\r\n	72	3	23	2017-06-05 07:49:25.239074	2017-06-05 07:49:25.239074	\N	\N	\N
746	<p>1. Adding column/columns to the table</p>\r\n\r\n<p>2 removing column/columns from the table</p>\r\n\r\n<p>3 updating name of the column/columns in the table</p>\r\n\r\n<p>4 updating type of the column/columns in the table</p>\r\n\r\n<p>5 delete the table</p>\r\n	69	3	23	2017-06-05 07:49:25.241293	2017-06-05 07:49:25.241293	\N	\N	\N
747	<p>ORM - Object Relational Model</p>\r\n\r\n<p>maps class to tables,</p>\r\n\r\n<p>object attributes to the columns and</p>\r\n\r\n<p>object to rows</p>\r\n\r\n<p>&nbsp;</p>\r\n	62	3	23	2017-06-05 07:49:25.243013	2017-06-05 07:49:25.243013	\N	\N	\N
748	<p>rake db:migraete do migration and add or update table in database</p>\r\n	64	3	23	2017-06-05 07:49:25.244911	2017-06-05 07:49:25.244911	\N	\N	\N
749	<p>Destroy</p>\r\n\r\n<p>.destroy is an instance method.</p>\r\n\r\n<p>for that first we find the object and then delete the object</p>\r\n\r\n<p>e.g product = Product.find(&#39;category_id = ?&#39;, 1)</p>\r\n\r\n<p>product.destroy</p>\r\n\r\n<p>.delete_all is a class method</p>\r\n\r\n<p>Product.delete_all</p>\r\n\r\n<p>---------------------------------------------------------------------------------------------</p>\r\n\r\n<p>create</p>\r\n\r\n<p>.save is an instance method.</p>\r\n\r\n<p>it is used to save an object</p>\r\n\r\n<p>e.g</p>\r\n\r\n<p>p1 = Product.new</p>\r\n\r\n<p>p1.name = &quot;Electronics&quot;</p>\r\n\r\n<p>p1.save</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>.errors is an instance method</p>\r\n\r\n<p>p1.errors</p>\r\n\r\n<p>-----------------------------------------------------------------------</p>\r\n\r\n<p>Read</p>\r\n\r\n<p>.find is a class method</p>\r\n\r\n<p>product = Product.find(1)</p>\r\n\r\n<p>.where is a class method</p>\r\n\r\n<p>Product.where(&#39;category_id = ?&#39;, category.id)</p>\r\n\r\n<p>.where method returns an array.</p>\r\n\r\n<p>--------------------------------------------------------------</p>\r\n\r\n<p>update</p>\r\n\r\n<p>.update_attributes is an instance method</p>\r\n\r\n<p>for that first we use find and then update</p>\r\n\r\n<p>product = Product.find(1)</p>\r\n\r\n<p>product.update_attributes({&quot;name&quot; =&gt; &quot;Electronics &amp; Midea&quot;})-</p>\r\n	65	3	23	2017-06-05 07:49:25.247832	2017-06-05 07:49:25.247832	\N	\N	\N
750	<p>when we generate a controller it will atometically generate one view folder</p>\r\n\r\n<p>e.g</p>\r\n\r\n<p>rails g contoller products</p>\r\n\r\n<p>it will create product_controller.rb</p>\r\n\r\n<p>in view folder</p>\r\n\r\n<p>products</p>\r\n\r\n<p>every action in controller have its own view file</p>\r\n\r\n<p>e.g&nbsp;</p>\r\n\r\n<p>def index</p>\r\n\r\n<p>end</p>\r\n\r\n<p>in view/products</p>\r\n\r\n<p>index.html.erb</p>\r\n	73	3	23	2017-06-05 07:49:25.25014	2017-06-05 07:49:25.25014	\N	\N	\N
751	<p>when we create or update if there is no error and create or update successfully then it will redirect_to mention path (redirect_to product_parh(@product.id))</p>\r\n\r\n<p>or else it will render to a mention action. (render action: &quot;new&quot;)</p>\r\n	74	3	23	2017-06-05 07:49:25.252209	2017-06-05 07:49:25.252209	\N	\N	\N
752	<p>index - list all the resources</p>\r\n\r\n<p>def index</p>\r\n\r\n<p>&nbsp; @categorie = Category.all</p>\r\n\r\n<p>end</p>\r\n\r\n<p>action: index</p>\r\n\r\n<p>path: categories_path</p>\r\n\r\n<p>http method : get</p>\r\n\r\n<p>path&nbsp;</p>\r\n\r\n<p>new - instanciate an object</p>\r\n\r\n<p>def new</p>\r\n\r\n<p>&nbsp; @category = Category.new</p>\r\n\r\n<p>end</p>\r\n\r\n<p>action: new</p>\r\n\r\n<p>path: new_category_path</p>\r\n\r\n<p>http method : get</p>\r\n\r\n<p>create : validates data and save the data</p>\r\n\r\n<p>def create</p>\r\n\r\n<p>&nbsp; @category.new(params[:category].permit(:name))</p>\r\n\r\n<p>@category.save</p>\r\n\r\n<p>&nbsp;redirect_to category_path(@category.id)</p>\r\n\r\n<p>else</p>\r\n\r\n<p>&nbsp;render action: &quot;new&quot;</p>\r\n\r\n<p>end</p>\r\n\r\n<p>action : create</p>\r\n\r\n<p>http method post</p>\r\n\r\n<p>edit : find the resource an available in form</p>\r\n\r\n<p>action :edit</p>\r\n\r\n<p>http method : get</p>\r\n\r\n<p>update : check validation and update value</p>\r\n\r\n<p>action : update</p>\r\n\r\n<p>http method : put</p>\r\n\r\n<p>show : find the data and display it with associated resorces</p>\r\n\r\n<p>action show</p>\r\n\r\n<p>http method get</p>\r\n\r\n<p>destroy : find data and delete</p>\r\n\r\n<p>action destroy</p>\r\n\r\n<p>http method delete</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	66	3	23	2017-06-05 07:49:25.254474	2017-06-05 07:49:25.254474	\N	\N	\N
753	<p>POST - CREATE<br />\r\nGET - READ<br />\r\nPUT - UPDATE<br />\r\nDELETE - DESTROY</p>\r\n	67	3	23	2017-06-05 07:49:25.256863	2017-06-05 07:49:25.256863	\N	\N	\N
754	<p>1 belongs_to&nbsp;</p>\r\n\r\n<p>2 has_many&nbsp;</p>\r\n\r\n<p>3 has_one</p>\r\n\r\n<p>4 has_many_through</p>\r\n	70	5	23	2017-06-05 08:03:36.194247	2017-06-05 08:03:36.194247	\N	\N	\N
755	<p>when we have a products table has many products belonging to a respective category of a categories table. we define&nbsp;belongs_to&nbsp;in products model and&nbsp;has_many in categories model.</p>\r\n\r\n<p>example:&nbsp;</p>\r\n\r\n<p>class Product &lt; ActiveRecord::Base</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;belongs_to :category</p>\r\n\r\n<p>end</p>\r\n\r\n<p>class Category&nbsp;&lt; ActiveRecord::Base</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp;has_many :products</p>\r\n\r\n<p>end</p>\r\n	71	5	23	2017-06-05 08:03:36.196097	2017-06-05 08:03:36.196097	\N	\N	\N
756	<p>After defining the associations, considering the above example, We use method name as products and categories to refer values of attributes based on their primary key and foreign key association.</p>\r\n\r\n<p>example: 1. products.category</p>\r\n\r\n<p>this does the below -&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; category = Category.first</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Product.where(&#39;category_id = ?&#39;,category.id)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>\r\n\r\n<p>example: 2. category.products</p>\r\n\r\n<p>this does the below -&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; product = Product.first</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Category.find(product.category_id).name</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	72	5	23	2017-06-05 08:03:36.197689	2017-06-05 08:03:36.197689	\N	\N	\N
757	<p>1. adding&nbsp;new column/columns names for table,</p>\r\n\r\n<p>2. renaming the&nbsp;&nbsp;column/columns of table</p>\r\n\r\n<p>3. changing the type of column/columns of table</p>\r\n\r\n<p>4. removing the column/columns from table</p>\r\n\r\n<p>5. dropping the table</p>\r\n	69	5	23	2017-06-05 08:03:36.199436	2017-06-05 08:03:36.199436	\N	\N	\N
758	<p>ORM stands for object relational mapping.</p>\r\n\r\n<p>uses</p>\r\n\r\n<p>1. maps class names to table names</p>\r\n\r\n<p>2. maps class attributes&nbsp;to table columns</p>\r\n\r\n<p>3.maps objects of class to rows of tables</p>\r\n	62	5	23	2017-06-05 08:03:36.201428	2017-06-05 08:03:36.201428	\N	\N	\N
759	<p>rake db:migrate command migrates the class and its attributes and types to a table in a database.</p>\r\n	64	5	23	2017-06-05 08:03:36.203261	2017-06-05 08:03:36.203261	\N	\N	\N
760	<p>For create</p>\r\n\r\n<p>1) .save</p>\r\n\r\n<p>2)&nbsp;&nbsp;.errors</p>\r\n\r\n<p>example: p = Product.new</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.name = &quot;iphone&quot;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.save</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.errors</p>\r\n\r\n<p>For read</p>\r\n\r\n<p>1)&nbsp;.find</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; Category.find(product.category_id).name</p>\r\n\r\n<p>2) .where</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; Product.where(&#39;category_id = ?&#39;,category.id)</p>\r\n\r\n<p>For update</p>\r\n\r\n<p>1) .find</p>\r\n\r\n<p>2) .update_attributes</p>\r\n\r\n<p>example: p= Product.find(2)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.update_attributes(price: 1000)</p>\r\n\r\n<p>For destroy</p>\r\n\r\n<p>1) .find</p>\r\n\r\n<p>2) .destroy</p>\r\n\r\n<p>example:&nbsp;p= Product.find(2)</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;p.destroy</p>\r\n	65	5	23	2017-06-05 08:03:36.205023	2017-06-05 08:03:36.205023	\N	\N	\N
761	<p>Rails controller defines&nbsp;actions. they accept requests and perform necessary processing and pass the control to a view layer.</p>\r\n	73	5	23	2017-06-05 08:03:36.206678	2017-06-05 08:03:36.206678	\N	\N	\N
762	<p>redirect will go to the specified page as given the path</p>\r\n\r\n<p>render will go to the action specified</p>\r\n	74	5	23	2017-06-05 08:03:36.20825	2017-06-05 08:03:36.20825	\N	\N	\N
763	<p>1. index - lists resources</p>\r\n\r\n<p>2. new - sets up a&nbsp;form</p>\r\n\r\n<p>3. create - saves data coming in from form</p>\r\n\r\n<p>4. show - to show&nbsp;specific record along with its associated data</p>\r\n\r\n<p>5. edit - fetch the record to be edited and display in form</p>\r\n\r\n<p>6. update - update the data coming in from form</p>\r\n\r\n<p>7.destroy - find the record to be deleted and invoke destroy action</p>\r\n	66	5	23	2017-06-05 08:03:36.210065	2017-06-05 08:03:36.210065	\N	\N	\N
764	<p>1. get - create</p>\r\n\r\n<p>2. put /patch - read</p>\r\n\r\n<p>3. post - update</p>\r\n\r\n<p>4. delete - destroy</p>\r\n	67	5	23	2017-06-05 08:03:36.212775	2017-06-05 08:03:36.212775	\N	\N	\N
765	1.  Adding resources \r\n\r\nRails.application.routes.draw do\r\n    resources :sub_categories\r\nend\r\n\r\n2. 7 actions\r\n\r\nclass SubCategoriesController < ApplicationController\r\n\r\n\tdef index\r\n\t\t@sub_categories = SubCategory.all\r\n\tend\r\n\r\n\tdef new\r\n\t\t@sub_category = SubCategory.new\r\n\tend\r\n\r\n\tdef create\r\n\t\t@sub_category = SubCategory.new(sub_category_params)\r\n\r\n    \tif @sub_category.save\r\n    \t\tredirect_to sub_category_path(@sub_category.id), notice: "Successfully created #{@sub_category.name}"\r\n    \telse\r\n    \t\trender action: "new"\r\n    \tend\r\n\tend\r\n\r\n\tdef show\r\n\t\tbegin\r\n           @sub_category = SubCategory.find(params[:id])\r\n        rescue ActiveRecord::RecordNotFound\r\n           redirect_to sub_categories_path, notice: "Record not found"\r\n        end\r\n\tend\r\n\r\n\tdef edit\r\n\t\t@sub_category = SubCategory.find(params[:id])\r\n\tend\r\n\r\n\tdef update\r\n\t\t@sub_category = SubCategory.find(params[:id])\r\n        previous_name = @sub_category.name\r\n        if @sub_category.update_attributes(sub_category_params)\r\n            redirect_to sub_category_path(@sub_category.id), notice: "Successfully updated"\r\n        else\r\n            render action: "edit"\r\n        end\r\n\tend\r\n\r\n\tdef destroy\r\n\t\t@sub_category = SubCategory.find(params[:id])\r\n        @sub_category.destroy\r\n        redirect_to sub_categories_path, notice: "Successfully deleted #{@sub_category.name}"\r\n\tend\r\n    \r\n    def sub_category_params\r\n       params[:sub_category].permit(:name, :category_id)\r\n    end\r\n\r\nend\r\n\r\n\r\n\r\n3.  views for the actions\r\n\r\nindex.html.erb\r\n\r\n<h2> Listing sub_categories: </h2>\r\n\r\n<%= link_to "Add sub_category", new_sub_category_path %> \r\n\r\n<% if @sub_categories.empty? %>\r\n\t<p> No sub_categories found </P>\r\n<% else %>\r\n   <ul>\r\n       <% @sub_categories.each do |sub_category| %>\r\n       <li> <%= link_to sub_category.name, sub_category_path(sub_category.id) %> - <%= sub_category.category_id %> </li>\r\n       <% end %>\r\n   </ul>\r\n<% end %>\r\n\r\n  \r\nnew.html.erb\r\n\r\n<h2> Add sub_category: </h2>\r\n\r\n<%= form_for @sub_category do |f| %>\r\n\r\n<% if @sub_category.errors.any? %>\r\n<h3> Errors: </h3>\r\n<ul>\r\n  <% @sub_category.errors.full_messages.each do |msg| %>\r\n  <li> <%= msg %> </li>\r\n  <% end %>\r\n</ul>\r\n  <% end %>\r\n\r\n<%= f.label :name %><br/>\r\n<%= f.text_field :name%> <br/>\r\n\r\n<%= f.label :category_id %><br/>\r\n<%= f.collection_select :category_id, Category.all, :id, :name, prompt: "Select SubCategory" %> <br/>\r\n\r\n<%= f.submit "submit" %> \r\n\r\n<% end %>\r\n\r\n\r\nshow.html.erb\r\n\r\n<h2> <%= @sub_category.name %> </h2>\r\n<%= link_to "edit", edit_sub_category_path(@sub_category.id) %>\r\n<%= link_to "destroy", sub_category_path(@sub_category.id), method: :delete, data: {confirm: "are you sure?"} %>\r\n\r\n\r\n<p>category: <%= link_to @sub_category.category.name, sub_category_path(@sub_category.category_id) %> </p>\r\n\r\n<%= link_to "Back", sub_categories_path %>\r\n\r\n\r\nedit.html.erb\r\n\r\n<h2>Edit sub_category:</h2>\r\n\r\n<%= form_for @sub_category do |f| %>\r\n<% if @sub_category.errors.any? %>\r\n<h3> Errors: </h3>\r\n<ul>\r\n  <% @sub_category.errors.full_messages.each do |msg| %>\r\n  <li> <%= msg %> </li>\r\n  <% end %>\r\n  </ul>\r\n  <% end %>\r\n\r\n<%= f.label :name %><br/>\r\n<%= f.text_field :name%> <br/>\r\n\r\n<%= f.label :category_id %><br/>\r\n<%= f.collection_select :category_id, Category.all, :id, :name, prompt: "Select SubCategory" %> <br/>\r\n\r\n<%= f.submit "submit" %> \r\n\r\n<% end %>\r\n	68	5	22	2017-06-05 16:17:20.874827	2017-06-05 16:17:20.874827	\N	\N	\N
766	<p><strong><em>Associations in Rails</em></strong></p>\r\n\r\n<p><strong><em>1) has_many:-&nbsp;</em></strong>indicates one -to- many connection with another model</p>\r\n\r\n<p><strong><em>2) has_one:-&nbsp;</em></strong>indicates one -to- one connection with another model</p>\r\n\r\n<p><strong><em>3) belongs_to:-&nbsp;</em></strong>one -to- one connection with another model</p>\r\n\r\n<p><strong><em>4) has_many through</em></strong></p>\r\n	70	16	23	2017-06-05 16:40:49.895428	2017-06-05 16:40:49.895428	\N	\N	\N
767	<p><strong>has_many:&nbsp;</strong>we use has_many association to fetch multple instances from another model.</p>\r\n\r\n<p><strong>belongs_to:&nbsp;</strong>we use belongs_to association to fetch a single instance from another model.</p>\r\n	71	16	23	2017-06-05 16:40:49.897276	2017-06-05 16:40:49.897276	\N	\N	\N
768	<p><strong>Advantages</strong></p>\r\n\r\n<ul>\r\n\t<li>operations are simpler and easier in rails</li>\r\n\t<li>makes code efficient and simple</li>\r\n\t<li>it is the Active Record pattern</li>\r\n</ul>\r\n	72	16	23	2017-06-05 16:40:49.898944	2017-06-05 16:40:49.898944	\N	\N	\N
769	<p><strong><em>Migrations are used to make changes to the schema of the database</em></strong></p>\r\n\r\n<hr />\r\n<p>What migration can do:-</p>\r\n\r\n<hr />\r\n<p>1) Adding column/s to existing tables</p>\r\n\r\n<hr />\r\n<p>2)Removing column/s from existing tables</p>\r\n\r\n<hr />\r\n<p>3)Renaming the name of the column/s</p>\r\n\r\n<hr />\r\n<p>4)Making changes to the type of the column/s</p>\r\n\r\n<hr />\r\n<p>5)Dropping a table</p>\r\n	69	16	23	2017-06-05 16:40:49.900559	2017-06-05 16:40:49.900559	\N	\N	\N
770	<p><em><strong>ORM stands for Object relational mapping.</strong></em></p>\r\n\r\n<hr />\r\n<p><strong>Uses:- </strong></p>\r\n\r\n<hr />\r\n<p>1)ORM maps classes to tables</p>\r\n\r\n<hr />\r\n<p>2)ORM maps object attributes to table columns</p>\r\n\r\n<hr />\r\n<p>3)ORM maps Object to rows&nbsp;</p>\r\n\r\n<hr />\r\n<p>&nbsp;</p>\r\n	62	16	23	2017-06-05 16:40:49.902114	2017-06-05 16:40:49.902114	\N	\N	\N
771	<p><em><strong>rake db:migrate </strong></em>-&gt; performs a complete migration and updates the schema of the database whenever the command is called.</p>\r\n	64	16	23	2017-06-05 16:40:49.903628	2017-06-05 16:40:49.903628	\N	\N	\N
772	<ul>\r\n\t<li><strong>Create:-</strong>&nbsp;Create is used to save records to the DB</li>\r\n</ul>\r\n\r\n<p><strong>.save</strong> method is used for<strong> Create</strong></p>\r\n\r\n<ul>\r\n\t<li><strong>Read:-</strong>&nbsp;Read is used to fetch the data from the Database</li>\r\n</ul>\r\n\r\n<p>.all is method to find all the rows in the table</p>\r\n\r\n<p>example:- p = Product.all</p>\r\n\r\n<p>.find is a class method</p>\r\n\r\n<p>example:- product&nbsp;= Product.find&nbsp;</p>\r\n\r\n<ul>\r\n\t<li><strong>Update:-&nbsp;</strong>Update is used to update the exisiting record in the table</li>\r\n</ul>\r\n\r\n<p>&nbsp;example:- category = Category.find</p>\r\n\r\n<ul>\r\n\t<li><strong>Destroy:-</strong>&nbsp;Destroy is used to delete the record from the table</li>\r\n</ul>\r\n\r\n<p>example:- p = Product.find(1)</p>\r\n\r\n<p>p.destroy&nbsp;</p>\r\n	65	16	23	2017-06-05 16:40:49.905109	2017-06-05 16:40:49.905109	\N	\N	\N
773	<p><strong>Controller </strong>is the &quot;<strong>C</strong>&quot; in the <strong>MVC</strong> architecture</p>\r\n\r\n<p><strong>Controller</strong> makes the Data in the <strong>Model </strong>available to the <strong>View</strong>, so that it can display data to the user.</p>\r\n\r\n<p><strong>Controller </strong>updates user data &nbsp;to the <strong>Model</strong></p>\r\n\r\n<p>&nbsp;</p>\r\n	73	16	23	2017-06-05 16:40:49.906642	2017-06-05 16:40:49.906642	\N	\N	\N
774	<p><strong>Render_to</strong> :- is used in the controller to reply to a request</p>\r\n\r\n<p><strong>Redirect_to</strong> :- is used in the controller to redirect to a new URL(if the URL is mentioned in the controller)</p>\r\n	74	16	23	2017-06-05 16:40:49.908392	2017-06-05 16:40:49.908392	\N	\N	\N
775	<p><strong>7 actions in controller:-</strong><br />\r\n<strong>index:-</strong> to list resources<br />\r\n<strong>new:-</strong> to setup a form<br />\r\n<strong>create:-</strong> to save the data coming in from the form<br />\r\n<strong>show:-</strong> to show one specific resource along with its associated resources<br />\r\n<strong>edit:-</strong> to fetch the record to be edited and display it in a form<br />\r\n<strong>update:-</strong> to update the data coming in from the form<br />\r\n<strong>destroy:-</strong> to find the record to be deleted and invoke the destroy action</p>\r\n	66	16	23	2017-06-05 16:40:49.910729	2017-06-05 16:40:49.910729	\N	\N	\N
776	<p><em><strong>HTTP methods:-</strong></em></p>\r\n\r\n<p><br />\r\n<strong>GET</strong>&nbsp;corresponds to READ operation<br />\r\n<strong>POST</strong>&nbsp;corresponds to CREATE operation<br />\r\n<strong>PUT</strong>&nbsp;corresponds to UPDATE operation<br />\r\n<strong>DELETE</strong>&nbsp;corresponds to&nbsp;DESTROY<br />\r\n&nbsp;</p>\r\n	67	16	23	2017-06-05 16:40:49.912573	2017-06-05 16:40:49.912573	\N	\N	\N
777	<p>[resources]</p>\r\n\r\n<p>Rails.application.routes.draw do<br />\r\n&nbsp; resources :categories<br />\r\n&nbsp; resources :products<br />\r\n&nbsp; resources :sub_categories</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>[sub_categories controller]</p>\r\n\r\n<p>class SubCategoriesController &lt; ApplicationController<br />\r\n&nbsp; def index<br />\r\n&nbsp; &nbsp; @sub_categories = SubCategory.all<br />\r\n&nbsp; end<br />\r\n&nbsp; def new<br />\r\n&nbsp; &nbsp; @sub_category = SubCategory.new<br />\r\n&nbsp; end<br />\r\n&nbsp; def create<br />\r\n&nbsp; &nbsp; @sub_category = SubCategory.new(params[:sub_category].permit(:name, :category_id))<br />\r\n&nbsp; &nbsp; if @sub_category.save<br />\r\n&nbsp; &nbsp; &nbsp; redirect_to sub_category_path(@sub_category.id),<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; notice: &quot;Successfully added!&quot;<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; render action: &quot;new&quot;<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; def show<br />\r\n&nbsp; &nbsp; begin<br />\r\n&nbsp; &nbsp; &nbsp; @sub_category = SubCategory.find(params[:id])<br />\r\n&nbsp; &nbsp; rescue ActiveRecord::RecordNotFound<br />\r\n&nbsp; &nbsp; &nbsp; redirect_to sub_categories_path, notice: &quot;Record Not Found :-(&quot;<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; end<br />\r\n&nbsp; def edit<br />\r\n&nbsp; &nbsp; @sub_category = SubCategory.find(params[:id])<br />\r\n&nbsp; end<br />\r\n&nbsp; def update<br />\r\n&nbsp; &nbsp; @sub_category = SubCategory.find(params[:id])<br />\r\n&nbsp; &nbsp; if @sub_category.update_attributes(params[:sub_category].permit(:name,:category_id))<br />\r\n&nbsp; &nbsp; &nbsp; redirect_to sub_category_path(@sub_category.id), notice: &quot;Successfully updated!&quot;<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; render action: &quot;edit&quot;<br />\r\n&nbsp; &nbsp; end</p>\r\n\r\n<p>&nbsp; end<br />\r\n&nbsp; def destroy<br />\r\n&nbsp; &nbsp; @sub_category = SubCategory.find(params[:id])<br />\r\n&nbsp; &nbsp; @sub_category.destroy<br />\r\n&nbsp; &nbsp; redirect_to sub_categories_path, notice: &quot;Successfully deleted!&quot;</p>\r\n\r\n<p>&nbsp; end</p>\r\n\r\n<p>end<br />\r\n&nbsp;</p>\r\n\r\n<p>[views]</p>\r\n\r\n<p>index.html.erb</p>\r\n\r\n<p>&lt;h2&gt;Listing Sub Categories&lt;/h2&gt;<br />\r\n&lt;%= link_to &quot;Add Sub Category&quot;, new_sub_category_path %&gt;</p>\r\n\r\n<p>&lt;% if @sub_categories.empty? %&gt;<br />\r\n&lt;p&gt; No category found &lt;/p&gt;<br />\r\n&lt;% else %&gt;<br />\r\n&nbsp;&lt;ol&gt;<br />\r\n&nbsp; &nbsp;&lt;% @sub_categories.each do |sub_category| %&gt;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp;&lt;li&gt; &lt;%= link_to sub_category.name, sub_category_path(sub_category.id)%&gt; ,<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;%= sub_category.category_id %&gt;<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;% end %&gt;<br />\r\n&nbsp; &lt;/ol&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;% end %&gt;<br />\r\n&nbsp;</p>\r\n\r\n<p>new.html.erb</p>\r\n\r\n<p>&lt;h2&gt; Add Sub Category &lt;/h2&gt;</p>\r\n\r\n<p>&lt;%= form_for &nbsp;@sub_category do |f| %&gt;<br />\r\n&nbsp; &lt;%= f.label :Name %&gt;&lt;br/&gt;<br />\r\n&nbsp; &lt;%= f.text_field :name %&gt;&lt;br/&gt;</p>\r\n\r\n<p>&nbsp; &lt;%= f.label :category_id %&gt;&lt;br/&gt;<br />\r\n&nbsp; &lt;%= f.collection_select :category_id, Category.all, :id, :name, prompt:&quot;Select Category&quot; %&gt;&lt;br/&gt;&nbsp;</p>\r\n\r\n<p>&nbsp; &lt;%= f.submit &quot;submit&quot; %&gt;<br />\r\n&nbsp; &lt;% end %&gt;<br />\r\n&nbsp;</p>\r\n\r\n<p>show.html.erb</p>\r\n\r\n<p>&lt;h2&gt;&lt;%= @sub_category.name %&gt;&lt;/h2&gt;<br />\r\n&lt;%= link_to &quot;edit&quot;, edit_sub_category_path(@sub_category.id) %&gt; |<br />\r\n&lt;%= link_to &quot;destroy&quot;, sub_category_path(@sub_category.id), method: :delete, data: {confirm: &quot;Are you sure?&quot;} %&gt;</p>\r\n\r\n<p>&lt;p&gt;Name : &lt;%= @sub_category.name %&gt;&lt;/p&gt;<br />\r\n&lt;p&gt;Category_id :&lt;%= link_to @sub_category.category.name, category_path(@sub_category.category_id) %&gt;&lt;/p&gt;</p>\r\n\r\n<p>&lt;%= link_to &quot;Back&quot;, sub_categories_path %&gt;</p>\r\n\r\n<p>edit.html.erb</p>\r\n\r\n<p>&lt;h2&gt; Add Sub Category &lt;/h2&gt;</p>\r\n\r\n<p>&lt;%= form_for &nbsp;@sub_category do |f| %&gt;<br />\r\n&nbsp; &lt;%= f.label :Name %&gt;&lt;br/&gt;<br />\r\n&nbsp; &lt;%= f.text_field :name %&gt;&lt;br/&gt;</p>\r\n\r\n<p>&nbsp; &lt;%= f.label :category_id %&gt;&lt;br/&gt;<br />\r\n&nbsp; &lt;%= f.collection_select :category_id, Category.all, :id, :name, prompt:&quot;Select Category&quot; %&gt;&lt;br/&gt;&nbsp;</p>\r\n\r\n<p>&nbsp; &lt;%= f.submit &quot;submit&quot; %&gt;<br />\r\n&nbsp; &lt;% end %&gt;<br />\r\n&nbsp;</p>\r\n	68	12	22	2017-06-05 18:08:39.887134	2017-06-05 18:08:39.887134	\N	\N	\N
800	<p>numbers = [2,5,5,5,3,4,1,2]</p>\r\n\r\n<p>numbers_hash = {}<br />\r\nodd_values = []</p>\r\n\r\n<p>numbers.each do |number|</p>\r\n\r\n<p>numbers_hash[number] = numbers.count(number)</p>\r\n\r\n<p>end</p>\r\n\r\n<p>key_values = numbers_hash.values</p>\r\n\r\n<p>key_values.each do |value|</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (value % 2 &nbsp;== 1 )<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; odd_values.push(value)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end</p>\r\n\r\n<p>end</p>\r\n\r\n<p>value = odd_values.sort.reverse[0]</p>\r\n\r\n<p>puts numbers_hash.key(value)</p>\r\n	76	19	24	2017-06-15 10:00:42.177167	2017-06-15 10:00:42.177167	\N	\N	\N
778	<p>class SubCategoriesController &lt; ApplicationController</p>\r\n\r\n<p>def index<br />\r\n@sub_categories = SubCategory.all<br />\r\nend</p>\r\n\r\n<p>def new<br />\r\n@sub_category = SubCategory.new<br />\r\nend</p>\r\n\r\n<p>def create<br />\r\n@sub_category = SubCategory.new(params[:sub_category].permit(:name, :category_id))<br />\r\nif @sub_category.save<br />\r\n&nbsp;&nbsp; &nbsp;redirect_to sub_categories_path<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;render action: &quot;new&quot;<br />\r\nend<br />\r\nend<br />\r\n&nbsp;def show<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;#@category = Category.find(params[:id])<br />\r\n@sub_category = SubCategory.find(params[:id])<br />\r\n&nbsp;end</p>\r\n\r\n<p>&nbsp;def edit</p>\r\n\r\n<p>@sub_category = SubCategory.find(params[:id])<br />\r\n&nbsp;end</p>\r\n\r\n<p>&nbsp;def update<br />\r\n@sub_category = SubCategory.find(params[:id])<br />\r\nif @sub_category.update_attributes(params[:sub_category].permit(:name, :category_id))<br />\r\n&nbsp;&nbsp; &nbsp;redirect_to sub_categories_path<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;render action: &quot;edit&quot;<br />\r\n&nbsp;end<br />\r\nend<br />\r\ndef destroy<br />\r\n&nbsp;@sub_category = SubCategory.find(params[:id])<br />\r\n&nbsp;@sub_category.destroy<br />\r\nredirect_to sub_categories_path<br />\r\nend</p>\r\n\r\n<p>end<br />\r\n&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>views</p>\r\n\r\n<p>&lt;h2&gt;Add SubCategory&lt;/h2&gt;</p>\r\n\r\n<p>&lt;%= form_for @sub_category do |f| %&gt;</p>\r\n\r\n<p>&lt;%= f.label :name %&gt;&lt;br/&gt;<br />\r\n&lt;%= f.text_field :name %&gt;&lt;br/&gt;</p>\r\n\r\n<p>&lt;%= f.label :category_id %&gt;&lt;br/&gt;<br />\r\n&lt;%= f.collection_select :category_id, Category.all,:id, :formatted_name, prompt:&quot;Select Category&quot; %&gt;&lt;br/&gt;</p>\r\n\r\n<p>&lt;%= f.submit &quot;Submit&quot; %&gt;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&lt;% end %&gt;</p>\r\n\r\n<p>index</p>\r\n\r\n<p>&lt;h2&gt;SubCategory:&lt;%=@sub_categories.length &nbsp;%&gt;&lt;/h2&gt;<br />\r\n&nbsp;</p>\r\n\r\n<p>&lt;ol&gt;<br />\r\n&lt;% @sub_categories.each do |sub_category| %&gt;<br />\r\n&lt;li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;%= link_to sub_category.name,sub_category_path(sub_category.id) %&gt;<br />\r\n&lt;/li&gt;<br />\r\n&lt;% end %&gt;</p>\r\n\r\n<p>&lt;/ol&gt;</p>\r\n\r\n<p>&lt;%= link_to &quot;Add sub_category&quot;,new_sub_category_path %&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>show</p>\r\n\r\n<p>&lt;h2&gt;&lt;%= @sub_category.name %&gt; &lt;/h2&gt;<br />\r\n&lt;%= link_to &quot;edit&quot;, edit_sub_category_path(@sub_category.id) %&gt;<br />\r\n&lt;%= link_to &quot;destroy&quot;, sub_category_path(@sub_category.id), method: :delete, data:{confirm:&quot;Are you sure&quot;} %&gt;</p>\r\n\r\n<p><br />\r\n&lt;p&gt;Name: &lt;%= @sub_category.name %&gt; &lt;/p&gt;<br />\r\n&lt;p&gt;Category: &lt;%= @sub_category.id %&gt;&lt;/p&gt;</p>\r\n\r\n<p><br />\r\n&lt;%= link_to &quot;back&quot;,sub_categories_path %&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>edit</p>\r\n\r\n<p>&lt;h2&gt;Edit SubCategory&lt;/h2&gt;</p>\r\n\r\n<p>&lt;%= form_for @sub_category do |f| %&gt;</p>\r\n\r\n<p>&lt;%= f.label :name %&gt;&lt;br/&gt;<br />\r\n&lt;%= f.text_field :name %&gt;&lt;br/&gt;</p>\r\n\r\n<p>&lt;%= f.label :category_id %&gt;&lt;br/&gt;<br />\r\n&lt;%= f.collection_select :category_id, Category.all,:id, :formatted_name, prompt:&quot;Select Category&quot; %&gt;&lt;br/&gt;</p>\r\n\r\n<p>&lt;%= f.submit &quot;Submit&quot; %&gt;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&lt;% end %&gt;</p>\r\n	68	7	22	2017-06-05 18:10:33.330483	2017-06-05 18:10:33.330483	\N	\N	\N
779	<p>a</p>\r\n	70	13	23	2017-06-06 13:05:15.389694	2017-06-06 13:05:15.389694	\N	\N	\N
780	<p>a</p>\r\n	71	13	23	2017-06-06 13:05:15.39228	2017-06-06 13:05:15.39228	\N	\N	\N
781	<p>a</p>\r\n	72	13	23	2017-06-06 13:05:15.39388	2017-06-06 13:05:15.39388	\N	\N	\N
782	<p>a</p>\r\n	69	13	23	2017-06-06 13:05:15.395468	2017-06-06 13:05:15.395468	\N	\N	\N
783	<p>a</p>\r\n	62	13	23	2017-06-06 13:05:15.397246	2017-06-06 13:05:15.397246	\N	\N	\N
784	<p>a</p>\r\n	64	13	23	2017-06-06 13:05:15.398899	2017-06-06 13:05:15.398899	\N	\N	\N
786	<p>a</p>\r\n	73	13	23	2017-06-06 13:05:15.402572	2017-06-06 13:05:15.402572	\N	\N	\N
787	<p>a</p>\r\n	74	13	23	2017-06-06 13:05:15.404428	2017-06-06 13:05:15.404428	\N	\N	\N
788	<p>a</p>\r\n	66	13	23	2017-06-06 13:05:15.406053	2017-06-06 13:05:15.406053	\N	\N	\N
790	<p>Answer 1.</p>\r\n	76	13	24	2017-06-14 11:26:36.552213	2017-06-14 11:26:36.552213	\N	\N	\N
791	<p>Answer 2.</p>\r\n	77	13	24	2017-06-14 11:26:36.559709	2017-06-14 11:26:36.559709	\N	\N	\N
792	<p>numbers = &nbsp;[2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>num_count = {}</p>\r\n\r\n<p><br />\r\nnumbers.each do |number|<br />\r\n&nbsp; #puts number<br />\r\n&nbsp; if num_count.has_key?(number.to_i)<br />\r\n# &nbsp; &nbsp;puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = num_count[number].to_i + 1 #increment by 1 if it has key<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; # puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = &nbsp;1<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;<br />\r\nnum_count.each do |key, value|<br />\r\n&nbsp; if value.to_i%2!=0 #not even &nbsp;den<br />\r\n&nbsp; &nbsp; puts key<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;</p>\r\n	76	4	24	2017-06-14 17:34:59.745832	2017-06-14 17:34:59.745832	\N	\N	\N
793	<p>numbers = &nbsp;[2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>num_count = {}</p>\r\n\r\n<p><br />\r\nnumbers.each do |number|<br />\r\n&nbsp; #puts number<br />\r\n&nbsp; if num_count.has_key?(number.to_i)<br />\r\n# &nbsp; &nbsp;puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = num_count[number].to_i + 1 #increment by 1 if it has key<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; # puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = &nbsp;1<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;<br />\r\nnum_count.each do |key, value|<br />\r\n&nbsp; if value.to_i%2!=0 #not even &nbsp;den<br />\r\n&nbsp; &nbsp; puts key<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;</p>\r\n	76	4	24	2017-06-14 17:34:59.852361	2017-06-14 17:34:59.852361	\N	\N	\N
794	<p>numbers = &nbsp;[2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>num_count = {}</p>\r\n\r\n<p><br />\r\nnumbers.each do |number|<br />\r\n&nbsp; #puts number<br />\r\n&nbsp; if num_count.has_key?(number.to_i)<br />\r\n# &nbsp; &nbsp;puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = num_count[number].to_i + 1 #increment by 1 if it has key<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; # puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = &nbsp;1<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;<br />\r\nnum_count.each do |key, value|<br />\r\n&nbsp; if value.to_i%2!=0 #not even &nbsp;den<br />\r\n&nbsp; &nbsp; puts key<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;</p>\r\n	76	4	24	2017-06-14 17:34:59.930375	2017-06-14 17:34:59.930375	\N	\N	\N
795	<p>numbers = &nbsp;[2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>num_count = {}</p>\r\n\r\n<p><br />\r\nnumbers.each do |number|<br />\r\n&nbsp; #puts number<br />\r\n&nbsp; if num_count.has_key?(number.to_i)<br />\r\n# &nbsp; &nbsp;puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = num_count[number].to_i + 1 #increment by 1 if it has key<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; # puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = &nbsp;1<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;<br />\r\nnum_count.each do |key, value|<br />\r\n&nbsp; if value.to_i%2!=0 #not even &nbsp;den<br />\r\n&nbsp; &nbsp; puts key<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;</p>\r\n	76	4	24	2017-06-14 17:35:00.019425	2017-06-14 17:35:00.019425	\N	\N	\N
796	<p>numbers = &nbsp;[2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>num_count = {}</p>\r\n\r\n<p><br />\r\nnumbers.each do |number|<br />\r\n&nbsp; #puts number<br />\r\n&nbsp; if num_count.has_key?(number.to_i)<br />\r\n# &nbsp; &nbsp;puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = num_count[number].to_i + 1 #increment by 1 if it has key<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; # puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = &nbsp;1<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;<br />\r\nnum_count.each do |key, value|<br />\r\n&nbsp; if value.to_i%2!=0 #not even &nbsp;den<br />\r\n&nbsp; &nbsp; puts key<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;</p>\r\n	76	4	24	2017-06-14 17:35:00.070117	2017-06-14 17:35:00.070117	\N	\N	\N
797	<p>numbers = &nbsp;[2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>num_count = {}</p>\r\n\r\n<p><br />\r\nnumbers.each do |number|<br />\r\n&nbsp; #puts number<br />\r\n&nbsp; if num_count.has_key?(number.to_i)<br />\r\n# &nbsp; &nbsp;puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = num_count[number].to_i + 1 #increment by 1 if it has key<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; # puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = &nbsp;1<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;<br />\r\nnum_count.each do |key, value|<br />\r\n&nbsp; if value.to_i%2!=0 #not even &nbsp;den<br />\r\n&nbsp; &nbsp; puts key<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;</p>\r\n	76	4	24	2017-06-14 17:35:00.35066	2017-06-14 17:35:00.35066	\N	\N	\N
798	<p>numbers = &nbsp;[2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>num_count = {}</p>\r\n\r\n<p><br />\r\nnumbers.each do |number|<br />\r\n&nbsp; #puts number<br />\r\n&nbsp; if num_count.has_key?(number.to_i)<br />\r\n# &nbsp; &nbsp;puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = num_count[number].to_i + 1 #increment by 1 if it has key<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; # puts number<br />\r\n&nbsp; &nbsp; num_count[number.to_i] = &nbsp;1<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;<br />\r\nnum_count.each do |key, value|<br />\r\n&nbsp; if value.to_i%2!=0 #not even &nbsp;den<br />\r\n&nbsp; &nbsp; puts key<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Apperes odd numbers of times&quot;</p>\r\n	76	4	24	2017-06-14 17:35:01.658353	2017-06-14 17:35:01.658353	\N	\N	\N
799	<p>numbers = [2,5,4,5,2,1,3,5]<br />\r\nrepeats = {}</p>\r\n\r\n<p>numbers.each do |number|<br />\r\n&nbsp; repeats[number] = numbers.count(number)<br />\r\nend</p>\r\n\r\n<p>repetitions = repeats.values</p>\r\n\r\n<p>puts repetitions.find_all{|repetition| repetition.odd? &amp;&amp; repetition &gt; 1}</p>\r\n	76	8	24	2017-06-15 09:51:31.64646	2017-06-15 09:51:31.64646	\N	\N	\N
822	<p>puts &quot;Enter your number&quot;<br />\r\nnumber = gets<br />\r\nn=number.to_i</p>\r\n\r\n<p>if n &gt;= 1<br />\r\nputs &quot;Number is positive&quot;<br />\r\nelsif provide all the numbers from n = 1<br />\r\nputs &quot;Numbers are provided&quot;<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n	102	43	27	2017-07-04 18:14:32.272106	2017-07-04 18:14:32.272106	\N	\N	\N
804	<p>require &#39;pry&#39;<br />\r\nnumbers = [2,5,4,5,2,1,3,5]</p>\r\n\r\n<p>number_hash = {<br />\r\n&nbsp; 1 =&gt; 0,<br />\r\n&nbsp; 2 =&gt; 0,<br />\r\n&nbsp; 3 =&gt; 0,<br />\r\n&nbsp; 4 =&gt; 0,<br />\r\n&nbsp; 5 =&gt; 0<br />\r\n}</p>\r\n\r\n<p>numbers.each do |number|<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; if number_hash.has_key? number<br />\r\n&nbsp; &nbsp; number_hash[number] += 1<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts number_hash</p>\r\n\r\n<p>number_hash.each do |number, count|<br />\r\n&nbsp; if count.odd? &amp;&amp; count &gt; 1<br />\r\n&nbsp; &nbsp; puts &quot;#{number} appears an odd (#{count}) number of times&quot;<br />\r\n&nbsp; end<br />\r\nend<br />\r\n&nbsp;</p>\r\n	76	3	24	2017-06-15 12:44:35.531153	2017-06-15 12:44:35.531153	\N	\N	\N
805	<p><strong>def camelcase(input_string)<br />\r\n&nbsp; input_string = input_string.split(&quot; &quot;)<br />\r\n&nbsp; puts input_string<br />\r\n&nbsp; output_string = &quot;&quot;<br />\r\n&nbsp; input_string.each do |is|<br />\r\n&nbsp; &nbsp; output_string += is.capitalize<br />\r\n&nbsp; end<br />\r\n&nbsp; return output_string<br />\r\nend</strong></p>\r\n\r\n<p><strong>puts &quot;Enter a string&quot;<br />\r\ninput_string = gets.chomp</strong></p>\r\n\r\n<p><strong>result = camelcase(input_string)<br />\r\nputs result</strong><br />\r\n&nbsp;</p>\r\n	77	3	24	2017-06-15 12:44:35.586351	2017-06-15 12:44:35.586351	\N	\N	\N
806	<p>def Prefill(n ,str)<br />\r\n&nbsp;&nbsp; &nbsp;Array.new(n, str)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;<br />\r\nend<br />\r\nputs Prefill(3, Prefill(2,&quot;vin&quot;))</p>\r\n\r\n<p>#condition 4 fail&#39;s&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	78	4	25	2017-06-19 14:31:07.569671	2017-06-19 14:31:07.569671	\N	\N	\N
808	<p>require &#39;pry&#39;<br />\r\ndef prefill(num, value)<br />\r\n&nbsp; output = []<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; number = num.to_i<br />\r\n&nbsp; if number &gt; 0<br />\r\n&nbsp; &nbsp; number.times do<br />\r\n&nbsp; &nbsp; &nbsp; output.push(value)<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; puts &quot;#{num} is invalid&quot;<br />\r\n&nbsp; end</p>\r\n\r\n<p>&nbsp; return output<br />\r\nend</p>\r\n\r\n<p>result = prefill(3,1)<br />\r\nputs result.join(&quot;,&quot;)</p>\r\n\r\n<p>result = prefill(2,&quot;abc&quot;)<br />\r\nputs result.join(&quot;,&quot;)<br />\r\n#binding.pry<br />\r\nresult = prefill(&quot;1&quot;, 1)<br />\r\nputs result.join(&quot;,&quot;)<br />\r\n#binding.pry<br />\r\nresult = prefill(3, prefill(2,&#39;2d&#39;))<br />\r\nputs result.join(&quot;,&quot;)<br />\r\n#binding.pry<br />\r\nresult = prefill(&quot;xyz&quot;, 1)<br />\r\nputs result.join(&quot;,&quot;)<br />\r\n&nbsp;</p>\r\n	78	3	25	2017-06-19 16:24:09.769463	2017-06-19 16:24:09.769463	\N	\N	\N
809	<p>def prefill(number,value)<br />\r\n&nbsp; prefill_result = []<br />\r\n&nbsp; if number.is_a? Numeric || number.is_a? String<br />\r\n&nbsp; &nbsp; prefill_result.push(number * value)<br />\r\n&nbsp; &nbsp; return prefill_result<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter the number of times&quot;<br />\r\nnumber = gets.chomp<br />\r\nputs &quot;Enter the value of array&quot;<br />\r\nvalue = gets.chomp<br />\r\nprefill(number,value)<br />\r\n&nbsp;</p>\r\n\r\n<p>sir i am getting error tconstant (;) and i dont know how to solve it.....<br />\r\n&nbsp;</p>\r\n	78	12	25	2017-06-19 18:24:45.543834	2017-06-19 18:24:45.543834	\N	\N	\N
810	<p>def prefill(n,v)</p>\r\n\r\n<p>&nbsp; &nbsp; if n &lt;= 0<br />\r\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;puts &quot;n is invalid&quot;<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; return &quot;#{v}&quot;*n<br />\r\n&nbsp; &nbsp; end<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter n&quot;<br />\r\nn = gets.to_i<br />\r\nputs &quot;Enter v&quot;<br />\r\nv = gets.chomp<br />\r\nputs prefill(n,v)</p>\r\n	78	5	25	2017-06-19 18:26:27.213432	2017-06-19 18:26:27.213432	\N	\N	\N
811	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;<br />\r\nrequire &#39;pry&#39;<br />\r\nrequire &#39;pp&#39;</p>\r\n\r\n<p>businesses = [&quot;Dct Academy&quot;, &quot;Star Bucks Indiranagar&quot;, &quot;Bangalore Central JP Nagar&quot;, &quot;Manyata Tech Park&quot;]</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p>businesses.each do |business|<br />\r\n&nbsp; #binding.pry<br />\r\n&nbsp; response = HTTParty.get(&quot;#{url}address=#{business}&quot;)<br />\r\n&nbsp; result = JSON.parse(response.body)<br />\r\n&nbsp; #puts response<br />\r\n&nbsp; #pp result<br />\r\n&nbsp; puts &quot;#{business}&quot;<br />\r\n&nbsp; puts &quot;address -#{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;<br />\r\n&nbsp; puts &quot;co ordinates - #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lat&quot;]} - #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lng&quot;]} &quot;<br />\r\nend<br />\r\n&nbsp;</p>\r\n	101	3	26	2017-06-22 17:00:20.57442	2017-06-22 17:00:20.57442	\N	\N	\N
812	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;<br />\r\nrequire &#39;pp&#39;</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p>puts &quot;Enter the address&quot;<br />\r\naddress = gets.chomp</p>\r\n\r\n<p>response = HTTParty.get(&quot;#{url}&amp;address=#{address}&quot;)<br />\r\nresult = JSON.parse(response.body)<br />\r\npp result<br />\r\nputs &quot;address is : #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;<br />\r\nputs &quot;Location of latitude is: #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lat&quot;]} and langitude is #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lng&quot;]}&quot;</p>\r\n	101	20	26	2017-06-22 17:19:44.161137	2017-06-22 17:19:44.161137	\N	\N	\N
813	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;<br />\r\nrequire &#39;pp&#39;</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p>puts &quot;Enter the address&quot;<br />\r\naddress = gets.chomp</p>\r\n\r\n<p><br />\r\nresponse = HTTParty.get(&quot;#{url}&amp;address=#{address}&quot;)<br />\r\nresult = JSON.parse(response.body)</p>\r\n\r\n<p>puts &quot;Address is : #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;<br />\r\nputs &quot;Co-ordinates : #{result[&quot;results&quot;][0][&quot;geometry&quot;]}&quot;<br />\r\n&nbsp;</p>\r\n	101	12	26	2017-06-22 17:51:32.336878	2017-06-22 17:51:32.336878	\N	\N	\N
814	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;<br />\r\nurl = &quot;https://maps.googleapis.com/maps/api/geocode/json?&amp;key=AIzaSyB4xMjeaCwNPblq3ny7D5n9N33SPnbsxts&quot;<br />\r\nputs &quot;enter the address&quot;<br />\r\naddress=gets.chomp<br />\r\nresponse = HTTParty.get(&quot;#{url}&amp;address=#{address}&quot;)<br />\r\nresult = JSON.parse(response.body)<br />\r\nputs &quot;DCT Academy: #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;</p>\r\n\r\n<p>&nbsp;</p>\r\n	101	10	26	2017-06-22 17:55:09.722787	2017-06-22 17:55:09.722787	\N	\N	\N
823	<p>no = 1</p>\r\n\r\n<p>puts 0-no</p>\r\n	90	36	27	2017-07-04 19:28:21.674022	2017-07-04 19:28:21.674022	\N	\N	\N
824	<p>puts &quot;Enter a no.&quot;<br />\r\nn = gets.to_i<br />\r\ncount = 0<br />\r\nn.times do<br />\r\n&nbsp; a += 1<br />\r\n&nbsp; puts count<br />\r\nend</p>\r\n	102	36	27	2017-07-04 19:28:21.680067	2017-07-04 19:28:21.680067	\N	\N	\N
825	<p>#get the number from user<br />\r\nputs &quot;Enter the number&quot;<br />\r\ninput = gets.to_i<br />\r\nputs &quot;The opposite is #{input*-1}&quot; #compute the output by multiplying input by -1. if it is a positive number the result will be its negative. if negative it will be the positive</p>\r\n	90	42	27	2017-07-05 03:19:44.071517	2017-07-05 03:19:44.071517	\N	\N	\N
826	<p>puts &quot;enter an integer greater than or equal to one&quot;<br />\r\ninput &nbsp;= gets.to_i<br />\r\ninput_orignal = input<br />\r\nnums = []<br />\r\nwhile nums.length&lt;input_orignal<br />\r\n&nbsp;&nbsp; &nbsp;nums.push(input)<br />\r\n&nbsp;&nbsp; &nbsp;input = input -1<br />\r\nend<br />\r\nputs nums.reverse.to_s</p>\r\n	102	42	27	2017-07-05 03:19:44.081506	2017-07-05 03:19:44.081506	\N	\N	\N
827	<p>puts -gets.to_i</p>\r\n	90	39	27	2017-07-05 04:44:02.629904	2017-07-05 04:44:02.629904	\N	\N	\N
815	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;JSON&#39;</p>\r\n\r\n<p>url = &quot;http://maps.googleapis.com/maps/api/geocode/json?address=DctAcademy&quot;</p>\r\n\r\n<p><br />\r\nputs &quot;Enter the name&quot;<br />\r\naddress = gets.chomp</p>\r\n\r\n<p>response = HTTParty.get(&quot;#{url}&amp;addresses=#{address}&quot;)<br />\r\nresult = JSON.parse(response.body)</p>\r\n\r\n<p>elements = result[&quot;results&quot;][0][&quot;formatted_address&quot;]<br />\r\nco_ordinates = result[&quot;results&quot;][0][&quot;geometry&quot;]<br />\r\nputs &quot;address:#{elements}&quot;<br />\r\nputs &quot;co_ordinates:#{co_ordinates[&quot;location&quot;][&quot;lat&quot;]},#{co_ordinates[&quot;location&quot;][&quot;lng&quot;]}&quot;</p>\r\n	101	7	26	2017-06-22 18:10:17.499176	2017-06-22 18:10:17.499176	\N	\N	\N
816	<p>require &quot;httparty&quot;<br />\r\nrequire &quot;JSON&quot;</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p><br />\r\nbusinesses = [&quot;Dct Academy&quot;, &quot;Star Bucks Indiranagar&quot;, &quot;Bangalore Central JP Nagar&quot;, &quot;Manyata Tech Park&quot;]</p>\r\n\r\n<p>businesses.each do |business|<br />\r\n&nbsp; response = HTTParty.get(&quot;#{url}address=#{business}&quot;)<br />\r\n&nbsp; result = JSON.parse(response.body)<br />\r\n&nbsp; puts business<br />\r\n&nbsp; puts &quot;Address: #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;<br />\r\n&nbsp; puts &quot;Lat: #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lat&quot;]}&quot;<br />\r\n&nbsp; puts &quot;lng: #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lng&quot;]}&quot;<br />\r\n&nbsp; puts &quot;\\n&quot;<br />\r\nend</p>\r\n	101	5	26	2017-06-22 19:33:21.643315	2017-06-22 19:33:21.643315	\N	\N	\N
817	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p>puts &quot;Enter the address &quot;<br />\r\naddress = gets.chomp<br />\r\nresponse = HTTParty.get(&quot;#{url}address=#{address}&quot;)<br />\r\nresult = JSON.parse(response.body)<br />\r\nputs &quot;Address is : #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]} \\n Location : #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lat&quot;]}:#{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lng&quot;]} &quot;</p>\r\n	101	4	26	2017-06-23 07:54:25.134565	2017-06-23 07:54:25.134565	\N	\N	\N
818	<p>#Defining an array&nbsp;<br />\r\nrequire &#39;httparty&#39;<br />\r\nrequire &#39;JSON&#39;<br />\r\nrequire &#39;pry&#39;<br />\r\nbusinesses = [&quot;Dct Academy&quot;, &quot;Star Bucks Indiranagar&quot;, &quot;Bangalore Central JP Nagar&quot;, &quot;Manyata Tech Park&quot;]</p>\r\n\r\n<p>businesses.each do |business|<br />\r\n&nbsp;&nbsp; &nbsp;address = business.split(&quot; &quot;).join(&#39;%20&#39;)<br />\r\n&nbsp;&nbsp; &nbsp;puts url = &quot;http://maps.googleapis.com/maps/api/geocode/json?address=#{address}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;response = HTTParty.get(&quot;#{url}&quot;)<br />\r\n&nbsp;&nbsp; &nbsp;result = JSON.parse(response.body)<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;-&quot; * 50<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Address of : #{business}\\n&quot;<br />\r\n&nbsp;&nbsp; &nbsp;puts result[&quot;results&quot;][0][&quot;formatted_address&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;co ordinates : #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lat&quot;]}, #{result[&quot;results&quot;][0][&quot;geometry&quot;][&quot;location&quot;][&quot;lng&quot;]}&quot;<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Results :</p>\r\n\r\n<p>C:\\wd-april\\rails\\jobsearch&gt;ruby googleaddress.rb<br />\r\nhttp://maps.googleapis.com/maps/api/geocode/json?address=Dct%20Academy<br />\r\n--------------------------------------------------<br />\r\nAddress of : Dct Academy<br />\r\n#430, A 560011, 28th Main Rd, 4th Block, Bengaluru, Karnataka, India<br />\r\nco ordinates : 12.9299899, 77.5853953<br />\r\nhttp://maps.googleapis.com/maps/api/geocode/json?address=Star%20Bucks%20Indiranagar<br />\r\n--------------------------------------------------<br />\r\nAddress of : Star Bucks Indiranagar<br />\r\nSamrat No.2013, 100 Ft Road, HAL 2nd Stage, Indiranagar, Bengaluru, Karnataka 560008, India<br />\r\nco ordinates : 12.9655455, 77.6417877<br />\r\nhttp://maps.googleapis.com/maps/api/geocode/json?address=Bangalore%20Central%20JP%20Nagar<br />\r\n--------------------------------------------------<br />\r\nAddress of : Bangalore Central JP Nagar<br />\r\n5th Floor, Central, 45th Cross, J.P. Nagar 2nd Phase, Bengaluru, Karnataka 560069, India<br />\r\nco ordinates : 12.9163983, 77.59240799999999<br />\r\nhttp://maps.googleapis.com/maps/api/geocode/json?address=Manyata%20Tech%20Park<br />\r\n--------------------------------------------------<br />\r\nAddress of : Manyata Tech Park<br />\r\n2nd Floor, N1 Building, Opp. BEL Corporate Office, Outer Ring Road, Nagavara, Bengaluru, Karnataka 560045, India<br />\r\nco ordinates : 13.049981, 77.6197476<br />\r\n&nbsp;</p>\r\n	101	11	26	2017-06-23 10:24:42.193408	2017-06-23 10:24:42.193408	\N	\N	\N
1	false	1	13	1	2017-04-21 07:00:36.046962	2017-07-04 13:09:57.062739	\N	wrong	\N
6	false	1	8	1	2017-04-21 07:11:12.296973	2017-07-04 13:09:57.114684	\N	wrong	\N
12	true	2	3	1	2017-04-21 07:11:23.189425	2017-07-04 13:09:57.246403	\N	correct	\N
18	n1 = 100	5	12	1	2017-04-21 07:11:45.710483	2017-07-04 13:09:57.336523	\N	correct	\N
27	true	2	14	1	2017-04-21 07:12:15.138268	2017-07-04 13:09:57.421663	\N	correct	\N
33	n1 = 100	5	4	1	2017-04-21 07:12:18.441598	2017-07-04 13:09:57.488452	\N	correct	\N
42	true	2	5	1	2017-04-21 07:12:24.583292	2017-07-04 13:09:57.599678	\N	correct	\N
48	n1 = 100	5	6	1	2017-04-21 07:12:38.481888	2017-07-04 13:09:57.670892	\N	correct	\N
57	["mango", "water melon", "apple"]	9	3	2	2017-04-24 06:17:58.75999	2017-07-04 13:09:57.756968	\N	correct	\N
67	["mango", "water melon", "apple"]	9	5	2	2017-04-24 06:20:44.227692	2017-07-04 13:09:57.835735	\N	correct	\N
77	["mango", "water melon", "apple"]	9	8	2	2017-04-24 06:22:26.175851	2017-07-04 13:09:57.921101	\N	correct	\N
87	["mango, water melon, \r\n apple"] 	9	12	2	2017-04-24 06:32:14.810661	2017-07-04 13:09:58.007993	\N	wrong	\N
92	["mango", "water melon", "apple"]	9	15	2	2017-04-24 06:39:32.998791	2017-07-04 13:09:58.047827	\N	correct	\N
118	true	14	15	4	2017-04-25 06:18:16.211018	2017-07-04 13:09:58.228018	\N	correct	\N
133	true	14	2	4	2017-04-25 06:21:00.141582	2017-07-04 13:09:58.325203	\N	correct	\N
141	false	1	9	1	2017-04-25 11:36:01.090281	2017-07-04 13:09:58.37441	\N	wrong	\N
149	Fixnum	11	9	2	2017-04-25 11:44:07.805414	2017-07-04 13:09:58.440413	\N	correct	\N
177	true	12	13	2	2017-04-26 11:34:55.768172	2017-07-04 13:09:58.642752	\N	wrong	\N
245	when both the key and values matter to us	27	3	7	2017-04-27 06:09:34.348574	2017-07-04 13:09:58.701207	\N	correct	\N
194	[	9	11	2	2017-04-26 17:45:55.128374	2017-07-04 13:09:58.747079	\N	wrong	\N
198	true	1	11	1	2017-04-26 17:48:40.355895	2017-07-04 13:09:58.779446	\N	correct	\N
250	when both the key and values matter to us	27	4	7	2017-04-27 06:10:43.029867	2017-07-04 13:09:58.849715	\N	correct	\N
211	true	23	11	7	2017-04-27 06:03:16.427629	2017-07-04 13:09:58.903509	\N	correct	\N
215	when we have a large set of data 	27	11	7	2017-04-27 06:03:16.434823	2017-07-04 13:09:58.936129	\N	wrong	\N
220	when both the key and values matter to us	27	15	7	2017-04-27 06:06:19.94485	2017-07-04 13:09:58.98134	\N	correct	\N
235	when both the key and values matter to us	27	8	7	2017-04-27 06:08:18.251613	2017-07-04 13:09:59.248178	\N	correct	\N
252	false	24	5	7	2017-04-27 06:12:00.093765	2017-07-04 13:09:59.336917	\N	wrong	\N
255	when we have a large set of data 	27	5	7	2017-04-27 06:12:00.116969	2017-07-04 13:09:59.359711	\N	wrong	\N
260	when we have a large set of data 	27	2	7	2017-04-27 06:12:38.737015	2017-07-04 13:09:59.43338	\N	wrong	\N
280	true	23	13	7	2017-05-01 04:34:23.976481	2017-07-04 13:09:59.62348	\N	correct	\N
284	to save information in an ordered collection 	27	13	7	2017-05-01 04:34:24.025997	2017-07-04 13:09:59.650427	\N	wrong	\N
305	true	33	9	13	2017-05-03 06:10:09.529504	2017-07-04 13:09:59.876477	\N	correct	\N
313	false	35	3	13	2017-05-03 06:14:09.740399	2017-07-04 13:10:00.101701	\N	correct	\N
338	true	36	8	13	2017-05-03 06:23:46.549177	2017-07-04 13:10:00.346564	\N	correct	\N
349	false	35	6	13	2017-05-03 06:26:34.101129	2017-07-04 13:10:00.439451	\N	correct	\N
360	true	34	19	13	2017-05-03 06:27:59.676474	2017-07-04 13:10:00.572838	\N	correct	\N
371	true	33	2	13	2017-05-03 06:29:19.666616	2017-07-04 13:10:00.679925	\N	correct	\N
380	true	36	20	13	2017-05-03 06:32:04.948323	2017-07-04 13:10:00.768879	\N	correct	\N
395	true	33	16	13	2017-05-03 06:37:36.012464	2017-07-04 13:10:01.027469	\N	correct	\N
819	<p>puts &quot;Enter the number to get opposite of it&quot;</p>\r\n\r\n<p>number=gets.to_i</p>\r\n\r\n<p>puts &quot;#{-(number)}&quot;</p>\r\n	90	34	27	2017-07-04 18:08:22.882549	2017-07-04 18:08:22.882549	\N	\N	\N
820	<p>puts &quot;Enter the number to print all positive integer&quot;<br />\r\nnumber=gets.to_i<br />\r\nn=0<br />\r\nif number &lt; 0<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;Enter a positive integer&quot;<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;number.times do<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts n += 1<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend</p>\r\n	102	34	27	2017-07-04 18:08:22.914661	2017-07-04 18:08:22.914661	\N	\N	\N
821	<p>number.abs</p>\r\n	90	43	27	2017-07-04 18:14:32.254717	2017-07-04 18:14:32.254717	\N	\N	\N
830	<p>puts &quot;Enter a positive number&quot;<br />\r\nnumber = gets.to_i.abs<br />\r\nresult = []</p>\r\n\r\n<p>i=1<br />\r\nwhile i&lt;=number<br />\r\nresult &lt;&lt; number - (number-i)<br />\r\ni=i+1<br />\r\nend</p>\r\n\r\n<p>puts result.join(&quot;,&quot;)</p>\r\n	102	40	27	2017-07-05 14:26:07.887782	2017-07-05 14:26:07.887782	\N	\N	\N
831	<p>puts &quot;Enter your number&quot;</p>\r\n\r\n<p>puts number = -gets.to_i</p>\r\n	90	38	27	2017-07-05 16:35:39.493396	2017-07-05 16:35:39.493396	\N	\N	\N
832	<p>puts &quot;Enter your number&quot;</p>\r\n\r\n<p>num = gets.to_i</p>\r\n\r\n<p>n = 0</p>\r\n\r\n<p>if num &lt; 0</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;puts &quot;The number #{num} is not valid&quot;</p>\r\n\r\n<p>&nbsp;else<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;puts &quot;The numbers 1 to n are&quot;<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;num.times do</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;puts n += 1<br />\r\n&nbsp; &nbsp; end<br />\r\nend</p>\r\n	102	38	27	2017-07-05 16:35:39.500232	2017-07-05 16:35:39.500232	\N	\N	\N
833	<p>players = &quot;virat virat virat sachin sachin rahul dhoni dhoni&quot;<br />\r\nnames = players.split(&quot; &quot;)<br />\r\nresult = {}<br />\r\nnames.uniq.each do |name|<br />\r\n&nbsp; result[name.to_sym] = names.count(name)<br />\r\nend<br />\r\nputs result</p>\r\n	104	36	28	2017-07-10 07:54:29.308234	2017-07-10 07:54:29.308234	\N	\N	\N
834	<p>restaurants = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;adigas&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;location&quot; =&gt; &quot;Jayanagar&quot;,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;type&quot; =&gt; &quot;Quick Bite&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;rating&quot; =&gt; 3.4,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;phone_number&quot; =&gt; &quot;N/A&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;cuisines&quot; =&gt; [&quot;South India&quot;, &quot;Chinese&quot;],<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;cost_for_two&quot; =&gt; 150,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;addresses&quot; =&gt; &quot;Jayanagar 4th Block&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;highlights&quot; =&gt; [&quot;Breakfast&quot;, &quot;Veg&quot;],&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;menu&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;south_indian&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;idly&quot; =&gt; 26,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;vade&quot; =&gt; 24,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;coffee&quot; =&gt; 15,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;masala dosa&quot; =&gt; 43<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}, &quot;Chinese&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;noodles&quot; =&gt; 80,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;soup&quot; =&gt; 40<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n\r\n<p>puts &quot;#{restaurants[&quot;adigas&quot;][&quot;menu&quot;][&quot;south_indian&quot;]}&quot;</p>\r\n	103	36	28	2017-07-10 07:54:29.32186	2017-07-10 07:54:29.32186	\N	\N	\N
835	<p>require &#39;pp&#39;</p>\r\n\r\n<p>players = &quot;virat virat sachin virat&quot;</p>\r\n\r\n<p>names = players.split(&quot; &quot;)<br />\r\noutput = {}</p>\r\n\r\n<p>names.uniq.each do |name|<br />\r\n&nbsp;&nbsp; &nbsp;output[name.to_sym] = names.count(name)<br />\r\nend</p>\r\n\r\n<p>output.each do |key,value|<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{key}:#{value}&quot;<br />\r\nend<br />\r\npp output</p>\r\n	104	34	28	2017-07-10 07:54:54.40565	2017-07-10 07:54:54.40565	\N	\N	\N
836	<p>restaurants = {<br />\r\n&nbsp;&nbsp;&nbsp; :adigas =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :location =&gt; &quot;Jayanagar&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :type =&gt; &quot;Quick Bite&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :rating =&gt; 3.4,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :phone_number =&gt; &quot;N/A&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :cuisines =&gt; [&quot;South India&quot;, &quot;Chinese&quot;],<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :cost_for_two =&gt; 150,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :addresses =&gt; &quot;Jayanagar 4th Block&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :highlights =&gt; [&quot;Breakfast&quot;, &quot;Veg&quot;],<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :menu =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :south_indian =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :idly =&gt; 26,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :vade =&gt; 24,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :coffee =&gt; 15,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :masala_dosa =&gt; 43<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :Chinese =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :noodles =&gt; 80,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :soup =&gt; 40<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p><br />\r\nputs &quot;#{restaurants[:adigas][:menu][:south_indian]}&quot;</p>\r\n	103	34	28	2017-07-10 07:54:54.437516	2017-07-10 07:54:54.437516	\N	\N	\N
837	<p>players = [&quot;virat&quot;, &quot;virat&quot;, &quot;virat&quot;, &quot;sachin&quot;]<br />\r\nresult = {}<br />\r\nplayers.uniq.each do |name|<br />\r\n&nbsp;&nbsp; &nbsp;result[name.to_sym] = players.count(name)&nbsp;&nbsp; &nbsp;<br />\r\nend<br />\r\nputs result</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	104	37	28	2017-07-10 11:51:18.987281	2017-07-10 11:51:18.987281	\N	\N	\N
838	<p>restaurants= {<br />\r\n&nbsp;&nbsp;&nbsp; &quot;adigas&quot; =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;location&quot; =&gt; &quot;Jayanagar&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;type&quot; =&gt; &quot;Quick Bite&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;rating&quot; =&gt; 3.4,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;phone_number&quot; =&gt; &quot;N/A&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;cuisines&quot; =&gt; [&quot;South India&quot;, &quot;Chinese&quot;],<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;cost_for_two&quot; =&gt; 150,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;addresses&quot; =&gt; &quot;Jayanagar 4th Block&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;highlights&quot; =&gt; [&quot;Breakfast&quot;, &quot;Veg&quot;],<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;menu&quot; =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;south_indian&quot; =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;idly&quot; =&gt; 26,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;vade&quot; =&gt; 24,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;coffee&quot; =&gt; 15,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;masala_dosa&quot; =&gt; 43<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }, &quot;Chinese&quot; =&gt; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;noodles&quot; =&gt; 80,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;soup&quot; =&gt; 40<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>restaurants.each do |k,v|<br />\r\nrestaurants.keys.to_sym<br />\r\nend<br />\r\nputs restaurants.keys</p>\r\n	103	37	28	2017-07-10 11:51:19.019003	2017-07-10 11:51:19.019003	\N	\N	\N
839	<p>require &#39;pry&#39;<br />\r\nplayers = &quot;virat virat sachin virat&quot;</p>\r\n\r\n<p>output = []</p>\r\n\r\n<p>z = players.split(&quot; &quot;)</p>\r\n\r\n<p>z.uniq.each do |name|<br />\r\n&nbsp;&nbsp; &nbsp;output.push([name,z.count(name)]) # 1st iteration is output =[[&quot;virat&quot;,3]]<br />\r\n&nbsp; # binding.pry<br />\r\nend</p>\r\n\r\n<p>output.each do |sub|<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{sub.first}: #{sub.last}&quot;<br />\r\nend</p>\r\n\r\n<p><br />\r\n# one more method<br />\r\nvirat_count = 0</p>\r\n\r\n<p>sachin_count = 0</p>\r\n\r\n<p>virat_count = z.count(&quot;virat&quot;)</p>\r\n\r\n<p>sachin_count = z.count(&quot;sachin&quot;)</p>\r\n\r\n<p>puts &quot;virat: #{virat_count}&quot;</p>\r\n\r\n<p>puts &quot;sachin: #{sachin_count}&quot;<br />\r\n&nbsp;</p>\r\n	104	38	28	2017-07-10 17:06:21.173639	2017-07-10 17:06:21.173639	\N	\N	\N
840	<p>restaurants= {<br />\r\n&nbsp;&nbsp; &nbsp;:adigas =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:location =&gt; :Jayanagar,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:type =&gt; :Quick_Bite,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:phone_number =&gt; :NA,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:cuisines =&gt; [:South_India,:Chinese],<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:cost_for_two =&gt; 150,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:addresses =&gt; :Jayanagar_4th_Block,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:highlights =&gt; [:Breakfast,:Veg],<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:menu =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:south_indian =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:idly =&gt; 26,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:vada =&gt; 24,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:coffee =&gt; 15,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:masala_dosa =&gt; 43<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}, :Chinese =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:noodles =&gt; 80,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;:soup =&gt; 40<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n\r\n<p>puts &quot;#{restaurants[:adigas][:menu][:Chinese]}&quot;<br />\r\nputs &quot;#{restaurants[:adigas][:location]}&quot;<br />\r\nputs &quot;#{restaurants[:adigas][:menu][:south_indian][:coffee]}&quot;<br />\r\nputs &quot;#{restaurants[:adigas][:phone_number]}&quot;</p>\r\n\r\n<p>puts &quot;#{restaurants[:adigas][:cuisines]}&quot;</p>\r\n\r\n<p>restaurants[:adigas][:cuisines].each do |x|<br />\r\n&nbsp;&nbsp; &nbsp;puts x.to_s<br />\r\nend<br />\r\n&nbsp;</p>\r\n	103	38	28	2017-07-10 17:06:21.209404	2017-07-10 17:06:21.209404	\N	\N	\N
841	<p>Array.prototype.unique = function(){<br />\r\n&nbsp; var result = [];<br />\r\n&nbsp; this.forEach(function(value){<br />\r\n&nbsp; &nbsp; if (result.indexOf(value) == -1) {<br />\r\n&nbsp; &nbsp; &nbsp; result.push(value);<br />\r\n&nbsp; &nbsp; }<br />\r\n&nbsp; });<br />\r\n&nbsp; return result;<br />\r\n}</p>\r\n\r\n<p>arr = [1, 2, 1, 3, 4, 2, 3];<br />\r\nunique_arry = arr.unique();<br />\r\nconsole.log(&quot;length of unique array is : &quot; + unique_arry.length);</p>\r\n\r\n<p>function windowCalling(start_value, end_value){<br />\r\n&nbsp; window = arr.slice(start_value,end_value);<br />\r\n&nbsp; return &quot;length of window is : &quot; +window.unique().length;<br />\r\n}<br />\r\nconsole.log(windowCalling(0,4));<br />\r\nconsole.log(windowCalling(1,5));<br />\r\nconsole.log(windowCalling(2,6));<br />\r\nconsole.log(windowCalling(3));</p>\r\n	105	3	29	2017-07-20 16:53:28.160516	2017-07-20 16:53:28.160516	\N	\N	\N
\.


--
-- Name: answers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('answers_id_seq', 841, true);


--
-- Data for Name: batch_events; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY batch_events (id, batch_id, event_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: batch_events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('batch_events_id_seq', 1, false);


--
-- Data for Name: batch_set_chapter_topics; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY batch_set_chapter_topics (id, batch_set_id, created_at, updated_at, chapter_id, topic_id) FROM stdin;
1	1	2017-04-21 06:52:44.958524	2017-04-21 06:52:44.958524	1	1
2	2	2017-04-24 06:06:44.849348	2017-04-24 06:06:44.849348	2	1
3	2	2017-04-24 06:06:44.883789	2017-04-24 06:06:44.883789	3	1
4	3	2017-04-24 18:17:39.388293	2017-04-24 18:17:39.388293	4	1
5	4	2017-04-25 05:54:48.087287	2017-04-25 05:54:48.087287	4	1
6	5	2017-04-25 05:59:16.637282	2017-04-25 05:59:16.637282	4	1
7	6	2017-04-26 12:27:13.666537	2017-04-26 12:27:13.666537	4	1
8	7	2017-04-27 05:56:05.225507	2017-04-27 05:56:05.225507	5	1
9	8	2017-04-27 05:59:16.241439	2017-04-27 05:59:16.241439	2	1
10	8	2017-04-27 05:59:16.243577	2017-04-27 05:59:16.243577	5	1
11	9	2017-04-28 06:35:07.917742	2017-04-28 06:35:07.917742	5	1
12	10	2017-05-01 06:06:50.313655	2017-05-01 06:06:50.313655	5	1
13	11	2017-05-01 06:08:39.242659	2017-05-01 06:08:39.242659	4	1
14	11	2017-05-01 06:08:39.255342	2017-05-01 06:08:39.255342	3	1
15	12	2017-05-02 06:10:40.940521	2017-05-02 06:10:40.940521	4	1
16	13	2017-05-03 06:05:45.404459	2017-05-03 06:05:45.404459	6	1
17	14	2017-05-05 05:51:10.722047	2017-05-05 05:51:10.722047	2	1
18	14	2017-05-05 05:51:10.726826	2017-05-05 05:51:10.726826	5	1
19	15	2017-05-10 06:01:00.865838	2017-05-10 06:01:00.865838	7	1
20	15	2017-05-10 06:02:39.819717	2017-05-10 06:02:39.819717	8	1
21	16	2017-05-10 06:39:43.533686	2017-05-10 06:39:43.533686	7	1
22	17	2017-05-10 14:23:44.193081	2017-05-10 14:23:44.193081	10	2
23	17	2017-05-10 14:25:58.04332	2017-05-10 14:25:58.04332	6	2
24	18	2017-05-15 11:18:57.224433	2017-05-15 11:18:57.224433	7	1
25	19	2017-05-19 05:57:14.604819	2017-05-19 05:57:14.604819	2	1
26	20	2017-05-19 18:00:29.003929	2017-05-19 18:00:29.003929	7	1
27	20	2017-05-19 18:00:29.009268	2017-05-19 18:00:29.009268	2	1
28	20	2017-05-19 18:00:29.011721	2017-05-19 18:00:29.011721	3	1
29	21	2017-05-29 06:24:05.503615	2017-05-29 06:24:05.503615	11	3
30	21	2017-05-29 06:24:30.804832	2017-05-29 06:24:30.804832	12	3
31	22	2017-06-05 06:31:39.040505	2017-06-05 06:31:39.040505	13	3
33	23	2017-06-05 06:36:02.860435	2017-06-05 06:36:02.860435	14	3
34	23	2017-06-05 06:43:32.712523	2017-06-05 06:43:32.712523	11	3
35	23	2017-06-05 06:43:32.714936	2017-06-05 06:43:32.714936	13	3
32	23	2017-06-05 06:36:02.856846	2017-06-06 13:04:58.089176	15	2
\.


--
-- Name: batch_set_chapter_topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('batch_set_chapter_topics_id_seq', 35, true);


--
-- Data for Name: batch_set_questions; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY batch_set_questions (id, batch_set_id, question_id, created_at, updated_at) FROM stdin;
1	1	1	2017-04-21 06:52:53.50642	2017-04-21 06:52:53.50642
2	1	2	2017-04-21 06:52:53.515938	2017-04-21 06:52:53.515938
3	1	5	2017-04-21 06:52:53.521579	2017-04-21 06:52:53.521579
4	1	6	2017-04-21 06:52:53.524628	2017-04-21 06:52:53.524628
5	1	7	2017-04-21 06:52:53.527536	2017-04-21 06:52:53.527536
6	2	8	2017-04-24 06:06:56.288472	2017-04-24 06:06:56.288472
7	2	9	2017-04-24 06:06:56.305634	2017-04-24 06:06:56.305634
8	2	10	2017-04-24 06:06:56.308367	2017-04-24 06:06:56.308367
9	2	11	2017-04-24 06:06:56.311001	2017-04-24 06:06:56.311001
10	2	12	2017-04-24 06:06:56.313533	2017-04-24 06:06:56.313533
11	3	13	2017-04-24 18:17:51.219648	2017-04-24 18:17:51.219648
12	4	14	2017-04-25 05:55:04.094581	2017-04-25 05:55:04.094581
13	4	15	2017-04-25 05:55:04.103762	2017-04-25 05:55:04.103762
14	4	16	2017-04-25 05:55:04.106805	2017-04-25 05:55:04.106805
15	4	17	2017-04-25 05:55:04.108976	2017-04-25 05:55:04.108976
16	4	18	2017-04-25 05:55:04.111235	2017-04-25 05:55:04.111235
17	5	19	2017-04-25 05:59:28.906867	2017-04-25 05:59:28.906867
18	5	20	2017-04-25 05:59:28.909266	2017-04-25 05:59:28.909266
19	6	21	2017-04-26 12:27:25.930568	2017-04-26 12:27:25.930568
20	6	22	2017-04-26 12:27:26.059414	2017-04-26 12:27:26.059414
21	7	23	2017-04-27 05:56:26.792052	2017-04-27 05:56:26.792052
22	7	24	2017-04-27 05:56:26.797485	2017-04-27 05:56:26.797485
23	7	25	2017-04-27 05:56:26.806041	2017-04-27 05:56:26.806041
24	7	26	2017-04-27 05:56:26.810097	2017-04-27 05:56:26.810097
25	7	27	2017-04-27 05:56:26.819126	2017-04-27 05:56:26.819126
26	8	28	2017-04-27 05:59:38.750476	2017-04-27 05:59:38.750476
27	8	29	2017-04-27 05:59:38.753341	2017-04-27 05:59:38.753341
28	9	30	2017-04-28 06:35:16.779689	2017-04-28 06:35:16.779689
29	10	31	2017-05-01 06:31:54.048289	2017-05-01 06:31:54.048289
30	12	32	2017-05-02 06:10:49.643285	2017-05-02 06:10:49.643285
31	13	33	2017-05-03 06:06:28.530709	2017-05-03 06:06:28.530709
32	13	34	2017-05-03 06:06:28.535809	2017-05-03 06:06:28.535809
33	13	35	2017-05-03 06:06:28.538189	2017-05-03 06:06:28.538189
34	13	36	2017-05-03 06:06:28.540575	2017-05-03 06:06:28.540575
35	13	37	2017-05-03 06:06:28.542747	2017-05-03 06:06:28.542747
36	13	38	2017-05-03 06:06:28.544889	2017-05-03 06:06:28.544889
39	14	39	2017-05-05 05:51:53.836102	2017-05-05 05:51:53.836102
40	14	40	2017-05-05 05:54:22.116523	2017-05-05 05:54:22.116523
41	14	41	2017-05-05 05:54:43.68459	2017-05-05 05:54:43.68459
42	15	46	2017-05-10 06:02:39.801134	2017-05-10 06:02:39.801134
43	15	42	2017-05-10 06:02:39.810529	2017-05-10 06:02:39.810529
44	15	47	2017-05-10 06:03:11.493259	2017-05-10 06:03:11.493259
45	15	44	2017-05-10 06:03:11.503866	2017-05-10 06:03:11.503866
46	15	43	2017-05-10 06:03:11.523339	2017-05-10 06:03:11.523339
47	15	45	2017-05-10 06:03:11.531553	2017-05-10 06:03:11.531553
48	16	48	2017-05-10 06:39:48.440018	2017-05-10 06:39:48.440018
49	17	49	2017-05-10 14:23:58.080085	2017-05-10 14:23:58.080085
50	17	50	2017-05-10 14:23:58.084115	2017-05-10 14:23:58.084115
51	17	51	2017-05-10 14:23:58.0859	2017-05-10 14:23:58.0859
52	17	52	2017-05-10 14:26:08.57101	2017-05-10 14:26:08.57101
53	18	53	2017-05-15 11:19:11.039526	2017-05-15 11:19:11.039526
54	19	54	2017-05-19 05:57:20.357303	2017-05-19 05:57:20.357303
56	20	55	2017-05-19 18:00:57.745011	2017-05-19 18:00:57.745011
57	20	56	2017-05-19 18:00:57.747801	2017-05-19 18:00:57.747801
58	20	57	2017-05-19 18:00:57.754809	2017-05-19 18:00:57.754809
59	20	54	2017-05-19 18:00:57.760657	2017-05-19 18:00:57.760657
60	20	59	2017-05-19 18:00:57.768724	2017-05-19 18:00:57.768724
61	20	58	2017-05-19 18:01:30.441896	2017-05-19 18:01:30.441896
62	20	60	2017-05-19 18:01:30.44976	2017-05-19 18:01:30.44976
63	21	62	2017-05-29 06:24:30.795092	2017-05-29 06:24:30.795092
64	21	63	2017-05-29 06:24:41.541024	2017-05-29 06:24:41.541024
65	22	68	2017-06-05 06:31:42.406198	2017-06-05 06:31:42.406198
69	23	69	2017-06-05 06:44:20.631569	2017-06-05 06:44:20.631569
70	23	62	2017-06-05 06:44:20.633557	2017-06-05 06:44:20.633557
71	23	64	2017-06-05 06:44:20.635577	2017-06-05 06:44:20.635577
72	23	65	2017-06-05 06:44:20.637715	2017-06-05 06:44:20.637715
73	23	73	2017-06-05 06:44:20.639774	2017-06-05 06:44:20.639774
74	23	74	2017-06-05 06:44:20.642113	2017-06-05 06:44:20.642113
75	23	66	2017-06-05 06:44:20.644338	2017-06-05 06:44:20.644338
76	23	67	2017-06-05 06:44:20.646239	2017-06-05 06:44:20.646239
\.


--
-- Name: batch_set_questions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('batch_set_questions_id_seq', 76, true);


--
-- Data for Name: batch_sets; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY batch_sets (id, set_date, batch_id, created_at, updated_at, title, kind, due_date) FROM stdin;
3	2017-04-24	1	2017-04-24 18:17:39.384235	2017-04-24 18:24:43.708303	Assignment for Day 4	assignment	2017-04-26 00:00:00
1	2017-04-21	1	2017-04-21 06:52:44.950665	2017-04-25 05:20:12.839374	Day 3	assessment	2017-04-26 00:00:00
5	2017-04-25	1	2017-04-25 05:59:16.633774	2017-04-25 05:59:16.633774	Assignment for Day 5	assignment	2017-04-27 00:00:00
4	2017-04-25	1	2017-04-25 05:54:48.075487	2017-04-26 04:13:57.11639	Day 5	assessment	2017-04-27 00:00:00
2	2017-04-24	1	2017-04-24 06:06:44.84416	2017-04-26 04:15:23.975554	Day 4	assessment	2017-04-27 00:00:00
6	2017-04-26	1	2017-04-26 12:27:13.639554	2017-04-26 12:27:13.639554	Assignment for Day 6	assignment	2017-04-28 00:00:00
7	2017-04-27	1	2017-04-27 05:56:05.220423	2017-05-01 04:35:11.193022	Day 7	assessment	2017-04-27 23:00:00
10	2017-05-01	1	2017-05-01 06:06:50.308282	2017-05-01 06:06:50.308282	Day 9	assessment	2017-05-01 09:00:00
8	2017-04-27	1	2017-04-27 05:59:16.238893	2017-05-01 15:31:29.761209	Assignment for Day 7	assignment	2017-05-02 03:30:00
9	2017-04-28	1	2017-04-28 06:35:07.882255	2017-05-01 15:31:45.28522	Assignment for Day 8	assignment	2017-05-02 03:30:00
12	2017-05-02	1	2017-05-02 06:10:40.935913	2017-05-02 06:10:40.935913	Assignment for day 10	assignment	2017-05-07 03:30:00
13	2017-05-03	1	2017-05-03 06:05:45.400233	2017-05-03 06:05:45.400233	Day 11	assessment	2017-05-03 09:30:00
14	2017-05-05	1	2017-05-05 05:51:10.716426	2017-05-08 03:45:51.096028	Group Assignment 1 	assignment	2017-05-08 09:30:00
15	2017-05-10	1	2017-05-10 06:01:00.840164	2017-05-10 06:01:00.840164	Assessment on Class & Objects 1	assessment	2017-05-10 18:29:00
16	2017-05-10	1	2017-05-10 06:39:43.531004	2017-05-10 06:39:43.531004	Assignment for Classes & Objects 1	assignment	2017-05-10 18:29:00
18	2017-05-15	1	2017-05-15 11:18:57.220841	2017-05-15 11:18:57.220841	Assignment for Classes & Objects 2	assignment	2017-05-18 18:29:00
19	2017-05-19	1	2017-05-19 05:57:14.598772	2017-05-19 05:57:14.598772	Class Assignment 1	assignment	2017-05-19 14:30:00
17	2017-05-10	2	2017-05-10 14:23:44.190741	2017-05-19 09:47:36.557566	Javascript DOM 1	assessment	2017-05-10 18:29:00
21	2017-05-29	1	2017-05-29 06:24:05.499233	2017-05-29 06:24:05.499233	Assessment for Models 1	assessment	2017-05-29 18:29:00
20	2017-05-19	1	2017-05-19 18:00:28.973056	2017-05-30 03:56:56.866634	Assignment Set 1	assignment	2017-05-30 18:29:00
22	2017-06-05	1	2017-06-05 06:31:39.034793	2017-06-05 06:31:39.034793	SubCategory Assignment	assignment	2017-06-05 18:29:00
23	2017-06-05	1	2017-06-05 06:36:02.854488	2017-06-06 13:08:37.924096	Rails Set 1	assessment	2017-06-05 18:29:00
24	2017-06-14	1	2017-06-14 11:08:33.546541	2017-06-14 11:08:33.546541	Assignment for Day 39	assignment	\N
25	2017-06-19	1	2017-06-19 02:11:41.196759	2017-06-19 02:11:41.196759	Ruby Assignment	assignment	\N
26	2017-06-22	1	2017-06-22 14:44:13.546707	2017-06-22 14:44:13.546707	API Assignment 1	assignment	\N
27	2017-07-04	3	2017-07-04 16:42:31.239375	2017-07-04 16:42:31.239375	Assignment 1	assignment	\N
28	2017-07-10	3	2017-07-10 07:37:38.70236	2017-07-10 07:37:38.70236	Str to Hash 	assignment	\N
29	2017-07-20	1	2017-07-20 14:31:04.044715	2017-07-20 14:31:04.044715	Array Set	assignment	\N
30	2017-07-20	3	2017-07-20 14:40:08.975411	2017-07-20 14:40:08.975411	Assignment 1	assignment	\N
\.


--
-- Name: batch_sets_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('batch_sets_id_seq', 30, true);


--
-- Data for Name: batch_students; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY batch_students (id, batch_id, student_id, created_at, updated_at) FROM stdin;
1	1	1	2017-04-21 06:06:48.529939	2017-04-21 06:06:56.260871
2	1	2	2017-04-21 06:07:31.600092	2017-04-21 06:07:31.600092
3	1	3	2017-04-21 06:08:06.924622	2017-04-21 06:08:06.924622
4	1	4	2017-04-21 06:08:37.099045	2017-04-21 06:08:37.099045
5	1	5	2017-04-21 06:09:05.386953	2017-04-21 06:09:05.386953
6	1	6	2017-04-21 06:09:38.228906	2017-04-21 06:09:38.228906
7	1	7	2017-04-21 06:10:04.051826	2017-04-21 06:10:04.051826
8	1	8	2017-04-21 06:10:32.781566	2017-04-21 06:10:32.781566
9	1	9	2017-04-21 06:10:58.050903	2017-04-21 06:10:58.050903
10	1	10	2017-04-21 06:11:21.103424	2017-04-21 06:11:21.103424
11	1	11	2017-04-21 06:11:45.200977	2017-04-21 06:11:45.200977
12	1	12	2017-04-21 06:53:22.978725	2017-04-21 06:53:22.978725
13	1	13	2017-04-21 07:05:40.973615	2017-04-21 07:05:40.973615
14	1	14	2017-04-24 06:18:21.512324	2017-04-24 06:18:21.512324
15	1	15	2017-04-30 06:28:39.199819	2017-04-30 06:28:39.199819
16	1	16	2017-04-30 06:34:37.011979	2017-04-30 06:34:37.011979
17	1	17	2017-05-03 06:16:48.608305	2017-05-03 06:16:48.608305
18	1	18	2017-05-03 06:17:33.754474	2017-05-03 06:17:33.754474
19	1	19	2017-05-03 06:18:06.074708	2017-05-03 06:18:06.074708
20	2	21	2017-05-10 13:52:28.666751	2017-05-10 13:52:28.666751
21	2	22	2017-05-10 13:53:06.992485	2017-05-10 13:53:06.992485
22	2	23	2017-05-10 13:53:33.018876	2017-05-10 13:53:33.018876
23	2	24	2017-05-10 13:54:07.619078	2017-05-10 13:54:07.619078
24	2	25	2017-05-10 13:54:30.254948	2017-05-10 13:54:30.254948
25	2	26	2017-05-10 13:55:06.30606	2017-05-10 13:55:06.30606
26	2	27	2017-05-10 13:55:40.627571	2017-05-10 13:55:40.627571
27	2	28	2017-05-10 13:56:38.443801	2017-05-10 13:56:38.443801
28	2	29	2017-05-10 13:57:04.236156	2017-05-10 13:57:04.236156
29	2	30	2017-05-10 13:57:27.399656	2017-05-10 13:57:27.399656
30	2	31	2017-05-10 13:58:05.044798	2017-05-10 13:58:05.044798
31	2	32	2017-05-10 13:58:29.069203	2017-05-10 13:58:29.069203
32	2	12	2017-05-10 13:58:57.842222	2017-05-10 13:58:57.842222
33	2	33	2017-05-12 11:02:14.487646	2017-05-12 11:02:14.487646
34	3	34	2017-07-04 10:38:02.993905	2017-07-04 10:38:02.993905
35	3	35	2017-07-04 10:38:41.194745	2017-07-04 10:38:41.194745
36	3	36	2017-07-04 10:39:11.640151	2017-07-04 10:39:11.640151
37	3	37	2017-07-04 10:39:50.797754	2017-07-04 10:39:50.797754
38	3	38	2017-07-04 10:40:20.047899	2017-07-04 10:40:20.047899
39	3	39	2017-07-04 10:40:47.372282	2017-07-04 10:40:47.372282
40	3	40	2017-07-04 10:41:06.458179	2017-07-04 10:41:06.458179
41	3	41	2017-07-04 10:42:19.679775	2017-07-04 10:42:19.679775
42	3	42	2017-07-04 12:07:07.533498	2017-07-04 12:07:07.533498
43	3	43	2017-07-04 12:08:53.435569	2017-07-04 12:08:53.435569
44	3	12	2017-07-04 12:12:35.19869	2017-07-04 12:12:35.19869
45	3	44	2017-07-08 12:39:05.810815	2017-07-08 12:39:05.810815
46	3	45	2017-07-20 14:34:40.707066	2017-07-20 14:34:40.707066
47	4	12	2017-07-20 15:52:19.600612	2017-07-20 15:52:19.600612
48	4	46	2017-07-20 15:52:19.603431	2017-07-20 15:52:19.603431
\.


--
-- Name: batch_students_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('batch_students_id_seq', 48, true);


--
-- Data for Name: batches; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY batches (id, title, start_date, end_date, course_id, created_at, updated_at, complete) FROM stdin;
1	Web Development April 2017	2017-04-21	2017-07-21	1	2017-04-21 06:06:30.93488	2017-04-21 10:19:45.543642	f
2	Front End April 2017	2017-04-28	2017-05-28	1	2017-04-28 12:59:27.591192	2017-06-05 06:27:37.524694	t
3	Web Development July 2017	2017-07-03	2017-10-11	1	2017-07-04 10:11:41.098717	2017-07-04 10:11:41.098717	f
4	Test Batch	2017-07-01	2017-12-31	1	2017-07-20 15:52:19.596375	2017-07-20 15:52:19.596375	f
\.


--
-- Name: batches_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('batches_id_seq', 4, true);


--
-- Data for Name: chapter_topics; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY chapter_topics (id, chapter_id, topic_id, created_at, updated_at) FROM stdin;
1	1	1	2017-04-21 06:12:28.629993	2017-04-21 06:12:28.629993
2	2	1	2017-04-21 06:13:23.890504	2017-04-21 06:13:23.890504
3	3	1	2017-04-24 03:53:04.748421	2017-04-24 03:53:04.748421
4	4	1	2017-04-24 06:29:07.709632	2017-04-24 06:29:07.709632
5	5	1	2017-04-27 03:35:40.79355	2017-04-27 03:35:40.79355
6	6	1	2017-05-03 05:57:56.656395	2017-05-03 05:57:56.656395
7	7	1	2017-05-10 05:44:52.749353	2017-05-10 05:44:52.749353
8	8	1	2017-05-10 05:49:47.962828	2017-05-10 05:49:47.962828
9	9	2	2017-05-10 14:16:23.924651	2017-05-10 14:16:23.924651
10	10	2	2017-05-10 14:16:37.022627	2017-05-10 14:16:37.022627
11	11	3	2017-05-26 12:16:42.5882	2017-05-26 12:16:42.5882
12	12	3	2017-05-29 06:21:34.022209	2017-05-29 06:21:34.022209
13	13	3	2017-05-30 04:01:23.699854	2017-05-30 04:01:23.699854
14	14	3	2017-06-05 06:33:57.475636	2017-06-05 06:33:57.475636
15	15	3	2017-06-05 06:34:46.836602	2017-06-05 06:34:46.836602
16	16	2	2017-06-22 14:34:35.500893	2017-06-22 14:34:35.500893
17	16	1	2017-06-22 14:34:35.508149	2017-06-22 14:34:35.508149
\.


--
-- Name: chapter_topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('chapter_topics_id_seq', 17, true);


--
-- Data for Name: chapters; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY chapters (id, name, created_at, updated_at, short_name) FROM stdin;
4	Arrays	2017-04-24 06:29:07.695253	2017-06-14 10:39:38.943657	ARR
15	Associations	2017-06-05 06:34:46.834132	2017-06-14 10:39:55.84106	ASC
7	Classes & Objects	2017-05-10 05:44:52.745981	2017-06-14 10:40:12.79245	C&O
13	Controllers	2017-05-30 04:01:23.682702	2017-06-14 10:40:34.083571	CTR
10	DOM	2017-05-10 14:16:37.021063	2017-06-14 10:40:41.194165	DOM
5	Hash	2017-04-27 03:35:40.788848	2017-06-14 10:40:50.435193	HSH
1	Introduction	2017-04-21 06:12:28.627011	2017-06-14 10:41:01.092268	ITR
6	Methods	2017-05-03 05:57:56.63747	2017-06-14 10:41:07.313352	MTD
14	Migrations	2017-06-05 06:33:57.470046	2017-06-14 10:41:17.325582	MIG
11	Models	2017-05-26 12:16:42.585302	2017-06-14 10:41:23.782687	MDL
3	Numbers	2017-04-24 03:53:04.744012	2017-06-14 10:41:42.379537	NUM
9	Objects	2017-05-10 14:16:23.916039	2017-06-14 10:41:47.765338	OBJ
12	Rails General	2017-05-29 06:21:33.994515	2017-06-14 10:42:00.15531	RLG
2	Strings	2017-04-21 06:12:37.234624	2017-06-14 10:42:05.750801	STR
8	Variables	2017-05-10 05:49:47.960501	2017-06-14 10:42:15.139294	VAR
16	API	2017-06-22 14:34:35.493033	2017-06-22 14:34:51.788534	API
\.


--
-- Name: chapters_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('chapters_id_seq', 16, true);


--
-- Data for Name: comments; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY comments (id, statement, user_id, answer_id, created_at, updated_at) FROM stdin;
1	good keep it up	1	168	2017-04-27 06:28:13.106968	2017-04-27 06:28:13.106968
2	did you mentino it	1	168	2017-04-27 06:28:27.700272	2017-04-27 06:28:27.700272
3	be consistent with key names, keep all lower case	1	248	2017-04-27 07:17:28.650366	2017-04-27 07:17:28.650366
4	always define variable names and keys in lower case, Capitalization is done for class definition	1	218	2017-04-27 07:19:12.99676	2017-04-27 07:19:12.99676
5	be consistent with key names, keep all lower case	1	228	2017-04-27 07:19:33.248741	2017-04-27 07:19:33.248741
6	We need to build a hash using the provided data, once the data is in place, you can do the iteration. This question was asked to build a hash	1	233	2017-04-27 07:21:03.154875	2017-04-27 07:21:03.154875
7	Good job Keep it up	1	238	2017-04-27 07:21:42.384871	2017-04-27 07:21:42.384871
8	be consistent with key names, keep all lower case	1	243	2017-04-27 07:21:56.114716	2017-04-27 07:21:56.114716
9	 always define variable names and keys in lower case, Capitalization is done for class definition	1	253	2017-04-27 07:22:28.372075	2017-04-27 07:22:28.372075
10	 always define variable names and keys in lower case, Capitalization is done for class definition	1	258	2017-04-27 07:22:40.129503	2017-04-27 07:22:40.129503
11	Good job Keep it up	1	263	2017-04-27 07:22:53.599119	2017-04-27 07:22:53.599119
12	Well done	1	223	2017-04-27 07:31:47.951074	2017-04-27 07:31:47.951074
13	Good	1	224	2017-04-27 07:34:19.353377	2017-04-27 07:34:19.353377
14	Good job.	1	173	2017-04-28 03:05:29.955871	2017-04-28 03:05:29.955871
15	Can you do this without the min / max function, i want you to either use the iteration and check for the condition or use the find_all method	1	273	2017-04-29 15:16:49.370331	2017-04-29 15:16:49.370331
16	Can you do this without the min / max function, i want you to either use the iteration and check for the condition or use the find_all method	1	271	2017-04-29 15:17:09.605938	2017-04-29 15:17:09.605938
17	shravani you are combining both working at the index as well as working with the .each method, you can use either one of it, 	1	269	2017-04-29 15:18:20.325967	2017-04-29 15:18:20.325967
18	very good preeti, keep it up	1	267	2017-04-29 15:18:44.052671	2017-04-29 15:18:44.052671
19	Can you do this without the min / max function, i want you to either use the iteration and check for the condition or use the find_all method 	1	204	2017-04-29 15:19:19.200008	2017-04-29 15:19:19.200008
20	Can you do this without the min / max function, i want you to either use the iteration and check for the condition or use the find_all method 	1	190	2017-04-29 15:21:49.607205	2017-04-29 15:21:49.607205
21	Can you do this without the min / max function, i want you to either use the iteration and check for the condition or use the find_all method 	1	192	2017-04-29 15:21:59.83685	2017-04-29 15:21:59.83685
22	Good prasad	1	208	2017-04-29 15:22:18.616447	2017-04-29 15:22:18.616447
23	very good meghal, keep up the good effort	1	277	2017-04-29 15:25:03.784085	2017-04-29 15:25:03.784085
24	can you submit a version of the code using array methods in the comments section	1	140	2017-04-29 15:26:53.334322	2017-04-29 15:26:53.334322
25	okey sir , i'll do it again without using functions.	12	271	2017-04-30 00:59:09.007964	2017-04-30 00:59:09.007964
26	I like the way you have metioned the arguments that needs to be passed to the methods. good job	1	114	2017-04-30 07:25:46.689459	2017-04-30 07:25:46.689459
27	Good job.	1	276	2017-04-30 18:00:10.326577	2017-04-30 18:00:10.326577
28	<p>Good...Keep it up Meghal</p>\r\n	1	285	2017-05-01 14:55:37.214991	2017-05-01 14:55:37.214991
29	<p>&quot;rating number&quot; =&gt; 4.7/5</p>\r\n\r\n<p>should have either been just 4.7 or as a string &quot;4.7/5&quot;</p>\r\n	1	286	2017-05-01 14:56:32.572192	2017-05-01 14:56:32.572192
30	<p>&quot;cuisines&quot; =&gt; &quot;[American], [Burger], [Cafe]&quot;,<br />\r\n&nbsp; &quot;rating&quot; =&gt; 4.7,<br />\r\n&nbsp; &quot;highlights&quot; =&gt; &quot;[Home Delivery], [Table booking not available]&quot;</p>\r\n\r\n<p>here cuisines would be treated as a string and the values are surronded by &quot; &quot;</p>\r\n\r\n<p>your array representation will be</p>\r\n\r\n<p>&quot;cuisines&quot; =&gt; [&quot;American&quot;, &quot;Burger&quot;, &quot;Cafe&quot;]</p>\r\n\r\n<p>the same will hold good for highlights</p>\r\n	1	287	2017-05-01 14:58:24.47979	2017-05-01 14:58:24.47979
31	<p>the reviews key now holds an array as its value, but the value at the 0th index is no longer a hash but a string, as you are surronding your hash with a &#39; &#39; quote</p>\r\n	1	288	2017-05-01 14:59:46.610301	2017-05-01 14:59:46.610301
32	<p>cuisines key holds an array of values, but your representation is a single value in the array as all the values are inside &quot; &quot; quotes.</p>\r\n\r\n<p>&quot;cuisines&quot; =&gt; [&quot;American&quot;, &quot;Burger&quot;, &quot;Cafe&quot;]</p>\r\n	1	289	2017-05-01 15:00:57.044881	2017-05-01 15:00:57.044881
33	<p>Your key will need to be reviews and not review as its going to hold an array of information,</p>\r\n\r\n<p>body key could have just held the value as a string, but why do you have it as an array ?</p>\r\n	1	289	2017-05-01 15:02:06.470431	2017-05-01 15:02:06.470431
34	<p>the reviews key now holds an array as its value, but the value at the 0th index is no longer a hash but a string, as you are surronding your hash with a &#39; &#39; quote</p>\r\n	1	290	2017-05-01 15:04:35.363042	2017-05-01 15:04:35.363042
35	<p>&quot;ratingnumber&quot; key should have either been just 4.7 or as a string &quot;4.7/5&quot; as just having 4.7/5 as a value is invalid</p>\r\n	1	291	2017-05-01 15:05:48.899073	2017-05-01 15:05:48.899073
36	<p>Your thought process is clear, you were able to identify what the output needs to be, but here the solution&#39;s approach is hard coded, we will need to programatically get this to work ie</p>\r\n\r\n<p>output = {}<br />\r\ncolors_array.each do |color|<br />\r\n&nbsp;output[color[0]] = output[color[1]]<br />\r\nend</p>\r\n\r\n<p>What we are doing here, is taking the value at the 0th index to make it the key of the hash and the value of the 1th index to make it the value of the key in the hash.</p>\r\n	1	293	2017-05-01 15:09:56.898752	2017-05-01 15:09:56.898752
37	<p>output = {array[0] =&gt; array[1]}</p>\r\n\r\n<p>does this work ?</p>\r\n	1	292	2017-05-01 15:10:57.060457	2017-05-01 15:10:57.060457
38	<p>We are expected to write this program, without using the the in built method like min,</p>\r\n\r\n<p>the process will be to assume the first value in the array to be the minimum value and then compare each value with it, if we find a number lesser than the assumed value then we swap</p>\r\n	1	210	2017-05-01 15:22:17.691325	2017-05-01 15:22:17.691325
39	<p>&lt;p&gt;We are expected to write this program, without using the the in built method like min,&lt;/p&gt; &lt;p&gt;the process will be to assume the first value in the array to be the minimum value and then compare each value with it, if we find a number lesser than the assumed value then we swap&lt;/p&gt;</p>\r\n	1	206	2017-05-01 15:23:05.442836	2017-05-01 15:23:05.442836
40	<p>&lt;p&gt;We are expected to write this program, without using the the in built method like min,&lt;/p&gt; &lt;p&gt;the process will be to assume the first value in the array to be the minimum value and then compare each value with it, if we find a number lesser than the assumed value then we swap&lt;/p&gt;</p>\r\n	1	179	2017-05-01 15:23:18.285072	2017-05-01 15:23:18.285072
41	<p>Good Shravani, keep it up</p>\r\n	1	172	2017-05-01 15:23:37.427301	2017-05-01 15:23:37.427301
42	<p>ok</p>\r\n\r\n<p>menu = {</p>\r\n\r\n<p>&quot;soup&quot; =&gt; 90,</p>\r\n\r\n<p>&quot;gobi&quot; =&gt; &quot;65-120&quot;,</p>\r\n\r\n<p>&quot;panner butter masala&quot; =&gt; 150,</p>\r\n\r\n<p>&quot;roti&quot; =&gt; 30</p>\r\n\r\n<p>}</p>\r\n	9	228	2017-05-01 17:33:53.862295	2017-05-01 17:33:53.862295
43	<p>Yes. i corrected it later on after submitting the answer.</p>\r\n	9	286	2017-05-01 17:35:59.944775	2017-05-01 17:35:59.944775
88	<p>while reading n value from a keyboard, if i enter anything other than integer, it&nbsp;takes 0 as a value. it suppose to throw an error. i&#39;m not able to catch that runtime error.</p>\r\n	5	810	2017-06-21 16:01:47.964444	2017-06-21 16:01:47.964444
44	numbers = [100,200,123,875,450,1]\r\nminimum = numbers[0]\r\nmaximum = numbers[0]\r\ni=0\r\nnumbers.each do|number|\r\n    if numbers[i]<minimum\r\n        minimum = numbers[i]\r\n    end\r\n    if numbers[i]>maximum\r\n        maximum = numbers[i]\r\n    end\r\n    i +=1\r\nend\r\nputs "the minimum number is : #{minimum}"\r\nputs "the maximum number is : #{maximum}"\r\n\r\nsum = 0\r\naverage = 0\r\nnumbers.each do|number|\r\n    sum +=number\r\n    average = sum/numbers.length\r\nend\r\nputs "the sum is : #{sum}"\r\n\r\n\r\nnumbers = [10,12,21,30,-10,80,-9]\r\nnumbers.length\r\nnpositive=0\r\nnnegative=0\r\neven=0\r\nodd=0\r\nnumbers.each do|number|\r\n    if number>=0\r\n        npositive +=1\r\n    else\r\n        nnegative +=1\r\n    end\r\n\r\n    if number%2 == 0\r\n        even +=1\r\n    else\r\n        odd +=1\r\n    end\r\nend\r\nputs "poitive values are : #{npositive}"\r\nputs "negative values are : #{nnegative}"\r\nputs "even numbers are : #{even}"\r\nputs "odd numbers are : #{odd}"\r\n\r\n\r\n\r\n\r\nputs "the average is : #{average}"	12	271	2017-05-03 06:34:52.705511	2017-05-03 06:34:52.705511
45	<p>Good job.</p>\r\n	1	185	2017-05-05 18:48:48.218217	2017-05-05 18:48:48.218217
46	<p>array = [1,1,2,3,4,3,2,1,1]</p>\r\n\r\n<p>length = array.length<br />\r\ncenter_of_array = length/2</p>\r\n\r\n<p>left_sum = array.slice(0,center_of_array)<br />\r\nright_sum = array.slice(center_of_array + 1 ,length)</p>\r\n\r\n<p>puts &quot;left sum #{left_sum} , Right sum #{right_sum}&quot;</p>\r\n\r\n<p>sum_left = 0<br />\r\nsum_right = 0</p>\r\n\r\n<p>left_sum.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;sum_left +=&nbsp; num<br />\r\nend</p>\r\n\r\n<p>puts &quot;#{sum_left}&quot;</p>\r\n\r\n<p>right_sum.each do |num|<br />\r\n&nbsp;&nbsp; &nbsp;sum_right +=&nbsp; num<br />\r\nend</p>\r\n\r\n<p>puts &quot;#{sum_right}&quot;</p>\r\n\r\n<p>if sum_left == sum_right<br />\r\n&nbsp;puts &quot;left sum and right sum are same and array index is #{center_of_array} &quot;<br />\r\nelse<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;return -1&quot;<br />\r\nend</p>\r\n	9	401	2017-05-07 05:05:33.842449	2017-05-07 05:05:33.842449
47	sir do something becoz all come into one single line which is very difficult to read	12	415	2017-05-07 05:40:11.042939	2017-05-07 05:40:11.042939
48	<p>Good Keep it up</p>\r\n	1	417	2017-05-08 03:52:49.323853	2017-05-08 03:52:49.323853
49	<p>Consider having better naming convention for the block variables</p>\r\n	1	417	2017-05-08 03:53:16.742564	2017-05-08 03:53:16.742564
50	<p>Good keep it up.</p>\r\n\r\n<p>Consider having better naming convention for the block variables</p>\r\n	1	420	2017-05-08 03:53:32.734128	2017-05-08 03:53:32.734128
51	<p>Try this code for the inputs</p>\r\n\r\n<p>str1 - &#39;kloorwdf&#39;</p>\r\n\r\n<p>str2 - &#39;food&#39;<br />\r\nand your hash values should be greater than zero</p>\r\n	1	412	2017-05-08 03:59:34.587279	2017-05-08 03:59:34.587279
52	thank you sir !\r\nokey next time i'll take care of this .	12	417	2017-05-08 06:16:21.955952	2017-05-08 06:16:21.955952
53	<p>This is to setup the store</p>\r\n\r\n<p>categories = []<br />\r\nproducts = []<br />\r\nproduct_price = []<br />\r\nproduct_count = []<br />\r\nrange = 250..700<br />\r\nrange1 = 100..200</p>\r\n\r\n<p>i = 1<br />\r\n100.times do<br />\r\n&nbsp; category = Category.new<br />\r\n&nbsp; category.id = i<br />\r\n&nbsp; category.name = Faker::Commerce.department<br />\r\n&nbsp; categories.push(category)<br />\r\n&nbsp; i += 1<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p># Q1), Q2), Q5)<br />\r\nsorted_products = products.sort_by { |p| p.price }<br />\r\ncategories.each do |category|<br />\r\n&nbsp; category_products = sorted_products.select { |p| p.category_id == category.id }<br />\r\n&nbsp; puts &quot;#{category.name} has #{category_products.size} product(s)&quot;<br />\r\n&nbsp; category_products.each do |product|<br />\r\n&nbsp; &nbsp; puts &quot; &nbsp;#{product.name} costs INR #{product.price}&quot;<br />\r\n&nbsp; end<br />\r\n&nbsp;&nbsp;<br />\r\nend<br />\r\n&nbsp;</p>\r\n\r\n<p># Q6<br />\r\nproducts.each do |product|<br />\r\n&nbsp; if range1.include?(product.price)<br />\r\n&nbsp; &nbsp; puts &quot;#{product.name} -&gt; INR #{product.price}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p># Q4<br />\r\nproducts.each do |product|<br />\r\n&nbsp; if range.include?(product.price)<br />\r\n&nbsp; &nbsp; puts &quot;#{product.name} -&gt; INR #{product.price}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p># Q3<br />\r\nproducts.each do |product|<br />\r\n&nbsp; if product.price &lt; 500<br />\r\n&nbsp; &nbsp; puts &quot;#{product.name} -&gt; INR #{product.price}&quot;<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n	16	555	2017-05-10 18:22:19.907434	2017-05-10 18:22:19.907434
54		20	487	2017-05-12 16:43:46.864856	2017-05-12 16:43:46.864856
55	<p># require &quot;pry&quot;<br />\r\ndef spin(string)<br />\r\n&nbsp;&nbsp; &nbsp;str1 = []<br />\r\n&nbsp;&nbsp; &nbsp;res = []<br />\r\n&nbsp;&nbsp; &nbsp;string1 = string.split(&quot; &quot;)<br />\r\n&nbsp;&nbsp; &nbsp;string1.each do |word|<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if word.length &gt; 3<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;str1.push(word.reverse)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;str1.push(word)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;return str1.join(&#39; &#39;)<br />\r\n# binding.pry<br />\r\nend</p>\r\n\r\n<p>puts &quot;enter a string&quot;<br />\r\nstr = gets.chomp</p>\r\n\r\n<p>puts spin(str)</p>\r\n	4	426	2017-05-17 19:20:32.719831	2017-05-17 19:20:32.719831
56	<p>Good Sharan, keep it up</p>\r\n	1	607	2017-05-29 03:32:39.84594	2017-05-29 03:32:39.84594
57	<p>Good Preeti, keep it up</p>\r\n	1	575	2017-05-29 03:36:42.737484	2017-05-29 03:36:42.737484
58	<p>Good Chetan, keep in mind that, while you are defining a class with couple or more words, use Camel casing, instead of underscore</p>\r\n\r\n<p>like</p>\r\n\r\n<p>PersonNew</p>\r\n	1	596	2017-05-29 03:38:38.876288	2017-05-29 03:38:38.876288
59	<p>Good deepika, can you explain the sort! method where you are using &lt;=&gt; in the class this week.</p>\r\n	1	569	2017-05-29 03:40:49.734309	2017-05-29 03:40:49.734309
60	<p>Good vinays, Keep it up, can you explain this code</p>\r\n\r\n<p>@@cricketers.sort!{|a, b| a.average_runs &lt;=&gt; b.average_runs}</p>\r\n	1	583	2017-05-29 03:43:45.957187	2017-05-29 03:43:45.957187
61	<p>Good chetan, can you explain why you are using</p>\r\n\r\n<p>&nbsp; @@player2 = {} as an hash, though you might be building a new variable, but hash in its nature is unordered, this will work for small data set but not large set.</p>\r\n	1	597	2017-05-29 03:46:53.44235	2017-05-29 03:46:53.44235
62	It only does the mapping	1	629	2017-05-29 07:44:52.467516	2017-05-29 07:44:52.467516
63	<p>How about the other 2 things it does?</p>\r\n	1	635	2017-05-29 07:46:01.526022	2017-05-29 07:46:01.526022
64	<p>Be more careful, rewrite it again</p>\r\n	1	628	2017-05-29 07:46:45.287934	2017-05-29 07:46:45.287934
65	<p>require &#39;faker&#39;<br />\r\nclass Student&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;attr_accessor :roll_number, :name, :department, :course, :year_of_joining<br />\r\n&nbsp;&nbsp; &nbsp;@@students = []<br />\r\n&nbsp;&nbsp; &nbsp;def initialize(data)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@roll_number = data[&quot;roll_number&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@name = data[&quot;name&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@department = data[&quot;department&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@course = data[&quot;course&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@year_of_joining = data[&quot;year_of_joining&quot;]<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@@students.push(self)<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;def details&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;Roll_number-#{self.roll_number} Name-#{self.name} Department-#{self.department} Course-#{self.course} Year_of_joining-#{self.year_of_joining}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;def self.year(year_of_joining)<br />\r\n&nbsp;&nbsp; &nbsp;@@students.find_all{|student| student.year_of_joining == year_of_joining }<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\nend<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n15.times do&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;data = {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;roll_number&quot; =&gt; ((&#39;A&#39;..&#39;Z&#39;).to_a + (&#39;0&#39;..&#39;9&#39;).to_a).sample(8).join(&quot;&quot;),<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;name&quot; =&gt; Faker::Name.name,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;department&quot; =&gt; Faker::GameOfThrones.house,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;course&quot; =&gt; Faker::Educator.course,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;year_of_joining&quot; =&gt; [&quot;1994&quot;,&quot;1995&quot;,&quot;1996&quot;,&quot;1997&quot;,&quot;1998&quot;,&quot;1999&quot;,&quot;2000&quot;,&quot;2001&quot;,&quot;2002&quot;,&quot;2003&quot;,&quot;2004&quot;,&quot;2005&quot;,&quot;2006&quot;,&quot;2007&quot;,&quot;2008&quot;,&quot;2009&quot;,&quot;2010&quot;,&quot;2011&quot;,&quot;2012&quot;].sample<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\ns1 = Student.new(data)<br />\r\nputs s1.details<br />\r\n# puts students<br />\r\nend</p>\r\n\r\n<p># puts &quot;enter the year&quot;</p>\r\n\r\n<p># year_of_joining = gets.to_i<br />\r\nStudent.year(1995)</p>\r\n\r\n<p>Student.year.each do |s|<br />\r\n&nbsp;&nbsp; &nbsp;puts &quot;#{s.name}&quot;<br />\r\nend</p>\r\n\r\n<p>#coudnt complete it sir</p>\r\n	4	587	2017-05-30 17:48:45.654489	2017-05-30 17:48:45.654489
89	<p>As address is the first parameter you dont need to use &amp;</p>\r\n	1	812	2017-06-23 03:59:59.083382	2017-06-23 03:59:59.083382
90	<p>As address is the first parameter you dont need to use &amp;</p>\r\n	1	813	2017-06-23 04:01:40.386837	2017-06-23 04:01:40.386837
66	<p>order_string = &quot;ZNGA 1300 266 B,CLH15.NYM 50 56.32 S,OWW 1000 11.623 B,OGG 20 580.1 B&quot;<br />\r\norder_array = order_string.split(&quot;,&quot;)<br />\r\n# puts order_array<br />\r\ni = 0<br />\r\narray_sum = 0<br />\r\norder = []<br />\r\nsum_buy = 0&nbsp;<br />\r\nsum_sell = 0<br />\r\nvalidate = false<br />\r\ncount = 0<br />\r\nbadly_formed = []<br />\r\nwhile (i &lt; order_array.length)</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;order = order_array[i].split(&quot; &quot;)<br />\r\n&nbsp;&nbsp; &nbsp;# puts order<br />\r\n&nbsp;&nbsp; &nbsp;order_number = order[1].split(&quot;.&quot;)<br />\r\n&nbsp;&nbsp; &nbsp;# puts order_number.length<br />\r\n&nbsp;&nbsp; &nbsp;order_decimal = order[2].split(&quot;.&quot;)<br />\r\n&nbsp;&nbsp; &nbsp;# puts order_decimal.length<br />\r\n&nbsp;&nbsp; &nbsp;if order_number.length == 1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if order_decimal.length == 2<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if order[3] == &quot;B&quot; || order[3] == &quot;S&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;validate = true<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;# puts validate<br />\r\n&nbsp;&nbsp; &nbsp;if validate == true<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;multiply = order[1].to_f * order[2].to_f<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if order[3] == &quot;B&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sum_buy += multiply<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;elsif order[3] == &quot;S&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;sum_sell += multiply<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;end<br />\r\n&nbsp;&nbsp; &nbsp;else&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;puts &quot;badly formed sting #{order}&quot;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;count +=1<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;badly_formed.push(order)<br />\r\n&nbsp;&nbsp; &nbsp;end<br />\r\ni+=1<br />\r\nend</p>\r\n\r\n<p>puts &quot;your input is #{order_string}&quot;<br />\r\nputs &quot;Buy : #{sum_buy} Sell : #{sum_sell} Badly formed #{count} : #{badly_formed}&quot;</p>\r\n	4	588	2017-05-30 17:49:33.660386	2017-05-30 17:49:33.660386
67	<p>puts &quot;Enter number&quot;<br />\r\nnumber = gets.chomp #726</p>\r\n\r\n<p>def recursion(number)<br />\r\n&nbsp; if number.length &gt; 1<br />\r\n&nbsp; &nbsp; output = 1<br />\r\n&nbsp; &nbsp; number = number.split(&quot;&quot;) #[&quot;7&quot;, &quot;2&quot;, &quot;6&quot;]<br />\r\n&nbsp; &nbsp; number.each do |num|<br />\r\n&nbsp; &nbsp; &nbsp; output = num.to_i * output #(num.to_i is 7 and output is 1)<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; puts output<br />\r\n&nbsp; &nbsp; number = output.to_s</p>\r\n\r\n<p>&nbsp; &nbsp; if number.length &gt; 1<br />\r\n&nbsp; &nbsp; &nbsp; number = recursion(number)<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;Persistent number is #{number}&quot;<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; puts &quot;Persistent number is #{number}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p>result = recursion(number)<br />\r\nputs result</p>\r\n\r\n<p>Re-did this code with help from Lokhi.&nbsp;</p>\r\n	8	579	2017-06-03 11:09:25.413464	2017-06-03 11:09:25.413464
68	<p>def bugger(number)<br />\r\n&nbsp; output = 1<br />\r\n&nbsp; if number.length &gt; 1</p>\r\n\r\n<p>&nbsp; &nbsp; numbers = number.split(&quot;&quot;)<br />\r\n&nbsp; &nbsp; numbers.each do |num|<br />\r\n&nbsp; &nbsp; &nbsp; output = output * num.to_i</p>\r\n\r\n<p>&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; puts output<br />\r\n&nbsp; &nbsp; number = output.to_s</p>\r\n\r\n<p>&nbsp; &nbsp; if number.length &gt; 1<br />\r\n&nbsp; &nbsp; &nbsp; number = bugger(number)<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;Per : #{number}&quot;<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; else<br />\r\n&nbsp; &nbsp; puts &quot;Per: #{number}&quot;<br />\r\n&nbsp; end<br />\r\nend</p>\r\n\r\n<p><br />\r\nputs &quot;Enter a number&quot;<br />\r\nnumber = gets.chomp<br />\r\nresult = bugger(number)<br />\r\nputs result<br />\r\n&nbsp;</p>\r\n\r\n<p>sir In this codes, i tried through recursion.</p>\r\n	12	645	2017-06-03 11:09:51.887566	2017-06-03 11:09:51.887566
69	<p>This is a student&#39;s comment.</p>\r\n	13	779	2017-06-06 13:05:28.411109	2017-06-06 13:05:28.411109
70	<p>Rails controller &nbsp;</p>\r\n\r\n<ul>\r\n\t<li>Controllers has defined actions ,in which data is handled</li>\r\n\t<li>For each controller der an particular view file for it&nbsp;</li>\r\n\t<li>In view file we an can &nbsp;have form to create an edit an destroy.</li>\r\n\t<li>All this view file are controlled with action&#39;s defined in controllers&nbsp;</li>\r\n</ul>\r\n	4	673	2017-06-06 15:24:18.087274	2017-06-06 15:24:18.087274
71	<p>Rails controller &nbsp;</p>\r\n\r\n<ul>\r\n\t<li>Controllers has defined actions ,in which data is handled</li>\r\n\t<li>For each controller der an particular view file for it&nbsp;</li>\r\n\t<li>In view file we an can &nbsp;have form to create an edit an destroy.</li>\r\n\t<li>All this view file are controlled with action&#39;s defined in controllers&nbsp;</li>\r\n</ul>\r\n	4	673	2017-06-06 15:24:48.620481	2017-06-06 15:24:48.620481
72	<ol>\r\n\t<li>&nbsp;.errors</li>\r\n\t<li>.save</li>\r\n</ol>\r\n\r\n<p>p1 =Product.new</p>\r\n\r\n<p>p1.name = &quot;redmi&quot;</p>\r\n\r\n<p>p1.save&nbsp;</p>\r\n\r\n<ol>\r\n\t<li>&nbsp;.find</li>\r\n\t<li>where</li>\r\n</ol>\r\n\r\n<p>@category = Category.find(product.category_id).name</p>\r\n\r\n<p>@product = Product.where(&quot;category_id ?&quot;,category.id)</p>\r\n\r\n<ol>\r\n\t<li>update_attributes</li>\r\n</ol>\r\n\r\n<p>p1.update_attributes(name &quot;iphone&quot;)</p>\r\n\r\n<ol>\r\n\t<li>destroy</li>\r\n</ol>\r\n\r\n<p>p1.destroy</p>\r\n\r\n<p>&nbsp;</p>\r\n	4	672	2017-06-06 15:30:22.080229	2017-06-06 15:30:22.080229
73	<p>Are you sure?</p>\r\n	1	764	2017-06-07 11:09:25.830226	2017-06-07 11:09:25.830226
74	<p>Very good Meghal</p>\r\n	1	752	2017-06-07 11:11:07.190167	2017-06-07 11:11:07.190167
75		20	490	2017-06-07 18:44:02.621351	2017-06-07 18:44:02.621351
76		20	487	2017-06-07 18:44:23.899714	2017-06-07 18:44:23.899714
77	<p>where is the solution</p>\r\n	1	790	2017-06-14 11:28:24.931528	2017-06-14 11:28:24.931528
78	<p>You will need to define a new method of the string class called as camelCase</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if you observe the question we are not passing an argument to the method called as camelCase but we are calling the method camelCase on an object that belongs to the string class&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ie&nbsp;</p>\r\n\r\n<p>&quot;hello world&quot;.camelCase and not camelCase(&quot;hello world&quot;)&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	1	801	2017-06-15 15:51:24.70082	2017-06-15 15:51:24.70082
79	<p>You will need to define a new method of the string class called as camelCase</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if you observe the question we are not passing an argument to the method called as camelCase but we are calling the method camelCase on an object that belongs to the string class&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ie&nbsp;</p>\r\n\r\n<p>&quot;hello world&quot;.camelCase and not camelCase(&quot;hello world&quot;)&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	1	803	2017-06-15 15:52:36.964019	2017-06-15 15:52:36.964019
80	<p>You will need to define a new method of the string class called as camelCase</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if you observe the question we are not passing an argument to the method called as camelCase but we are calling the method camelCase on an object that belongs to the string class&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ie&nbsp;</p>\r\n\r\n<p>&quot;hello world&quot;.camelCase and not camelCase(&quot;hello world&quot;)&nbsp;</p>\r\n	1	805	2017-06-15 15:52:51.729432	2017-06-15 15:52:51.729432
81	<p>class String<br />\r\n&nbsp; def camelCase<br />\r\n&nbsp; &nbsp; words = self.split(&quot; &quot;)<br />\r\n&nbsp; &nbsp; output_string = &quot;&quot;<br />\r\n&nbsp; &nbsp; words.each do |word|<br />\r\n&nbsp; &nbsp; &nbsp; output_string += word.capitalize<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; return output_string<br />\r\n&nbsp; end<br />\r\nend<br />\r\nputs &quot;Enter a string&quot;<br />\r\ninput_string = gets.chomp<br />\r\nputs input_string.camelCase()</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	3	805	2017-06-15 17:16:29.526844	2017-06-15 17:16:29.526844
82	<p>I also tried the camel case without methods and class.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>puts &quot;Enter text here&quot;<br />\r\nwords = gets.chomp<br />\r\noutput = []<br />\r\nwords = words.split(&quot; &quot;)</p>\r\n\r\n<p>words.each do |word|<br />\r\n&nbsp; caps = word.capitalize<br />\r\n&nbsp; output.push(caps)<br />\r\nend</p>\r\n\r\n<p>result = output.join(&quot;&quot;)<br />\r\nputs result</p>\r\n	8	799	2017-06-17 15:36:26.631944	2017-06-17 15:36:26.631944
83	<p>I&#39;m just printing the value of v multiple times here, ill work on the given&nbsp;criteria tomorrow</p>\r\n	5	810	2017-06-19 18:29:28.026076	2017-06-19 18:29:28.026076
84	<p>Hi Vinays, i want you to achieve this programatically</p>\r\n	1	806	2017-06-20 03:38:26.393102	2017-06-20 03:38:26.393102
85	<p>Good Lokhi, I think if you send 1 more day on this you will be able to get the output</p>\r\n	1	809	2017-06-20 03:40:11.686416	2017-06-20 03:40:11.686416
86	<p>What is the update on this</p>\r\n	1	810	2017-06-21 11:50:59.135499	2017-06-21 11:50:59.135499
87	<p>def prefill(n,v)</p>\r\n\r\n<p>&nbsp; &nbsp;result = Array.new(n,v)<br />\r\n&nbsp; &nbsp;if n &gt;= 0<br />\r\n&nbsp; &nbsp; &nbsp; return &quot;#{result}&quot;<br />\r\n&nbsp; &nbsp;else<br />\r\n&nbsp; &nbsp; &nbsp; return &quot;n is invalid&quot;<br />\r\n&nbsp; &nbsp;end<br />\r\n&nbsp; &nbsp;&nbsp;<br />\r\nend</p>\r\n\r\n<p>puts &quot;Enter n&quot;<br />\r\nn = gets.to_i<br />\r\nputs &quot;Enter v&quot;<br />\r\nv = gets.chomp<br />\r\nputs prefill(n,v)</p>\r\n	5	810	2017-06-21 15:58:36.889647	2017-06-21 15:58:36.889647
91	<p>url = &quot;http://maps.googleapis.com/maps/api/geocode/json?address=DctAcademy&quot;</p>\r\n\r\n<p>you have already assigned value, it should just be</p>\r\n\r\n<p>url = &quot;http://maps.googleapis.com/maps/api/geocode/json?</p>\r\n	1	815	2017-06-23 04:02:25.796544	2017-06-23 04:02:25.796544
92	<p>Good Sharan. keep it up</p>\r\n	1	816	2017-06-23 04:02:48.175185	2017-06-23 04:02:48.175185
93	<p>Good, keep it up</p>\r\n	1	811	2017-06-23 04:03:01.275018	2017-06-23 04:03:01.275018
94	<p>Good keep it up</p>\r\n	1	814	2017-06-23 04:03:14.16244	2017-06-23 04:03:14.16244
95	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;<br />\r\nrequire &#39;pp&#39;</p>\r\n\r\n<p>businesses = [&quot;Dct Academy&quot;, &quot;Star Bucks Indiranagar&quot;, &quot;Bangalore Central JP Nagar&quot;, &quot;Manyata Tech Park&quot;]</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p><br />\r\nbusinesses.each do |business|</p>\r\n\r\n<p>response = HTTParty.get(&quot;#{url}address=#{business}&quot;)<br />\r\nresult = JSON.parse(response.body)</p>\r\n\r\n<p>puts &quot;#{business}&quot;<br />\r\nputs &quot;Address is : #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;<br />\r\nputs &quot;Co-ordinates : #{result[&quot;results&quot;][0][&quot;geometry&quot;]}&quot;<br />\r\nend</p>\r\n	12	813	2017-06-23 04:15:02.345512	2017-06-23 04:15:02.345512
96	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;<br />\r\nrequire &#39;pp&#39;</p>\r\n\r\n<p>businesses = [&quot;Dct Academy&quot;, &quot;Star Bucks Indiranagar&quot;, &quot;Bangalore Central JP Nagar&quot;, &quot;Manyata Tech Park&quot;]</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p><br />\r\nbusinesses.each do |business|</p>\r\n\r\n<p>response = HTTParty.get(&quot;#{url}address=#{business}&quot;)<br />\r\nresult = JSON.parse(response.body)</p>\r\n\r\n<p>puts &quot;#{business}&quot;<br />\r\nputs &quot;Address is : #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;<br />\r\nputs &quot;Co-ordinates : #{result[&quot;results&quot;][0][&quot;geometry&quot;]}&quot;<br />\r\nend</p>\r\n	12	813	2017-06-23 04:15:08.551067	2017-06-23 04:15:08.551067
97	<p>require &#39;httparty&#39;<br />\r\nrequire &#39;json&#39;<br />\r\nrequire &#39;pp&#39;</p>\r\n\r\n<p>businesses = [&quot;Dct Academy&quot;, &quot;Star Bucks Indiranagar&quot;, &quot;Bangalore Central JP Nagar&quot;, &quot;Manyata Tech Park&quot;]</p>\r\n\r\n<p>url = &quot;https://maps.googleapis.com/maps/api/geocode/json?&quot;</p>\r\n\r\n<p><br />\r\nbusinesses.each do |business|</p>\r\n\r\n<p>response = HTTParty.get(&quot;#{url}address=#{business}&quot;)<br />\r\nresult = JSON.parse(response.body)</p>\r\n\r\n<p>puts &quot;#{business}&quot;<br />\r\nputs &quot;Address is : #{result[&quot;results&quot;][0][&quot;formatted_address&quot;]}&quot;<br />\r\nputs &quot;Co-ordinates : #{result[&quot;results&quot;][0][&quot;geometry&quot;]}&quot;<br />\r\nend</p>\r\n	12	813	2017-06-23 04:15:16.317175	2017-06-23 04:15:16.317175
98	<p>Very good Prasad, Keep it up</p>\r\n	1	818	2017-06-24 05:32:51.747349	2017-06-24 05:32:51.747349
99	<p>Thanks !</p>\r\n	11	818	2017-06-26 06:10:16.268706	2017-06-26 06:10:16.268706
100	<p>Thanks !</p>\r\n	11	818	2017-06-26 06:11:56.737387	2017-06-26 06:11:56.737387
101	<p>def prefill(number,value)<br />\r\n&nbsp; prefill_result = []<br />\r\n&nbsp; number.times do<br />\r\n&nbsp; &nbsp; if number.is_a? Numeric<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; &nbsp; prefill_result.push(value)<br />\r\n&nbsp; &nbsp; elsif number.class == String<br />\r\n&nbsp; &nbsp; &nbsp; binding.pry<br />\r\n&nbsp; &nbsp; &nbsp; puts &quot;xyz is invalid&quot;<br />\r\n&nbsp; &nbsp; else<br />\r\n&nbsp; &nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; &nbsp; &nbsp; return (0)<br />\r\n&nbsp; &nbsp; end<br />\r\n&nbsp; &nbsp; #binding.pry<br />\r\n&nbsp; end<br />\r\n&nbsp; puts prefill_result<br />\r\nend</p>\r\n\r\n<p><br />\r\nputs &quot;Enter the number of times&quot;<br />\r\nnumber = gets.to_i<br />\r\nputs &quot;Enter the value of array&quot;<br />\r\nvalue = gets.chomp<br />\r\nprefill_result = prefill(number,value)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>sir but still i am confused why number.is_a? String is not working .....</p>\r\n	12	809	2017-07-03 19:23:31.790304	2017-07-03 19:23:31.790304
102	<p>num = gets.to_i<br />\r\nnumbers= []<br />\r\nwhile 1 &lt;=num</p>\r\n\r\n<p><br />\r\nnumbers.push(num)<br />\r\nnum -=1<br />\r\nend</p>\r\n\r\n<p>final_numbers = numbers.reverse</p>\r\n\r\n<p>puts final_numbers.join(&quot;, &quot;)</p>\r\n\r\n<p>sorry sir i rushed to upload instead checking once again</p>\r\n	39	827	2017-07-05 05:07:32.387052	2017-07-05 05:07:32.387052
103	<p>restaurants = {<br />\r\n&nbsp; &nbsp; :adigas =&gt; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :location =&gt; &quot;Jayanagar&quot;,&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :type =&gt; &quot;Quick Bite&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :rating =&gt; 3.4,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :phone_number =&gt; &quot;N/A&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :cuisines =&gt; [&quot;South India&quot;, &quot;Chinese&quot;],<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :cost_for_two =&gt; 150,&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :addresses =&gt; &quot;Jayanagar 4th Block&quot;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :highlights =&gt; [&quot;Breakfast&quot;, &quot;Veg&quot;],&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; :menu =&gt; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :south_indian =&gt; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :idly =&gt; 26,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :vade =&gt; 24,&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :coffee =&gt; 15,&nbsp;<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :masala_dosa =&gt; 43<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, :Chinese =&gt; {<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :noodles =&gt; 80,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :soup =&gt; 40<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; }<br />\r\n&nbsp; &nbsp; }<br />\r\n}</p>\r\n\r\n<p>puts &quot;#{restaurants[&quot;adigas&quot;][&quot;menu&quot;][&quot;south_indian&quot;]}&quot;</p>\r\n	36	834	2017-07-10 07:55:22.560263	2017-07-10 07:55:22.560263
\.


--
-- Name: comments_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('comments_id_seq', 103, true);


--
-- Data for Name: course_topics; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY course_topics (id, topic_id, course_id, created_at, updated_at) FROM stdin;
1	1	1	2017-04-21 06:12:07.002225	2017-04-21 06:12:07.002225
2	1	2	2017-04-21 10:17:08.273865	2017-04-21 10:17:08.273865
3	2	1	2017-05-10 14:14:37.025023	2017-05-10 14:14:37.025023
4	3	1	2017-05-26 12:16:17.992467	2017-05-26 12:16:17.992467
5	3	2	2017-05-26 12:16:17.99627	2017-05-26 12:16:17.99627
6	4	1	2017-05-29 06:20:40.134696	2017-05-29 06:20:40.134696
7	4	2	2017-05-29 06:20:40.137691	2017-05-29 06:20:40.137691
\.


--
-- Name: course_topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('course_topics_id_seq', 7, true);


--
-- Data for Name: courses; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY courses (id, name, created_at, updated_at) FROM stdin;
1	Web Development	2017-04-21 06:06:20.025304	2017-04-21 06:06:20.025304
2	Ruby on Rails Rockstar	2017-04-21 10:16:42.53746	2017-04-21 10:16:42.53746
\.


--
-- Name: courses_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('courses_id_seq', 2, true);


--
-- Data for Name: due_date_lists; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY due_date_lists (id, batch_set_id, user_ids, due_date_time, created_at, updated_at) FROM stdin;
1	3	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-04-26 00:00:00	2017-06-11 19:52:43.751141	2017-06-11 19:52:43.751141
2	1	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-04-26 00:00:00	2017-06-11 20:01:38.976873	2017-06-11 20:01:38.976873
3	5	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-04-27 00:00:00	2017-06-11 20:01:39.002442	2017-06-11 20:01:39.002442
4	4	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-04-27 00:00:00	2017-06-11 20:01:39.025737	2017-06-11 20:01:39.025737
5	2	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-04-27 00:00:00	2017-06-11 20:01:39.04732	2017-06-11 20:01:39.04732
6	6	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-04-28 00:00:00	2017-06-11 20:01:39.06924	2017-06-11 20:01:39.06924
7	7	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-04-27 23:00:00	2017-06-11 20:01:39.091088	2017-06-11 20:01:39.091088
8	10	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-01 09:00:00	2017-06-11 20:01:39.112411	2017-06-11 20:01:39.112411
9	8	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-02 03:30:00	2017-06-11 20:01:39.132882	2017-06-11 20:01:39.132882
10	9	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-02 03:30:00	2017-06-11 20:01:39.156124	2017-06-11 20:01:39.156124
11	12	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-07 03:30:00	2017-06-11 20:01:39.182515	2017-06-11 20:01:39.182515
12	13	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-03 09:30:00	2017-06-11 20:01:39.207272	2017-06-11 20:01:39.207272
13	14	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-08 09:30:00	2017-06-11 20:01:39.232735	2017-06-11 20:01:39.232735
14	15	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-10 18:29:00	2017-06-11 20:01:39.251842	2017-06-11 20:01:39.251842
15	16	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-10 18:29:00	2017-06-11 20:01:39.271479	2017-06-11 20:01:39.271479
16	18	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-18 18:29:00	2017-06-11 20:01:39.290109	2017-06-11 20:01:39.290109
17	19	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-19 14:30:00	2017-06-11 20:01:39.310525	2017-06-11 20:01:39.310525
18	17	{22,29,33,31,26,30,13,32,24,27,23,28,25}	2017-05-10 18:29:00	2017-06-11 20:01:39.332321	2017-06-11 20:01:39.332321
19	21	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-29 18:29:00	2017-06-11 20:01:39.353776	2017-06-11 20:01:39.353776
20	20	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-05-30 18:29:00	2017-06-11 20:01:39.375512	2017-06-11 20:01:39.375512
21	22	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-06-05 18:29:00	2017-06-11 20:01:39.39681	2017-06-11 20:01:39.39681
22	23	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	2017-06-05 18:29:00	2017-06-11 20:01:39.416726	2017-06-11 20:01:39.416726
23	24	{6,16,19,20,2,17,12,3,11,8,7,5,13,10,9,4}	2017-06-15 18:29:00	2017-06-14 11:08:33.566471	2017-06-14 11:08:33.566471
24	25	{6,16,19,20,2,17,12,3,11,8,7,5,13,10,9,4}	2017-06-19 18:29:00	2017-06-19 02:11:41.265135	2017-06-19 02:11:41.265135
25	26	{6,16,19,20,2,17,12,3,11,8,7,5,13,10,9,4}	2017-06-23 17:30:00	2017-06-22 14:44:13.562333	2017-06-22 14:44:13.562333
26	27	{35,37,40,41,34,39,36,13,42,38,43}	2017-07-05 17:30:00	2017-07-04 16:42:31.287473	2017-07-04 16:42:31.287473
27	28	{35,37,40,41,34,44,39,36,13,42,38,43}	2017-07-10 17:30:00	2017-07-10 07:37:38.717793	2017-07-10 07:37:38.717793
28	29	{19,20,2,12,3,11,8,7,5,10,9,4}	2017-07-21 17:30:00	2017-07-20 14:31:04.065764	2017-07-20 14:31:04.065764
29	30	{35,37,40,41,34,44,39,36,13,42,45,38,43}	2017-07-21 17:30:00	2017-07-20 14:40:08.983243	2017-07-20 14:40:08.983243
\.


--
-- Name: due_date_lists_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('due_date_lists_id_seq', 29, true);


--
-- Data for Name: event_types; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY event_types (id, name, created_at, updated_at) FROM stdin;
\.


--
-- Name: event_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('event_types_id_seq', 1, false);


--
-- Data for Name: events; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY events (id, event_type_id, created_at, updated_at, start_date, end_date) FROM stdin;
\.


--
-- Name: events_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('events_id_seq', 1, false);


--
-- Data for Name: knowledge_bases; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY knowledge_bases (id, title, body, is_private, chapter_id, topic_id, published, user_id, created_at, updated_at, links, article_code) FROM stdin;
1	Rails Directory Structure	<h2>The Structure of a Rails app</h2>\r\n\r\n<p>Here is an overview of all the folders of a new Rails application, outlining the purpose of each folder, and describing the most important files.</p>\r\n\r\n<table class="ui celled padded table">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Name</th>\r\n\t\t\t<th>Description</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>app</td>\r\n\t\t\t<td>This folder contains your application. Therefore it is the <strong>most important folder</strong> in Ruby on Rails and it is worth digging into its subfolders. See the following rows.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>app/assets</td>\r\n\t\t\t<td>Assets basically are your front-end stuff. This folder contains <em>images</em> you use on your website, <em>javascripts</em> for all your fancy front-end interaction and <em>stylesheets</em> for all your CSS making your website absolutely beautiful.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>app/controllers</td>\r\n\t\t\t<td>The controllers subdirectory contains the controllers, which handle the requests from the users. It is often responsible for a single resource type, such as places, users or attendees. Controllers also tie together the <em>models</em> and the <em>views</em>.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>app/helpers</td>\r\n\t\t\t<td>Helpers are used to take care of logic that is needed in the views in order to keep the views clean of logic and reuse that logic in multiple views.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>app/mailers</td>\r\n\t\t\t<td>Functionality to send emails goes here.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>app/models</td>\r\n\t\t\t<td>The models subdirectory holds the classes that model the business logic of our application. It is concerned with the things our application is about. Often this is data, that is also saved in the database. Examples here are a Person, or a Place class with all their typical behaviour.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>app/views</td>\r\n\t\t\t<td>\r\n\t\t\t<p>The views subdirectory contains the display templates that will be displayed to the user after a successful request. By default they are written in HTML with embedded ruby (.html.erb). The embedded ruby is used to insert data from the application. It is then converted to HTML and sent to the browser of the user. It has subdirectories for every resource of our application, e.g. places, persons. These subdirectories contain the associated view files.</p>\r\n\r\n\t\t\t<p>Files starting with an underscore (<em>_</em>) are called <em>partials</em>. Those are parts of a view which are reused in other views. A common example is <em>_form.html.erb</em> which contains the basic form for a given resource. It is used in the <em>new</em> and in the <em>edit</em> view since creating something and editing something looks pretty similar.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>config</td>\r\n\t\t\t<td>This directory contains the configuration files that your application will need, including your database configuration (in <em>database.yml</em>) and the particularly important <em>routes.rb</em> which decides how web requests are handled. The <em>routes.rb</em> file matches a given URL with the <em>controller</em> which will handle the request.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>db</td>\r\n\t\t\t<td>Contains a lot of <em>database</em> related files. Most importantly the <em>migrations</em> subdirectory, containing all your database migration files. Migrations set up your database structure, including the attributes of your models. With migrations you can add new attributes to existing models or create new models. So you could add the <em>favorite_color</em> attribute to your Person model so everyone can specify their favorite color.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>doc</td>\r\n\t\t\t<td>Contains the documentation you create for your application. Not too important when starting out.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>lib</td>\r\n\t\t\t<td>Short for library. Contains code you&#39;ve developed that is used in your application and may be used elsewhere. For example, this might be code used to get specific information from Facebook.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>log</td>\r\n\t\t\t<td>See all the funny stuff that is written in the console where you started the Rails server? It is written to your <em>development.log</em>. Logs contain runtime information of your application. If an error happens, it will be recorded here.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>public</td>\r\n\t\t\t<td>Contains static files that do not contain Ruby code, such as error pages.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>script</td>\r\n\t\t\t<td>By default contains what is executed when you type in the <em>rails</em> command. Seldom of importance to beginners.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>test</td>\r\n\t\t\t<td>Contains the tests for your application. With tests you make sure that your application actually does what you think it does. This directory might also be called <em>spec</em>, if you are using the RSpec gem (an alternative testing framework).</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>vendor</td>\r\n\t\t\t<td>A folder for software code provided by others (&quot;libraries&quot;). Most often, libraries are provided as <em>ruby gems</em> and installed using the <em>Gemfile</em>. If code is not available as a ruby gem then you should put it here. This might be the case for jQuery plugins. Probably won&#39;t be used that often in the beginning.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Gemfile</td>\r\n\t\t\t<td>\r\n\t\t\t<p>A file that specifies a list of gems that are required to run your application. Rails itself is a gem you will find listed in the Gemfile. Ruby gems are self-contained packages of code, more generally called libraries, that add functionality or features to your application.</p>\r\n\r\n\t\t\t<p>If you want to add a new gem to your application, add &quot;<strong>gem</strong> <em>gem_name</em>&quot; to your Gemfile, optionally specifying a version number. Save the file and then run <em>bundle install</em> to install the gem.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Gemfile.lock</td>\r\n\t\t\t<td>This file specifies the exact versions of all gems you use. Because some gems depend on other gems, Ruby will install all you need automatically. The file also contains specific version numbers. It can be used to make sure that everyone within a team is working with the same versions of gems. The file is auto-generated. <em>Do not edit this file.</em></td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n	f	12	3	t	1	2017-06-16 15:36:29.510359	2017-06-16 15:48:37.210649	#	\N
2	CMD / Terminal Basics	<table class="ui celled padded table">\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<th>Concept</th>\r\n\t\t\t<th>Usage</th>\r\n\t\t\t<th>Examples</th>\r\n\t\t\t<th>Description</th>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Change directory</td>\r\n\t\t\t<td><code><strong>cd</strong> <em>directory</em></code></td>\r\n\t\t\t<td>\r\n\t\t\t<p><code>cd my_app</code></p>\r\n\r\n\t\t\t<p><code>cd my_app/app/controllers</code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>Changes the directory to the specified directory on the console.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>List contents directory</td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>ls</strong> <em>directory</em></code></p>\r\n\r\n\t\t\t<p><code>Windows: <strong>dir</strong> <em>directory</em></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>ls</strong></code></p>\r\n\r\n\t\t\t<p><code><strong>ls</strong> <em>my_app</em></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>Shows all contents (files and folders) of the directory. If no directory is specified shows the contents of the current directory.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Directory you are currently in</td>\r\n\t\t\t<td><code><strong>pwd</strong></code></td>\r\n\t\t\t<td><code><strong>pwd</strong></code></td>\r\n\t\t\t<td>Shows the full path of the directory you are currently in. E.g. /home/tobi/railsgirls<br />\r\n\t\t\tA note on filenames: if a file or directory name starts with a slash / as in the output of pwd above, it is an absolute filename specifying the complete filename starting at the root of the current file system (e.g. hard disk). If the slash (/) is omitted, the file name is relative to the current working directory.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Create a new directory</td>\r\n\t\t\t<td><code><strong>mkdir</strong> <em>name</em></code></td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>mkdir</strong> <em>rails</em></code></p>\r\n\r\n\t\t\t<p><code><strong>mkdir</strong> <em>fun</em></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>Creates a directory with the given name in the folder you are currently in.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Delete a file</td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>rm</strong> <em>file</em></code></p>\r\n\r\n\t\t\t<p><code>Windows: <strong>del</strong> <em>file</em></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>rm</strong> <em>foo</em></code></p>\r\n\r\n\t\t\t<p><code><strong>rm</strong> <em>index.html</em></code></p>\r\n\r\n\t\t\t<p><code><strong>rm</strong> <em>pictures/old_picture.jpg</em></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Deletes the specified file. Be <strong>extra cautious</strong> with this as it would be too bad to delete something you still need :-(</p>\r\n\r\n\t\t\t<p>You can simply specify the name of a file of the directory you are currently in. However you can also specify a path, this is shown in the third example. There we delete the <em>old_picture.jpg</em> file from the <em>pictures</em> folder.</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Delete a directory</td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>rm -r</strong> <em>folder</em></code></p>\r\n\r\n\t\t\t<p><code>Windows: <strong>rd</strong> <em>folder</em></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>rm -r</strong> <em>stuff_i_dont_need</em></code></p>\r\n\r\n\t\t\t<p><code><strong>rm -r</strong> <em>stuff_i_dont_need/</em></code></p>\r\n\r\n\t\t\t<p><code><strong>rm -r</strong> <em>old_application</em></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>\r\n\t\t\t<p>Deletes the specified folder <strong>and all of its contents</strong>. So please be <strong>super cautious</strong> with this! Make sure that you do not need any of the contents of this folder any more.</p>\r\n\r\n\t\t\t<p>So why would you want to delete a whole folder? Well maybe it was an old application that you do not need anymore :-)</p>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Starting a program</td>\r\n\t\t\t<td><code><strong>program</strong> <em>arguments</em></code></td>\r\n\t\t\t<td>\r\n\t\t\t<p><code><strong>firefox</strong></code></p>\r\n\r\n\t\t\t<p><code><strong>firefox</strong> <em>railsgirlsberlin.de</em></code></p>\r\n\r\n\t\t\t<p><code><strong>irb</strong></code></p>\r\n\t\t\t</td>\r\n\t\t\t<td>Starts the program with the given name and arbitrary arguments if the program takes arguments. Firefox is just one example. Starting Firefox without arguments just opens up Firefox. If you give it an argument it opens the specified URL. When you type in <code>irb</code> this starts <em>interactive ruby</em>.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>Abort the program</td>\r\n\t\t\t<td>Press <strong>Ctrl + C</strong></td>\r\n\t\t\t<td>-</td>\r\n\t\t\t<td>This will abort the program currently running in the terminal. For instance this is used to shut down the Rails server. You can also abort many other related tasks with it, including: bundle install, rake db:migrate, git pull and many more!</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n	f	1	1	t	1	2017-06-16 15:51:39.934683	2017-07-05 08:26:24.614784	#	\N
3	API Codes	<table class="ui celled padded table dataTable">\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Error Code</th>\r\n\t\t\t<th>Meaning</th>\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>400</td>\r\n\t\t\t<td>Bad Request &ndash; Something went wrong</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>401</td>\r\n\t\t\t<td>Unauthorized &ndash; Your API key is wrong</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>403</td>\r\n\t\t\t<td>Forbidden &ndash; You do not have permission to access this resource</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>404</td>\r\n\t\t\t<td>Not Found &ndash; The specified resource could not be found</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>405</td>\r\n\t\t\t<td>Method Not Allowed &ndash; You tried to access a resource with an invalid method</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>406</td>\r\n\t\t\t<td>Not Acceptable &ndash; You requested a format that isn&rsquo;t json</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>422</td>\r\n\t\t\t<td>Unprocessable Entity &ndash; Your input failed validation.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>429</td>\r\n\t\t\t<td>Too Many Requests &ndash; You&rsquo;re making too many API requests.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>500</td>\r\n\t\t\t<td>Internal Server Error &ndash; We had a problem with our server. Try again later.</td>\r\n\t\t</tr>\r\n\t\t<tr>\r\n\t\t\t<td>503</td>\r\n\t\t\t<td>Service Unavailable &ndash; We&rsquo;re temporarily offline for maintenance. Please try again later.</td>\r\n\t\t</tr>\r\n\t</tbody>\r\n</table>\r\n	f	16	1	t	1	2017-07-01 05:43:22.967379	2017-07-07 15:13:53.412363		DCT-RB-API-0001
\.


--
-- Name: knowledge_bases_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('knowledge_bases_id_seq', 3, true);


--
-- Data for Name: options; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY options (id, statement, is_answer, question_id, created_at, updated_at) FROM stdin;
1	true	t	1	2017-04-21 06:46:16.763452	2017-04-21 06:46:16.763452
2	false	f	1	2017-04-21 06:46:16.777903	2017-04-21 06:46:16.777903
3	true	t	2	2017-04-21 06:47:22.480903	2017-04-21 06:47:22.480903
4	false	f	2	2017-04-21 06:47:22.485709	2017-04-21 06:47:22.485709
11	var n1;	f	5	2017-04-21 06:49:23.508728	2017-04-21 06:49:23.508728
12	int n2 = 200;	f	5	2017-04-21 06:49:23.514922	2017-04-21 06:49:23.514922
13	n1 = 100	t	5	2017-04-21 06:49:23.517332	2017-04-21 06:49:23.517332
14		\N	6	2017-04-21 06:50:52.600414	2017-04-21 06:50:52.600414
15		\N	7	2017-04-21 06:52:08.219137	2017-04-21 06:52:08.219137
16	["mango", "water melon", "apple"]	t	9	2017-04-24 06:03:00.209133	2017-04-24 06:03:00.209133
17	["mango, water melon, \r\n apple"] 	f	9	2017-04-24 06:03:00.214312	2017-04-24 06:03:00.214312
18	["mango"], ["water melon"], ["apple"]	f	9	2017-04-24 06:03:00.217396	2017-04-24 06:03:00.217396
19	"mango", "water melon", "apple"	f	9	2017-04-24 06:03:00.219363	2017-04-24 06:03:00.219363
20		f	10	2017-04-24 06:03:31.302631	2017-04-24 06:03:31.302631
21	Integer	f	11	2017-04-24 06:04:55.211548	2017-04-24 06:04:55.211548
22	Fixnum	t	11	2017-04-24 06:04:55.213617	2017-04-24 06:04:55.213617
23	false	t	12	2017-04-24 06:05:51.557141	2017-04-24 06:05:51.557141
24	true	f	12	2017-04-24 06:05:51.559491	2017-04-24 06:05:51.559491
25	true	t	14	2017-04-25 03:57:04.99416	2017-04-25 03:57:04.99416
26	false	f	14	2017-04-25 03:57:04.998447	2017-04-25 03:57:04.998447
27		f	15	2017-04-25 03:57:47.424083	2017-04-25 03:57:47.424083
28		f	16	2017-04-25 03:59:29.706889	2017-04-25 03:59:29.706889
29		f	17	2017-04-25 04:00:22.557086	2017-04-25 04:00:22.557086
30		f	18	2017-04-25 04:01:12.556984	2017-04-25 04:01:12.556984
35	sometimes 	f	23	2017-04-27 03:36:39.193078	2017-04-27 03:36:39.193078
36	false	f	23	2017-04-27 03:36:39.275925	2017-04-27 03:36:39.275925
37	true	t	23	2017-04-27 03:36:39.300654	2017-04-27 03:36:39.300654
40		f	25	2017-04-27 03:39:14.865015	2017-04-27 03:39:14.865015
41		f	26	2017-04-27 03:40:08.96392	2017-04-27 03:40:08.96392
42	to save information in an ordered collection 	f	27	2017-04-27 03:41:43.834903	2017-04-27 03:41:43.834903
43	when we have a large set of data 	f	27	2017-04-27 03:41:43.843002	2017-04-27 03:41:43.843002
44	when both the key and values matter to us	t	27	2017-04-27 03:41:43.845431	2017-04-27 03:41:43.845431
45	None of the above	f	27	2017-04-27 03:41:43.847975	2017-04-27 03:41:43.847975
38	false	t	24	2017-04-27 03:37:32.919986	2017-04-27 06:24:37.76576
39	true 	f	24	2017-04-27 03:37:32.921974	2017-04-27 06:24:37.768763
49		f	31	2017-05-01 06:01:40.557996	2017-05-01 06:01:40.557996
51	true	t	33	2017-05-03 05:59:35.051191	2017-05-03 05:59:35.051191
52	false 	f	33	2017-05-03 05:59:35.055024	2017-05-03 05:59:35.055024
53	false	f	34	2017-05-03 06:01:23.956788	2017-05-03 06:01:23.956788
54	true	t	34	2017-05-03 06:01:23.959066	2017-05-03 06:01:23.959066
55	false	t	35	2017-05-03 06:02:37.292711	2017-05-03 06:02:37.292711
56	true	f	35	2017-05-03 06:02:37.294469	2017-05-03 06:02:37.294469
57	maybe	f	35	2017-05-03 06:02:37.296255	2017-05-03 06:02:37.296255
58	true	t	36	2017-05-03 06:03:33.023928	2017-05-03 06:03:33.023928
59	false	f	36	2017-05-03 06:03:33.025708	2017-05-03 06:03:33.025708
60		f	37	2017-05-03 06:04:46.631525	2017-05-03 06:04:46.631525
61		f	38	2017-05-03 06:05:20.718539	2017-05-03 06:05:20.718539
62		f	39	2017-05-05 05:48:55.248611	2017-05-05 05:48:55.248611
66		f	49	2017-05-10 14:19:47.365506	2017-05-10 14:19:47.365506
67		f	50	2017-05-10 14:20:54.34179	2017-05-10 14:20:54.34179
68		f	51	2017-05-10 14:22:39.805987	2017-05-10 14:22:39.805987
69		f	52	2017-05-10 14:25:18.877209	2017-05-10 14:25:18.877209
75		f	58	2017-05-19 17:53:46.892563	2017-05-19 17:53:46.892563
76		f	59	2017-05-19 17:56:50.504074	2017-05-19 17:56:50.504074
77		f	60	2017-05-19 17:58:19.078539	2017-05-19 17:58:19.078539
\.


--
-- Name: options_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('options_id_seq', 78, true);


--
-- Data for Name: question_set_chapter_topics; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY question_set_chapter_topics (id, question_set_id, chapter_id, topic_id, created_at, updated_at) FROM stdin;
1	23	5	1	2017-06-14 11:08:33.556909	2017-06-14 11:08:33.556909
2	24	2	1	2017-06-14 11:08:33.563517	2017-06-14 11:08:33.563517
3	25	4	1	2017-06-19 02:11:41.254375	2017-06-19 02:11:41.254375
4	26	16	1	2017-06-22 14:44:13.558188	2017-06-22 14:44:13.558188
5	27	3	1	2017-07-04 16:42:31.250028	2017-07-04 16:42:31.250028
6	28	5	1	2017-07-10 07:37:38.71133	2017-07-10 07:37:38.71133
7	29	4	1	2017-07-20 14:31:04.059676	2017-07-20 14:31:04.059676
8	30	4	1	2017-07-20 14:40:08.979352	2017-07-20 14:40:08.979352
9	30	10	1	2017-07-20 14:40:08.98123	2017-07-20 14:40:08.98123
\.


--
-- Name: question_set_chapter_topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('question_set_chapter_topics_id_seq', 9, true);


--
-- Data for Name: question_sets; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY question_sets (id, created_at, updated_at, batch_set_id, question_ids, user_ids, difficulty_level) FROM stdin;
1	2017-06-11 20:01:38.958694	2017-06-11 20:01:38.958694	3	{13}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
2	2017-06-11 20:01:38.989706	2017-06-11 20:01:38.989706	1	{1,2,5,6,7}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
3	2017-06-11 20:01:39.014977	2017-06-11 20:01:39.014977	5	{19,20}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
4	2017-06-11 20:01:39.035926	2017-06-11 20:01:39.035926	4	{14,15,16,17,18}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
5	2017-06-11 20:01:39.058647	2017-06-11 20:01:39.058647	2	{8,9,10,11,12}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
6	2017-06-11 20:01:39.079599	2017-06-11 20:01:39.079599	6	{21,22}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
7	2017-06-11 20:01:39.1016	2017-06-11 20:01:39.1016	7	{23,24,25,26,27}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
8	2017-06-11 20:01:39.122601	2017-06-11 20:01:39.122601	10	{31}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
9	2017-06-11 20:01:39.144264	2017-06-11 20:01:39.144264	8	{28,29}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
10	2017-06-11 20:01:39.169053	2017-06-11 20:01:39.169053	9	{30}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
11	2017-06-11 20:01:39.195094	2017-06-11 20:01:39.195094	12	{32}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
12	2017-06-11 20:01:39.221607	2017-06-11 20:01:39.221607	13	{33,34,35,36,37,38}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
13	2017-06-11 20:01:39.242169	2017-06-11 20:01:39.242169	14	{41,40,39}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
14	2017-06-11 20:01:39.261575	2017-06-11 20:01:39.261575	15	{43,45,46,42,47,44}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
15	2017-06-11 20:01:39.280918	2017-06-11 20:01:39.280918	16	{48}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
16	2017-06-11 20:01:39.300558	2017-06-11 20:01:39.300558	18	{53}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
17	2017-06-11 20:01:39.321552	2017-06-11 20:01:39.321552	19	{54}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
18	2017-06-11 20:01:39.342629	2017-06-11 20:01:39.342629	17	{49,50,51,52}	{22,29,33,31,26,30,13,32,24,27,23,28,25}	\N
19	2017-06-11 20:01:39.365018	2017-06-11 20:01:39.365018	21	{62,63}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
20	2017-06-11 20:01:39.386389	2017-06-11 20:01:39.386389	20	{54,55,56,57,58,60,59}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
21	2017-06-11 20:01:39.406627	2017-06-11 20:01:39.406627	22	{68}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
22	2017-06-11 20:01:39.426411	2017-06-11 20:01:39.426411	23	{69,73,74,62,64,65,66,67}	{6,7,17,18,10,3,15,12,11,4,13,2,19,8,9,5,16,20}	\N
23	2017-06-14 11:08:33.551836	2017-06-14 11:09:28.11492	24	{76}	{6,16,19,20,2,17,12,3,11,8,7,5,13,10,9,4}	\N
24	2017-06-14 11:08:33.561027	2017-06-14 11:09:28.118058	24	{77}	{19,20,3,13}	\N
25	2017-06-19 02:11:41.219296	2017-06-19 02:11:58.928259	25	{78}	{6,16,19,20,2,17,12,3,11,8,7,5,13,10,9,4}	medium
26	2017-06-22 14:44:13.553648	2017-06-22 14:44:23.141341	26	{101}	{6,16,19,20,2,17,12,3,11,8,7,5,13,10,9,4}	medium
27	2017-07-04 16:42:31.244719	2017-07-04 16:45:19.940501	27	{90,102}	{35,37,40,41,34,39,36,13,42,38,43}	easy
28	2017-07-10 07:37:38.706763	2017-07-10 07:38:46.269696	28	{104,103}	{35,37,40,41,34,44,39,36,13,42,38,43}	easy
29	2017-07-20 14:31:04.053616	2017-07-20 14:31:42.729787	29	{105}	{19,20,2,12,3,11,8,7,5,10,9,4}	medium
30	2017-07-20 14:40:08.977398	2017-07-20 14:42:11.690405	30	{20,92,98}	{35,37,40,41,34,44,39,36,13,42,45,38,43}	easy
\.


--
-- Name: question_sets_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('question_sets_id_seq', 30, true);


--
-- Data for Name: question_types; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY question_types (id, name, created_at, updated_at) FROM stdin;
1	MCQ	2017-04-21 06:22:29.759502	2017-04-21 06:22:29.759502
2	Text	2017-04-21 06:22:38.55707	2017-04-21 06:22:38.55707
\.


--
-- Name: question_types_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('question_types_id_seq', 2, true);


--
-- Data for Name: questions; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY questions (id, statement, question_type_id, answer_option_id, created_at, updated_at, topic_id, chapter_id, kind, code, title, difficulty_level, tag_ids) FROM stdin;
1	Ruby is a loosely typed programming language	1	1	2017-04-21 06:46:16.728347	2017-04-21 06:46:16.728347	1	1	\N	\N	\N	\N	{}
2	Variables are the only thing that is not an object in ruby	1	3	2017-04-21 06:47:22.477847	2017-04-21 06:47:22.477847	1	1	\N	\N	\N	\N	{}
5	which of the below is a valid statement in ruby	1	13	2017-04-21 06:49:23.506218	2017-04-21 06:49:23.506218	1	1	\N	\N	\N	\N	{}
6	What are the places that ruby is used?	2	\N	2017-04-21 06:50:52.593919	2017-04-21 06:50:52.593919	1	1	\N	\N	\N	\N	{}
7	What are the 3 things to consider while working with loops	2	\N	2017-04-21 06:52:08.21637	2017-04-21 06:52:08.21637	1	1	\N	\N	\N	\N	{}
8	What is string Interpolation?	2	\N	2017-04-24 05:59:50.323314	2017-04-24 05:59:56.080718	1	2	assessment	\N	\N	\N	{}
9	"mango, water melon, apple".split(", ") return ? 	1	16	2017-04-24 06:03:00.206882	2017-04-24 06:03:00.206882	1	2	assessment	\N	\N	\N	{}
10	Mention few string methods 	2	\N	2017-04-24 06:03:31.299408	2017-04-24 06:03:31.299408	1	2	assessment	\N	\N	\N	{}
11	100.class returns 	1	22	2017-04-24 06:04:55.209103	2017-04-24 06:04:55.209103	1	3	assessment	\N	\N	\N	{}
12	"125" == 125 returns ? 	1	23	2017-04-24 06:05:51.554459	2017-04-24 06:05:51.554459	1	3	assessment	\N	\N	\N	{}
14	<p>In ruby, arrays can hold values of multiple types</p>\r\n	1	25	2017-04-25 03:57:04.989299	2017-04-25 03:57:04.989299	1	4	assessment	\N	\N	\N	{}
15	<p>Mention 4 mutable methods in array</p>\r\n	2	\N	2017-04-25 03:57:47.416336	2017-04-25 03:57:47.416336	1	4	assessment	\N	\N	\N	{}
16	<p>Write the difference between the methods</p>\r\n\r\n<ul>\r\n\t<li>delete_at</li>\r\n\t<li>delete</li>\r\n</ul>\r\n	2	\N	2017-04-25 03:59:29.703254	2017-04-25 03:59:29.703254	1	4	assessment	\N	\N	\N	{}
17	<p>What are the ways for creating a new array?</p>\r\n	2	\N	2017-04-25 04:00:22.552633	2017-04-25 04:00:22.552633	1	4	assessment	\N	\N	\N	{}
18	<p>Write the difference between the methods</p>\r\n\r\n<ol>\r\n\t<li>push</li>\r\n\t<li>pop</li>\r\n\t<li>shift</li>\r\n\t<li>unshift</li>\r\n</ol>\r\n	2	\N	2017-04-25 04:01:12.555221	2017-04-25 04:01:12.555221	1	4	assessment	\N	\N	\N	{}
23	<p>The keys in a hash should always be unique</p>\r\n	1	37	2017-04-27 03:36:39.144232	2017-04-27 03:36:39.144232	1	5	assessment	\N	\N	\N	{}
24	<p>Is this a valid hash</p>\r\n\r\n<p>player = { &quot;name&quot; : &quot;sachin&quot;, &quot;matches&quot; : 150 }</p>\r\n	1	39	2017-04-27 03:37:32.917699	2017-04-27 03:37:32.917699	1	5	assessment	\N	\N	\N	{}
25	<p>Create a key value pair for storing the following information</p>\r\n\r\n<p><strong>MENU</strong></p>\r\n\r\n<ol>\r\n\t<li>Soup - 90</li>\r\n\t<li>Gobi 65 - 120</li>\r\n\t<li>Panner Butter Masala - 150</li>\r\n\t<li>Roti - 30</li>\r\n</ol>\r\n	2	\N	2017-04-27 03:39:14.862578	2017-04-27 03:39:14.862578	1	5	assessment	\N	\N	\N	{}
26	<p>Write couple of differences between arrays and hashes?</p>\r\n	2	\N	2017-04-27 03:40:08.961884	2017-04-27 03:40:08.961884	1	5	assessment	\N	\N	\N	{}
27	<p>When do we choose a hash over an array?</p>\r\n	1	44	2017-04-27 03:41:43.811088	2017-04-27 03:41:43.811088	1	5	assessment	\N	\N	\N	{}
68	<p>Create controller called as sub_categories</p>\r\n\r\n<ol>\r\n\t<li>Add resources&nbsp;</li>\r\n\t<li>7 actions</li>\r\n\t<li>views for the actions</li>\r\n</ol>\r\n	2	\N	2017-06-05 06:31:06.202989	2017-06-16 04:56:25.578185	3	13	assignment	DCT-2MT-CTR-0001		medium	{}
70	<p>List the associations in rails</p>\r\n	2	\N	2017-06-05 06:37:12.727992	2017-06-05 06:37:12.727992	3	15	assessment	\N	\N	\N	{}
71	<p>When do we use has many and belongs to association</p>\r\n	2	\N	2017-06-05 06:37:39.927034	2017-06-05 06:37:39.927034	3	15	assessment	\N	\N	\N	{}
72	<p>What are the advantages of using associations?</p>\r\n	2	\N	2017-06-05 06:38:15.899042	2017-06-05 06:38:15.899042	3	15	assessment	\N	\N	\N	{}
69	<p>List out what can Rails Migration do?</p>\r\n	2	\N	2017-06-05 06:34:19.963467	2017-06-05 06:39:22.091988	3	14	assessment	\N	\N	\N	{}
73	<p>Mention what is the role of Rails Controller?</p>\r\n	2	\N	2017-06-05 06:39:57.286347	2017-06-05 06:39:57.286347	3	13	assessment	\N	\N	\N	{}
74	<p>Mention what is the difference between redirect and render in Ruby on Rails?</p>\r\n	2	\N	2017-06-05 06:40:55.484372	2017-06-05 06:40:55.484372	3	13	assessment	\N	\N	\N	{}
31	<p>Create a hash by using the data from</p>\r\n\r\n<p>https://www.zomato.com/bangalore/truffles-koramangala-5th-block</p>\r\n\r\n<p><br />\r\ninformation to be extracted is</p>\r\n\r\n<p>name<br />\r\nlocation<br />\r\naddress<br />\r\ncuisines (array of strings)<br />\r\nrating number<br />\r\nhighlights (array of strings)</p>\r\n\r\n<p>reviews (array of hashes, where the key of each hash is name: , rating:,&nbsp; body:)</p>\r\n	2	\N	2017-05-01 06:01:40.551913	2017-05-01 06:06:14.113078	1	5	assessment	\N	\N	\N	{}
33	<p>inside a method, using return keyword for returning a value is optional</p>\r\n	1	51	2017-05-03 05:59:35.044857	2017-05-03 05:59:35.044857	1	6	assessment	\N	\N	\N	{}
34	<p>if return keyword is not used inside the method, the last statement executed will be the returned value</p>\r\n	1	54	2017-05-03 06:01:23.954063	2017-05-03 06:01:23.954063	1	6	assessment	\N	\N	\N	{}
35	<p>a local variable is available directly inside the method</p>\r\n	1	55	2017-05-03 06:02:37.290874	2017-05-03 06:02:37.290874	1	6	assessment	\N	\N	\N	{}
36	<p>A variable defined inside the method is local only to that method</p>\r\n	1	58	2017-05-03 06:03:33.018638	2017-05-03 06:03:33.018638	1	6	assessment	\N	\N	\N	{}
22	<p>Given an array [100,200,123,450,875,1]&nbsp; find the</p>\r\n\r\n<ol>\r\n\t<li>minimum</li>\r\n\t<li>maximum</li>\r\n\t<li>sum</li>\r\n\t<li>average</li>\r\n</ol>\r\n	2	\N	2017-04-26 12:24:58.151969	2017-07-20 17:50:22.166882	1	4	assignment	DCT-2ET-ARR-0004	 Min, Max, Sum & Average	easy	{3,2,5,1,4}
21	<p>Given an array : numbers = [10,12,21,30,-10,80,-9]</p>\r\n\r\n<p>Write a program to find out how many are positive and negative and even and odd</p>\r\n	2	\N	2017-04-26 12:23:49.389353	2017-07-20 17:50:22.000535	1	4	assignment	DCT-2ET-ARR-0003	Find positive, negative, even & odd Numbers	easy	{3,2,1,5,4}
20	<p>Given an array of integers your solution should find the smallest integer. For example:</p>\r\n\r\n<ul>\r\n\t<li>Given [34, 15, 88, 2] your solution will return 2</li>\r\n\t<li>Given [34, -345, -1, 100] your solution will return -345</li>\r\n</ul>\r\n\r\n<p><br />\r\nYou can assume, for the purpose of this kata, that the supplied array will not be empty.</p>\r\n	2	\N	2017-04-25 05:58:50.534366	2017-07-20 17:50:22.0905	1	4	assignment	DCT-2ET-ARR-0002	Find the smallest integer in the array	easy	{3,2,5,1,4}
37	<p>What does * represent in the method definition below? And how does it work?</p>\r\n\r\n<p>def cart_total(*prices)</p>\r\n\r\n<p>end</p>\r\n\r\n<p>&nbsp;</p>\r\n	2	\N	2017-05-03 06:04:46.62912	2017-05-03 06:04:46.62912	1	6	assessment	\N	\N	\N	{}
38	<p>List the Types of Variable</p>\r\n	2	\N	2017-05-03 06:05:20.71608	2017-05-03 06:05:20.71608	1	6	assessment	\N	\N	\N	{}
48	<p>1) Find the count of products for each of the category<br />\r\n2) Display the name of the category while listing the products<br />\r\n3) Find all the products whose price is less than 500<br />\r\n4) Find all the products whose price is in the range of 250 - 700<br />\r\n5) List all the products belonging to a certain category whose price is listed in the ascending order<br />\r\n6) Find all the products belonging to a certain category whose price is in the range of 100 - 200</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n	2	\N	2017-05-10 06:39:06.615624	2017-06-16 05:26:43.65541	1	7	assignment	DCT-2MT-C&O-0001		medium	{}
43	<p>Define an instance variables with example?</p>\r\n	2	\N	2017-05-10 05:52:51.334998	2017-05-10 05:52:51.334998	1	8	assessment	\N	\N	\N	{}
45	<p>Explain rules to choose variables name?</p>\r\n	2	\N	2017-05-10 05:55:12.494886	2017-05-10 05:55:12.494886	1	8	assessment	\N	\N	\N	{}
46	<p>Define class? Give real time example for class.</p>\r\n	2	\N	2017-05-10 05:55:54.429449	2017-05-10 05:55:54.429449	1	7	assessment	\N	\N	\N	{}
42	<p>What is an object?</p>\r\n	2	\N	2017-05-10 05:46:56.522936	2017-05-10 05:57:05.906993	1	7	assessment	\N	\N	\N	{}
47	<p>How attr_accessor is different from attr_reader and attr_writer?</p>\r\n\r\n<p>&nbsp;</p>\r\n	2	\N	2017-05-10 05:56:38.624332	2017-05-10 06:02:00.360999	1	7	assessment	\N	\N	\N	{}
44	<p>Mention why we use reader methods &amp; writer methods .</p>\r\n	2	\N	2017-05-10 05:53:46.838904	2017-05-10 06:02:08.869594	1	7	assessment	\N	\N	\N	{}
49	<p>When do we use document.getElementById &amp; document.getElementsByTagName ?</p>\r\n	2	\N	2017-05-10 14:19:47.361765	2017-05-10 14:19:47.361765	2	10	assessment	\N	\N	\N	{}
50	<p>Mention the 3 node elements</p>\r\n	2	\N	2017-05-10 14:20:54.336778	2017-05-10 14:20:54.336778	2	10	assessment	\N	\N	\N	{}
51	<p>Identify all the textNode, attributeNode and elementNode in the below mentioned code</p>\r\n\r\n<p>&lt;a href=&quot;www.google.com&quot; target=&quot;_blank&quot;&gt; Visit Google &lt;/a&gt;</p>\r\n	2	\N	2017-05-10 14:22:39.796006	2017-05-10 14:22:39.796006	2	10	assessment	\N	\N	\N	{}
52	<p>Create an object using Javascript with object prototype and without object prototype ?&nbsp;</p>\r\n	2	\N	2017-05-10 14:25:18.874961	2017-05-10 14:27:45.12355	2	6	assessment	\N	\N	\N	{}
62	<p>What is ORM? Mention the uses of it?</p>\r\n	2	\N	2017-05-29 06:20:25.312361	2017-05-29 06:20:25.312361	3	11	assessment	\N	\N	\N	{}
63	<p>List conventions over configurations covered so far</p>\r\n	2	\N	2017-05-29 06:22:25.705979	2017-05-29 06:22:25.705979	3	12	assessment	\N	\N	\N	{}
64	<p>What does rake db:migrate command do?</p>\r\n	2	\N	2017-05-30 03:58:52.677965	2017-05-30 03:58:52.677965	3	11	assessment	\N	\N	\N	{}
65	<p>Metion 2 methods for Create, Read, Update &amp; Destroy along with its working.&nbsp;</p>\r\n	2	\N	2017-05-30 04:00:16.827049	2017-05-30 04:00:16.827049	3	11	assessment	\N	\N	\N	{}
66	<p>Make a list of the 7 actions defined inside a controller. Explain its uses.&nbsp;</p>\r\n	2	\N	2017-05-30 04:01:52.729839	2017-05-30 04:01:52.729839	3	13	assessment	\N	\N	\N	{}
67	<p>List the HTTP methods. How does it correspond to CRUD?</p>\r\n	2	\N	2017-05-30 04:17:32.473877	2017-05-30 04:17:32.473877	3	13	assessment	\N	\N	\N	{}
41	<p>Write a function that takes in a string of one or more words, and returns the same string, but with all five or more letter words reversed (Just like the name of this Kata). Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.</p>\r\n\r\n<p>Examples:</p>\r\n\r\n<p>spinWords( &quot;Hey fellow warriors&quot; ) =&gt; returns &quot;Hey wollef sroirraw&quot;<br />\r\n&nbsp;<br />\r\n&nbsp;</p>\r\n	2	\N	2017-05-05 05:49:48.552372	2017-07-20 17:50:22.390854	1	2	assignment	DCT-2EMT-STR-0002	Stop gninnipS My sdroW!	easy-medium	{2,5,1,3,4}
54	<p>Create a program that generates a secure password. Prompt the user for the minimum length<br />\r\nthe number of special characters, and the number of numbers. Then generate a password for the user using those inputs. Provide multiple options for the user to choose.</p>\r\n\r\n<p>&nbsp;</p>\r\n	2	\N	2017-05-19 05:56:25.049194	2017-07-20 17:50:22.466825	1	2	assignment	DCT-2MT-STR-0002	Password Generator	medium	{2,1,5,3,4}
55	<p>Create a Person class with a greet method that returns the first and last name of the person with a greeting. For example if the first name is &#39;Bob&#39; and the last name is &#39;Smith&#39; then it should return &#39;Hello, Bob Smith!&#39;.</p>\r\n	2	\N	2017-05-19 17:50:48.106852	2017-07-20 17:50:22.644023	1	7	assignment	DCT-2ET-C&O-0001	Greetings with First Name AND Last Name	easy	{2,1,3,4,5}
32	<p>You are going to be given an array of integers. Your job is to take that array and find an index N where the sum of the integers to the left of N is equal to the sum of the integers to the right of N. If there is no index that would make this happen, return -1.<br />\r\nFor example:<br />\r\n<br />\r\nLet&#39;s say you are given the array [1,2,3,4,3,2,1]:<br />\r\nYour function will return the index 3, because at the 3rd position of the array, the sum of left side of the index ([1,2,3]) and the sum of the right side of the index ([3,2,1]) both equal 6.</p>\r\n	2	\N	2017-05-02 06:10:05.033736	2017-07-20 17:50:22.311021	1	4	assignment	DCT-2MHT-ARR-0001	Find the right index	medium-hard	{3,2,5,1,4}
39	<p>Write function scramble(str1,str2) that returns true if a portion of str1 characters can be rearranged to match str2, otherwise returns false.</p>\r\n\r\n<p>For example:<br />\r\nstr1 is &#39;rkqodlw&#39; and str2 is &#39;world&#39; the output should return true.<br />\r\nstr1 is &#39;katas&#39; and str2 is &#39;steak&#39; should return false.<br />\r\nstr1 is &lsquo;rkodfr&rsquo; and str2 is &lsquo;food&rsquo; should return false<br />\r\n&nbsp;</p>\r\n	2	\N	2017-05-05 05:48:55.245273	2017-07-20 17:50:22.557013	1	5	assignment	DCT-2HT-HSH-0001	Scramblies	hard	{2,1,3,4,5}
61	<ol>\r\n\t<li>Create a new rails application called as blog</li>\r\n\t<li>Create 2 models\r\n\t<ol>\r\n\t\t<li>Category with attributes like name</li>\r\n\t\t<li>Article with attributes like title body category_id publish_date</li>\r\n\t</ol>\r\n\t</li>\r\n\t<li>From inside the console create 2 category records</li>\r\n\t<li>From inside the console create 5 article records</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n	2	\N	2017-05-26 12:18:33.908882	2017-06-16 05:52:31.656125	3	11	assignment	DCT-2MT-MDL-0001		medium	{}
53	<p>An airline has a &ldquo;ticket&rdquo; model where every ticket has a booking number<br />\r\nwhich is of the form XYZ A2C. The first 3 characters need to be<br />\r\nalphabets(upcase only) and the last 3 can be alphabets (upcase only) or<br />\r\nnumbers.</p>\r\n\r\n<p><br />\r\nAdditional conditions :<br />\r\n&bull; All tickets where the journey date is more than 2 years old can be reissued.<br />\r\n&bull; All the booking numbers of tickets that have been cancelled, can be used 3 months<br />\r\nafter the cancelled date.<br />\r\n&bull; No booking reference can start with EKA. For example, EKAXY9 cannot be valid.<br />\r\nHoweverAEKA23 will be valid.<br />\r\n&bull; No booking reference can have any of the 5 user defined words. SELFIE, BARNEY,<br />\r\nRACHEL, MONICA,ETIHAD, AMAZON</p>\r\n\r\n<p><br />\r\nCreate a program where such booking numbers are generated randomly as soon as a<br />\r\nticket is booked. They cannot be sequential. They can never be repeated. Program<br />\r\nshould show<br />\r\n&bull; Booking Reference of this ticket.<br />\r\n&bull; The number of tickets already issued.<br />\r\n&bull; The number of tickets that can be issued.</p>\r\n	2	\N	2017-05-15 11:18:05.555147	2017-06-16 05:31:06.589759	1	7	assignment	DCT-2HT-C&O-0001		hard	{}
82	<p>Ask a small girl - &quot;How old are you?&quot;. She always says strange things... Lets help her!</p>\r\n\r\n<p>For correct answer program should return int from 0 to 9.</p>\r\n\r\n<p>Assume test input string always valid and may look like &quot;1 year old&quot; or &quot;5 years old&quot;, etc.. The first char is number only.</p>\r\n\r\n<p>BUGS</p>\r\n\r\n<p>INTEGERS</p>\r\n\r\n<p>NUMBERS</p>\r\n\r\n<p>CHARS</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-21 11:47:17.684577	2017-07-20 17:50:23.144409	1	3	assignment	DCT-2ET-NUM-0001	Parse nice int from char problem	easy	{2,1,3,4,5}
58	<p>Create a class to specify data on students given below:</p>\r\n\r\n<p>Roll number, name, department, course, year of joining, assume that there are not more than 100 students in the college</p>\r\n\r\n<ol>\r\n\t<li>Write a method to print names of all students who joined in a particular year</li>\r\n\t<li>Write a method to print the data of a student whose roll number is given</li>\r\n</ol>\r\n	2	\N	2017-05-19 17:53:46.881151	2017-07-20 17:50:23.222317	1	7	assignment	DCT-2MT-C&O-0003	Student Management	medium	{2,1,3,4,5}
75	<p><strong>Given an array - [9,2,7,5,6,8,1]</strong></p>\r\n\r\n<p>Sort the odd numbers retaining the position of the even numbers&nbsp;</p>\r\n\r\n<p>Ex&nbsp;</p>\r\n\r\n<p><strong>output - [1,2,5,7,6,8,9]</strong></p>\r\n	2	\N	2017-06-12 13:40:00.957378	2017-07-20 17:50:23.310639	1	4	assignment	DCT-2MT-ARR-0001	Sort odd	medium	{2,1,3,4,5}
59	<p>Write a function, <code>persistence</code>, that takes in a positive parameter <code>num</code> and returns its multiplicative persistence, which is the number of times you must multiply the digits in <code>num</code> until you reach a single digit.</p>\r\n\r\n<p>For example:</p>\r\n\r\n<pre>\r\n<code> persistence(39) === 4 // because 3*9 = 27, 2*7 = 14, 1*4=4\r\n                       // and 4 has only one digit\r\n\r\n persistence(999) === 2 // because 9*9*9 = 729, 7*2*9 = 126,\r\n                        // 1*2*6 = 12, and finally 1*2 = 2\r\n\r\n persistence(4) === 0 // because 4 is already a one-digit number</code></pre>\r\n	2	\N	2017-05-19 17:56:50.500857	2017-07-20 17:50:22.855307	1	3	assignment	DCT-2MHT-NUM-0001	Persistent Bugger	medium-hard	{2,1,3,4,5}
76	<p>Given an array, find the int that appears an odd number of times.</p>\r\n\r\n<p>There will always be only one integer that appears an odd number of times.</p>\r\n\r\n<p><strong>numbers = [2,5,4,5,2,1,3,5]</strong></p>\r\n	2	\N	2017-06-14 10:44:28.394871	2017-07-20 17:50:22.945157	1	5	assignment	DCT-2EMT-HSH-0001	Find the odd int	easy-medium	{2,1,3,4,5}
77	<p>Write simple .camelcase method (<code>camel_case</code> function in Ruby) for strings. All words must have their first letter capitalized without spaces.</p>\r\n\r\n<p>For instance:</p>\r\n\r\n<pre>\r\n<code>&quot;hello case&quot;.camelCase() =&gt; HelloCase\r\n&quot;camel case word&quot;.camelCase() =&gt; CamelCaseWord\r\n</code></pre>\r\n	2	\N	2017-06-14 10:49:10.200045	2017-07-20 17:50:23.067698	1	2	assignment	DCT-2MT-STR-0001	CamelCase Method	medium	{2,1,3,4,5}
80	<p>Your start-up&#39;s BA has told marketing that your website has a large audience in Scandinavia and surrounding countries. Marketing thinks it would be great to welcome visitors to the site in their own language. Luckily you already use an API that detects the user&#39;s location, so this is an easy win.</p>\r\n\r\n<h3>The task</h3>\r\n\r\n<ul>\r\n\t<li>Think of a way to store the languages as a database (eg an object). The languages are listed below so you can copy and paste!</li>\r\n\t<li>Write a &#39;welcome&#39; function that takes a parameter &#39;language&#39; (always a string), and returns a greeting - if you have it in your database. It should default to English if the language is not in the database, or in the event of an invalid input.</li>\r\n</ul>\r\n\r\n<h3>The database</h3>\r\n\r\n<pre>\r\n<code>&#39;english&#39;=&gt;&#39;Welcome&#39;,\r\n&#39;czech&#39;=&gt;&#39;Vitejte&#39;,\r\n&#39;danish&#39;=&gt;&#39;Velkomst&#39;,\r\n&#39;dutch&#39;=&gt;&#39;Welkom&#39;,\r\n&#39;estonian&#39;=&gt;&#39;Tere tulemast&#39;,\r\n&#39;finnish&#39;=&gt;&#39;Tervetuloa&#39;,\r\n&#39;flemish&#39;=&gt;&#39;Welgekomen&#39;,\r\n&#39;french&#39;=&gt;&#39;Bienvenue&#39;,\r\n&#39;german&#39;=&gt;&#39;Willkommen&#39;,\r\n&#39;irish&#39;=&gt;&#39;Failte&#39;,\r\n&#39;italian&#39;=&gt;&#39;Benvenuto&#39;,\r\n&#39;latvian&#39;=&gt;&#39;Gaidits&#39;,\r\n&#39;lithuanian&#39;=&gt;&#39;Laukiamas&#39;,\r\n&#39;polish&#39;=&gt;&#39;Witamy&#39;,\r\n&#39;spanish&#39;=&gt;&#39;Bienvenido&#39;,\r\n&#39;swedish&#39;=&gt;&#39;Valkommen&#39;,\r\n&#39;welsh&#39;=&gt;&#39;Croeso&#39;\r\n</code></pre>\r\n\r\n<p>Possible invalid inputs include:</p>\r\n\r\n<pre>\r\n<code>IP_ADDRESS_INVALID - not a valid ipv4 or ipv6 ip address\r\nIP_ADDRESS_NOT_FOUND - ip address not in the database\r\nIP_ADDRESS_REQUIRED - no ip address was supplied\r\n</code></pre>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>HASHES</p>\r\n\r\n<p>DATA STRUCTURES</p>\r\n\r\n<p>OBJECTS</p>\r\n	2	\N	2017-06-21 10:39:53.582101	2017-07-20 17:50:23.754888	1	5	assignment	DCT-2ET-HSH-0001	Welcome!	easy	{2,5,1,4,3}
102	<p>This is the first step to understanding FizzBuzz.</p>\r\n\r\n<p><strong>Your inputs</strong>: a positive integer, n, greater than or equal to one. n is provided is provided by the user.</p>\r\n\r\n<p><strong>Your expected output</strong>: print all numbers&nbsp; from 1 to n</p>\r\n\r\n<p>Your job is to write an program that gets you from the input to the output.</p>\r\n	2	\N	2017-07-04 16:40:15.044677	2017-07-20 17:50:23.388416	1	3	assignment	DCT-2ET-NUM-0009	Pre-FizzBuzz Workout #1	easy	{2,1,3,4,5}
13	<p>Sheldon, Leonard, Penny, Rajesh and Howard are in the queue for a &quot;Double Cola&quot; drink vending machine; there are no other people in the queue. The first one in the queue (Sheldon) buys a can, drinks it and doubles! The resulting two Sheldons go to the end of the queue. Then the next in the queue (Leonard) buys a can, drinks it and gets to the end of the queue as two Leonards, and so on.</p>\r\n\r\n<p>For example, Penny drinks the third can of cola and the queue will look like this:</p>\r\n\r\n<pre>\r\n<code>Rajesh, Howard, Sheldon, Sheldon, Leonard, Leonard, Penny, Penny</code></pre>\r\n\r\n<p>Write a program that will return the name of a man who will drink the n-th cola.</p>\r\n\r\n<p>Note that in the very beginning the queue looks like that:</p>\r\n\r\n<pre>\r\n<code>Sheldon, Leonard, Penny, Rajesh, Howard\r\n\r\n<strong>TEST RUN</strong>\r\n\r\nnames = [&quot;Sheldon&quot;, &quot;Leonard&quot;, &quot;Penny&quot;, &quot;Rajesh&quot;, &quot;Howard&quot;]\r\nr = 6\r\nres = &quot;Sheldon&quot;</code></pre>\r\n	2	\N	2017-04-24 06:30:17.507198	2017-07-20 17:50:23.477471	1	4	assignment	DCT-2EMT-ARR-0001	Double Cola	easy-medium	{2,1,3,4,5}
85	<p>Write a function called&nbsp;<code>repeatStr</code>&nbsp;which repeats the given string&nbsp;<code>string</code>&nbsp;exactly&nbsp;<code>n</code>&nbsp;times.</p>\r\n\r\n<pre>\r\n<code>repeatStr(6, &quot;I&quot;) // &quot;IIIIII&quot;\r\nrepeatStr(5, &quot;Hello&quot;) // &quot;HelloHelloHelloHelloHello&quot;\r\n</code></pre>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-21 11:59:55.655639	2017-07-20 17:50:23.568327	1	2	assignment	DCT-2ET-STR-0002	String repeat	easy	{1,4,2,3,5}
79	<p>Given a string, write a function that returns the string with a question mark (&quot;?&quot;) appends to the end, unless the original string ends with a question mark, in which case, returns the original string.</p>\r\n\r\n<pre>\r\n<code>ensure_question(&quot;Yes&quot;) # =&gt; &quot;Yes?&quot; \r\nensure_question(&quot;No?&quot;) # =&gt; &quot;No?&quot;</code></pre>\r\n	2	\N	2017-06-21 10:35:33.884262	2017-07-20 17:50:23.677421	1	2	assignment	DCT-2ET-STR-0001	Ensure question	easy	{2,1,4,3,5}
91	<p>Define&nbsp;<code>to_alternating_case(char*)</code>&nbsp;such that each lowercase letter becomes uppercase and each uppercase letter becomes lowercase. For example:</p>\r\n\r\n<pre>\r\n<code>char source[] = &quot;hello world&quot;;\r\nchar *upperCase = to_alternating_case(source);\r\n(void)puts(upperCase); // outputs: HELLO WORLD\r\n</code></pre>\r\n\r\n<pre>\r\n<code>char source[] = &quot;HELLO WORLD&quot;;\r\nchar *upperCase = to_alternating_case(source);\r\n(void)puts(upperCase); // outputs: hello world\r\n</code></pre>\r\n\r\n<pre>\r\n<code>char source[] = &quot;HeLLo WoRLD&quot;;\r\nchar *upperCase = to_alternating_case(source);\r\n(void)puts(upperCase); // outputs: hEllO wOrld\r\n</code></pre>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-22 07:54:33.487296	2017-07-20 17:50:23.94375	1	2	assignment	DCT-2ET-STR-0003	altERnaTIng cAsE <=> ALTerNAtiNG CaSe	easy	{2,5,4,3,1}
88	<p>You&#39;re at the zoo... all the meerkats look weird. Something has gone terribly wrong - someone has gone and switched their heads and tails around!</p>\r\n\r\n<p>Save the animals by switching them back. You will be given an array which will have three values (tail, body, head). It is your job to re-arrange the array so that the animal is the right way round (head, body, tail).</p>\r\n\r\n<p>Same goes for all the other arrays/lists that you will get in the tests: you have to change the element positions with the same exact logics - simples!</p>\r\n\r\n<p>ALGORITHMS</p>\r\n\r\n<p>ARRAYS</p>\r\n\r\n<p>LISTS</p>\r\n\r\n<p>DATA STRUCTURES</p>\r\n	2	\N	2017-06-22 07:46:03.533863	2017-07-20 17:50:24.27873	1	4	assignment	DCT-2ET-ARR-0006	My head is at the wrong end!	easy	{2,5,3,1,4}
92	<p>Complete the squareSum method so that it squares each number passed into it and then sums the results together.</p>\r\n\r\n<p>For example:</p>\r\n\r\n<pre>\r\n<code>squareSum([1, 2, 2]) # should return 9\r\n</code></pre>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>ARITHMETIC</p>\r\n\r\n<p>MATHEMATICS</p>\r\n\r\n<p>ALGORITHMS</p>\r\n\r\n<p>NUMBERS</p>\r\n\r\n<p>ARRAYS</p>\r\n\r\n<p>LISTS</p>\r\n\r\n<p>DATA STRUCTURES</p>\r\n	2	\N	2017-06-22 07:55:58.978457	2017-07-20 17:50:24.021315	1	4	assignment	DCT-2ET-ARR-0007	Square(n) Sum	easy	{2,4,3,1,5}
84	<p>In this simple exercise, you will build a program that takes a value,&nbsp;<code>integer</code>, and returns a list of its multiples up to another value,&nbsp;<code>limit</code>. If&nbsp;<code>limit</code>&nbsp;is a multiple of&nbsp;<code>integer</code>, it should be included as well. There will only ever be positive integers passed into the function, not consisting of 0. The limit will always be higher than the base.</p>\r\n\r\n<p>For example, if the parameters passed are&nbsp;<code>(2, 6)</code>, the function should return&nbsp;<code>[2, 4, 6]</code>&nbsp;as 2, 4, and 6 are the multiples of 2 up to 6.</p>\r\n\r\n<p>If you can, try writing it in only one line of code.</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-21 11:58:00.484522	2017-07-20 17:50:24.098966	1	1	assignment	DCT-2ET-ITR-0001	Find Multiples of a Number	easy	{2,3,1,5,4}
87	<p>Given a set of numbers, return the additive inverse of each. Each positive becomes negatives, and the negatives become positives.</p>\r\n\r\n<p>Python/JS/PHP/Java:</p>\r\n\r\n<pre>\r\n<code>invert([1,2,3,4,5]) == [-1,-2,-3,-4,-5]\r\ninvert([1,-2,3,-4,5]) == [-1,2,-3,4,-5]\r\ninvert([]) == []\r\n</code></pre>\r\n\r\n<p>You can assume that all values are integers (and for C/C++: that all values are greater than&nbsp;<code>INT_MIN</code>).</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>INTEGERS</p>\r\n\r\n<p>NUMBERS</p>\r\n\r\n<p>LISTS</p>\r\n\r\n<p>DATA STRUCTURES</p>\r\n	2	\N	2017-06-22 07:44:11.497152	2017-07-20 17:50:24.188659	1	3	assignment	DCT-2ET-NUM-0003	Invert values	easy	{2,1,5,4,3}
89	<p>Imagine you are creating a game where the user has to guess the correct number. But there is a limit of how many guesses the user can do.</p>\r\n\r\n<ul>\r\n\t<li>If the user tries to guess more than the limit the function show throw an error</li>\r\n\t<li>If the user guess wrong it should lose a life and return false (if you guess correctly you shouldn&#39;t remove a life)</li>\r\n\t<li>If the user guess right it should return true</li>\r\n</ul>\r\n\r\n<p>Can you finish the game so all the rules are met?</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>CLASSES</p>\r\n\r\n<p>BASIC LANGUAGE FEATURES</p>\r\n\r\n<p>OBJECT-ORIENTED PROGRAMMING</p>\r\n\r\n<p>ES2015</p>\r\n\r\n<p>BABEL</p>\r\n	2	\N	2017-06-22 07:50:49.015761	2017-07-20 17:50:23.855131	1	7	assignment	DCT-2ET-C&O-0002	Finish Guess the Number Game	easy	{2,1,5,4,3}
97	<p>Simple, remove the spaces from the string, then return the resultant string.</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>STRINGS</p>\r\n\r\n<p>ARRAYS</p>\r\n	2	\N	2017-06-22 09:01:30.335846	2017-07-20 17:50:24.555176	1	2	assignment	DCT-2ET-STR-0005	Remove String Spaces	easy	{2,1,3,4,5}
98	<p>Create a method&nbsp;<strong>all</strong>&nbsp;which takes an array and a predicate (function pointer), and returns&nbsp;<strong>true</strong>&nbsp;if the predicate returns true for every element in the array. Otherwise, it should return false. If the array is empty, it should return true, since technically nothing failed the test.</p>\r\n\r\n<p>Here&#39;s a (Ruby) resource if you get stuck:&nbsp;<a href="http://www.rubycuts.com/enum-all" target="_blank">http://www.rubycuts.com/enum-all</a></p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>ARRAYS</p>\r\n	2	\N	2017-06-22 09:03:26.866224	2017-07-20 17:50:24.821709	1	4	assignment	DCT-2ET-ARR-0008	Enumerable Magic #1 - True for All?	easy	{1,3,2,5,4}
99	<p>This series of katas will introduce you to basics of doing geometry with computers.</p>\r\n\r\n<p><code>Point</code>&nbsp;objects have&nbsp;<code>x</code>&nbsp;and&nbsp;<code>y</code>&nbsp;attributes.</p>\r\n\r\n<p>Write a function calculating distance between&nbsp;<code>Point a</code>&nbsp;and&nbsp;<code>Point b</code>.</p>\r\n\r\n<p>Tests round answers to 6 decimal places.</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>GEOMETRY</p>\r\n\r\n<p>ALGEBRA</p>\r\n\r\n<p>MATHEMATICS</p>\r\n\r\n<p>ALGORITHMS</p>\r\n	2	\N	2017-06-22 09:07:07.161629	2017-07-20 17:50:24.92137	1	3	assignment	DCT-2ET-NUM-0007	Geometry Basics: Distance between points in 2D	easy	{3,2,1,5,4}
100	<p>This kata is about multiplying a given number by eight if it is an even number and by nine otherwise.</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-22 09:14:16.759649	2017-07-20 17:50:25.009807	1	3	assignment	DCT-2ET-NUM-0008	Simple multiplication	easy	{3,2,5,4,1}
90	<p>Very simple, given a number, find its opposite.</p>\r\n\r\n<p>Examples:</p>\r\n\r\n<pre>\r\n<code>1: -1\r\n14: -14\r\n-34: 34\r\n</code></pre>\r\n\r\n<p>But can you do it in 1 line of code and without any conditionals?</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-22 07:52:56.98276	2017-07-20 17:50:24.365993	1	3	assignment	DCT-2ET-ITR-0003	Opposite number	easy	{2,3,1,5,4}
19	<p>10 numbers are entered from the keyboard into an array. The number to be searched is entered through the keyboard by the user. Write a program to find if the number to be searched is present and if it is present display the number of times it appears in the array&nbsp;&nbsp;</p>\r\n	2	\N	2017-04-25 05:57:54.664867	2017-07-20 17:50:25.199067	1	4	assignment	DCT-2ET-ARR-0001	 Search & Find Number in Array	easy	{2,4,5,1,3}
28	<p>The marketing team are spending way too much time typing in hashtags.<br />\r\nLet&#39;s help them with out own Hashtag Generator!</p>\r\n\r\n<p>Here&#39;s the deal:</p>\r\n\r\n<ul>\r\n\t<li>It must start with a hashtag (#).</li>\r\n\t<li>All words must have their first letter capitalized.</li>\r\n</ul>\r\n\r\n<p>Example Input to Output:</p>\r\n\r\n<p><tt><code><strong>&quot;Ruby Programming&quot; =&gt; &quot;#RubyProgramming&quot;</strong></code></tt></p>\r\n\r\n<p><tt><code><strong>&quot;We are on a roll at Dct Academy&quot; =&gt; &quot;#WeAreOnARollAtDctAcademy&quot;</strong></code></tt></p>\r\n\r\n<p>&nbsp;</p>\r\n	2	\N	2017-04-27 03:46:44.432098	2017-07-20 17:50:25.28827	1	2	assignment	DCT-2EMT-STR-0001	The Hashtag Generator	easy-medium	{4,1,2,5,3}
40	<p>Write a program to find count of the most frequent item of an array.<br />\r\nAssume that input is array of integers.<br />\r\nEx.:</p>\r\n\r\n<p>input array: [3, -1, -1, -1, 2, 3, -1, 3, -1, 2, 4, 9, 3]<br />\r\nouptut: 5<br />\r\n&nbsp;</p>\r\n	2	\N	2017-05-05 05:49:22.131284	2017-07-20 17:50:25.388637	1	5	assignment	DCT-2EMT-HSH-0003	Find Count of Most Frequent Item in an Array	easy-medium	{1,5,3,4,2}
30	<p>Colour plays an important role in our lifes. Most of us like this colour better then another. User experience specialists believe that certain colours have certain psychological meanings for us.</p>\r\n\r\n<p>You are given a 2D array, composed of a colour and its &#39;common&#39; association in each array element. The function you will write needs to return the colour as &#39;key&#39; and association as its &#39;value&#39;.</p>\r\n\r\n<p>For example:</p>\r\n\r\n<p>array = [&quot;white&quot;, &quot;goodness&quot;] #returns {&#39;white&#39;=&gt;&#39;goodness&#39;}<br />\r\nGive = [[&ldquo;white&quot;, &quot;goodness&quot;], [&quot;blue&quot;, &quot;tranquility&quot;]])</p>\r\n\r\n<p>Expect Output = [{&#39;white&#39;=&gt;&quot;goodness&quot;},{&#39;blue&#39;=&gt;&quot;tranquility&quot;}]</p>\r\n	2	\N	2017-04-28 06:34:29.920483	2017-07-20 17:50:25.476241	1	5	assignment	DCT-2EMT-HSH-0002	Colour Association	easy-medium	{1,3,5,4,2}
56	<p>An object contains name of cricketer, his age, number of test matches that he has played and the average runs that he has scored in each test match. Create an array of objects to hold records of 10 such cricketers and then write a program to read these records and arrange them in ascending order by average runs. Use sort stand library method</p>\r\n	2	\N	2017-05-19 17:52:05.477104	2017-07-20 17:50:25.565503	1	7	assignment	DCT-2EMT-C&O-0001	Cricketer Average	easy-medium	{3,2,1,4,5}
57	<p>Create a class to specify data of customers in a bank. The data to be stored is: Account Number, Name, Balance. Assume a maximum of 200 customers in the bank</p>\r\n\r\n<ol>\r\n\t<li>Write amethod to print the account number and name of each customer with balance below INR 100</li>\r\n\t<li>If a customer request for withdrawal or deposit, it is given in the form &quot; Acc No, Amount, code (1 for deposit, 0 for withdrawal)</li>\r\n</ol>\r\n\r\n<p>Write a program to give a message, &quot;The abalance is insufficient for the specified withdrawal&quot;</p>\r\n\r\n<p>User Faker to populate Data</p>\r\n	2	\N	2017-05-19 17:52:58.876434	2017-07-20 17:50:25.655431	1	7	assignment	DCT-2MT-C&O-0002	Bank Transaction	medium	{3,1,2,4,5}
29	<h2>&nbsp;</h2>\r\n\r\n<p>1) An array of objects which feature the season, the team and the country of the Champions League winner.</p>\r\n\r\n<p>2) Country (as a string, for example, &#39;Portugal&#39;)</p>\r\n\r\n<p>You should then return the number which represents the number of times a team from a given country has won. Return <code>0</code> if there have been no wins.</p>\r\n\r\n<p>For example if the input array is as follows:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt="" src="http://i.imgur.com/61bIUDY.png" /></p>\r\n\r\n<p><code>countWins(winnerList1, &#39;Spain&#39;)</code> =&gt; should return 2<br />\r\n<code>countWins(winnerList1, &#39;Portugal&#39;)</code> =&gt; should return 1<br />\r\n<code>countWins(winnerList1, &#39;Sportland&#39;)</code> =&gt; should return 0</p>\r\n	2	\N	2017-04-27 04:03:10.080577	2017-07-20 17:50:25.742752	1	5	assignment	DCT-2MT-HSH-0001	 Find how many times did a team from a given country win the Champions League?	medium	{3,2,4,1,5}
104	<p>Given a string &quot;virat virat sachin virat&quot; . You are expected to count the frequency of the words.</p>\r\n\r\n<p>output =</p>\r\n\r\n<p>virat : 3<br />\r\nsachin : 1&nbsp;</p>\r\n\r\n<p>also go ahead and display the hash</p>\r\n\r\n<p>{<br />\r\n&nbsp;:virat =&gt; 3,&nbsp;<br />\r\n:sachin =&gt; 1</p>\r\n\r\n<p>}</p>\r\n	2	\N	2017-07-10 07:36:50.155573	2017-07-20 17:50:25.832571	1	5	assignment	DCT-2ET-HSH-0003	Word Frequency with symbols as a key	easy	{3,4,1,2,5}
105	<p>Given an array of size n and an integer k, return the of count of distinct numbers in all windows of size k.</p>\r\n\r\n<p>Example:</p>\r\n\r\n<pre>\r\nInput:  arr = [1, 2, 1, 3, 4, 2, 3]\r\n            k = 4\r\nOutput:\r\n3\r\n4\r\n4\r\n3\r\n\r\nExplanation:\r\nFirst window is [1, 2, 1, 3], count of distinct numbers is 3\r\nSecond window is [2, 1, 3, 4] count of distinct numbers is 4\r\nThird window is [1, 3, 4, 2] count of distinct numbers is 4\r\nFourth window is [3, 4, 2, 3] count of distinct numbers is 3</pre>\r\n	2	\N	2017-07-20 14:28:30.459214	2017-07-20 17:50:25.110056	1	4	assignment	DCT-2MT-ARR-0003	Count distinct elements in every window of size k	medium	{2,4,3,5,1}
94	<p>Your boss decided to save money by purchasing some cut-rate optical character recognition software for scanning in the text of old novels to your database. At first it seems to capture words okay, but you quickly notice that it throws in a lot of numbers at random places in the text. For example:</p>\r\n\r\n<pre>\r\n<code>string_clean(&#39;! !&#39;) == &#39;! !&#39;\r\nstring_clean(&#39;123456789&#39;) == &#39;&#39;\r\nstring_clean(&#39;This looks5 grea8t!&#39;) == &#39;This looks great!&#39;\r\n</code></pre>\r\n\r\n<p>Your harried co-workers are looking to you for a solution to take this garbled text and remove all of the numbers. Your program will take in a string and clean out all numeric characters, and return a string with spacing and special characters&nbsp;<code>~#$%^&amp;!@*():;&quot;&#39;.,?</code>&nbsp;all intact.</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-22 08:06:21.205638	2017-07-20 17:50:26.109857	1	2	assignment	DCT-2ET-STR-0004	String cleaning	easy	{3,4,1,2,5}
78	<p>Create the function <code>prefill</code> that returns an array of <code>n</code> elements that all have the same value <code>v</code>. See if you can do this <em>without</em> using a loop.</p>\r\n\r\n<p>You have to validate input:</p>\r\n\r\n<ul>\r\n\t<li><code>v</code> can be <em>anything</em> (primitive or otherwise)</li>\r\n\t<li>if <code>v</code> is ommited, fill the array with <code>undefined</code></li>\r\n\t<li>if <code>n</code> is 0, return an empty array</li>\r\n\t<li>if <code>n</code> is anything other than an <strong>integer</strong> or <strong>integer-formatted</strong> string (e.g. <code>&#39;123&#39;</code>) that is <code>&gt;=0</code>, throw a <code>TypeError</code></li>\r\n</ul>\r\n\r\n<p>When throwing a <code>TypeError</code>, the message should be <code>n is invalid</code>, where you replace <code>n</code> for the actual value passed to the function.</p>\r\n\r\n<p>Code Examples</p>\r\n\r\n<pre>\r\n<code>    prefill(3,1) --&gt; [1,1,1]\r\n\r\n    prefill(2,&quot;abc&quot;) --&gt; [&#39;abc&#39;,&#39;abc&#39;]\r\n\r\n    prefill(&quot;1&quot;, 1) --&gt; [1]\r\n\r\n    prefill(3, prefill(2,&#39;2d&#39;))\r\n      --&gt; [[&#39;2d&#39;,&#39;2d&#39;],[&#39;2d&#39;,&#39;2d&#39;],[&#39;2d&#39;,&#39;2d&#39;]]\r\n\r\n    prefill(&quot;xyz&quot;, 1)\r\n      --&gt; throws TypeError with message &quot;xyz is invalid&quot;</code></pre>\r\n	2	\N	2017-06-19 02:09:53.640468	2017-07-20 17:50:25.922176	1	4	assignment	DCT-2MT-ARR-0002	Prefill an Array	medium	{3,1,2,4,5}
103	<p>Given a hash whose keys are in the type of strings, you will now need to create a new hash where the keys are defined as symbols</p>\r\n\r\n<p>restaurants = {<br />\r\n&nbsp;&nbsp; &nbsp;&quot;adigas&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;location&quot; =&gt; &quot;Jayanagar&quot;,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;type&quot; =&gt; &quot;Quick Bite&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;rating&quot; =&gt; 3.4,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;phone_number&quot; =&gt; &quot;N/A&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;cuisines&quot; =&gt; [&quot;South India&quot;, &quot;Chinese&quot;],<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;cost_for_two&quot; =&gt; 150,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;addresses&quot; =&gt; &quot;Jayanagar 4th Block&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;highlights&quot; =&gt; [&quot;Breakfast&quot;, &quot;Veg&quot;],&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;menu&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;south_indian&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;idly&quot; =&gt; 26,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;vade&quot; =&gt; 24,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;coffee&quot; =&gt; 15,&nbsp;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;masala dosa&quot; =&gt; 43<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}, &quot;Chinese&quot; =&gt; {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;noodles&quot; =&gt; 80,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;soup&quot; =&gt; 40<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n\r\n<p>puts &quot;#{restaurants[&quot;adigas&quot;][&quot;menu&quot;][&quot;south_indian&quot;]}&quot;</p>\r\n	2	\N	2017-07-10 07:35:02.448038	2017-07-20 17:50:26.589439	1	5	assignment	DCT-2ET-HSH-0002	Symbols as keys	easy	{3,2,4,1,5}
60	<p>Clients place orders to a stockbroker as strings. The order can be simple or multiple.</p>\r\n\r\n<p>Type of a simple order: Quote /space/ Quantity /space/ Price /space/ Status</p>\r\n\r\n<p>where Quote is formed of non-whitespace character, Quantity is an int, Price a double (with mandatory decimal point &quot;.&quot; ), Status is represented by the letter B (buy) or the letter S (sell).</p>\r\n\r\n<p>Example:</p>\r\n\r\n<p><code>&quot;GOOG 300 542.0 B&quot;</code></p>\r\n\r\n<p>A multiple order is the concatenation of simple orders with a comma between each.</p>\r\n\r\n<p>Example:</p>\r\n\r\n<p><code>&quot;ZNGA 1300 2.66 B, CLH15.NYM 50 56.32 B, OWW 1000 11.623 B, OGG 20 580.1 B&quot;</code></p>\r\n\r\n<p>or (C)</p>\r\n\r\n<p><code>&quot;ZNGA 1300 2.66 B,CLH15.NYM 50 56.32 B,OWW 1000 11.623 B,OGG 20 580.1 B&quot;</code></p>\r\n\r\n<p>To ease the stockbroker your task is to produce a string of type</p>\r\n\r\n<p><code>&quot;Buy: b Sell: s&quot;</code> where b and s are &#39;double&#39; formatted with no decimal (rounded to integers), b representing the total price of bought stocks and s the total price of sold stocks.</p>\r\n\r\n<p>Example:</p>\r\n\r\n<p><code>&quot;Buy: 294990 Sell: 0&quot;</code></p>\r\n\r\n<p>Unfortunately sometimes clients make mistakes. When you find mistakes in orders, you must pinpoint these badly formed orders and produce a string of type:</p>\r\n\r\n<p><code>&quot;Buy: b Sell: s; Badly formed nb: badly-formed 1st simple order ;badly-formed nth simple order ;&quot;</code></p>\r\n\r\n<p>where nb is the number of badly formed simple orders, b representing the total price of bought stocks with correct simple order and s the total price of sold stocks with correct simple order.</p>\r\n\r\n<p>Examples:</p>\r\n\r\n<p><code>&quot;Buy: 263 Sell: 11802; Badly formed 2: CLH16.NYM 50 56 S ;OWW 1000 11 S ;&quot;</code></p>\r\n\r\n<p><code>&quot;Buy: 100 Sell: 56041; Badly formed 1: ZNGA 1300 2.66 ;&quot;</code></p>\r\n	2	\N	2017-05-19 17:58:19.076501	2017-07-20 17:50:26.309974	1	2	assignment	DCT-2HT-STR-0001	Ease the StockBroker	hard	{3,1,2,4,5}
93	<p>In this simple exercise, you will create a program that will take two lists of integers,&nbsp;<code>a</code>&nbsp;and&nbsp;<code>b</code>. Each list will consist of 3 positive integers above 0, representing the dimensions of cuboids&nbsp;<code>a</code>&nbsp;and&nbsp;<code>b</code>. You much find the difference of the cuboids&#39; volumes regardless of which is bigger.</p>\r\n\r\n<p>For example, if the parameters passed are&nbsp;<code>([2, 2, 3], [5, 4, 1])</code>, the volume of&nbsp;<code>a</code>&nbsp;is 12 and the volume of&nbsp;<code>b</code>&nbsp;is 20. Therefore, the function should return&nbsp;<code>8</code>.</p>\r\n\r\n<p>Your function will be tested with pre-made examples as well as random ones.</p>\r\n\r\n<p><strong>If you can, try writing it in one line of code.</strong></p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n	2	\N	2017-06-22 08:00:44.236873	2017-07-20 17:50:26.398598	1	3	assignment	DCT-2ET-ITR-0004	Difference of Volumes of Cuboids	easy	{3,2,4,1,5}
101	<p>You are provided with an array of Business Names. Using google maps geocoding api you are expected to find the addresses and its latitude &amp; Longitude.</p>\r\n\r\n<p>businesses = [&quot;Dct Academy&quot;, &quot;Star Bucks Indiranagar&quot;, &quot;Bangalore Central JP Nagar&quot;, &quot;Manyata Tech Park&quot;]</p>\r\n\r\n<p>expected output :</p>\r\n\r\n<p>DCT ACADEMY<br />\r\naddress - #430, A 560011, 28th Main Rd, 4th Block, Bengaluru, Karnataka, India<br />\r\nco ordinates - 12.9299899, 77.5853953</p>\r\n\r\n<p>STAR BUCKS INDIRANAGAR<br />\r\naddress - Samrat No.2013, 100 Ft Road, HAL 2nd Stage, Indiranagar, Bengaluru, Karnataka 560008, India<br />\r\nco ordinates - 12.9655455, 77.64178769999999</p>\r\n\r\n<p>Etc.....</p>\r\n\r\n<p>NOTE - API ENDPOINT OF GOOGLE GEOCODER IS</p>\r\n\r\n<p><strong><em>https://maps.googleapis.com/maps/api/geocode/json? </em></strong></p>\r\n\r\n<p>parameter to be passed is <strong><em>address</em></strong></p>\r\n\r\n<p><strong><em>https://maps.googleapis.com/maps/api/geocode/json?address=Adigas Jayanagar </em></strong></p>\r\n	2	\N	2017-06-22 14:42:52.470755	2017-07-20 17:50:26.489949	1	16	assignment	DCT-2MT-API-0001	Find the address of the given businesses	medium	{3,2,4,1,5}
95	<p>Your task is to create a function -&nbsp;<code>basic_op()</code>.</p>\r\n\r\n<p>The function should take three arguments - operation(string/char), value1(number), value2(number). The function should return result of numbers after applying the chosen operation.</p>\r\n\r\n<p><strong>Examples:</strong></p>\r\n\r\n<pre>\r\n<code>basic_op(&#39;+&#39;, 4, 7)         # Output: 11\r\nbasic_op(&#39;-&#39;, 15, 18)       # Output: -3\r\nbasic_op(&#39;*&#39;, 5, 5)         # Output: 25\r\nbasic_op(&#39;/&#39;, 49, 7)        # Output: 7\r\n</code></pre>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>MATHEMATICS</p>\r\n\r\n<p>ALGORITHMS</p>\r\n\r\n<p>NUMBERS</p>\r\n\r\n<p>OPERATORS</p>\r\n	2	\N	2017-06-22 08:54:07.609716	2017-07-20 17:50:24.466351	1	3	assignment	DCT-2ET-NUM-0005	Basic Mathematical Operations	easy	{2,1,3,4,5}
83	<p>For a pole vaulter, it is very important to begin the approach run at the best possible starting mark. This is affected by numerous factors and requires fine-tuning in practice. But there is a guideline that will help a beginning vaulter start at approximately the right location for the so-called &quot;three-step approach,&quot; based on the vaulter&#39;s body height.</p>\r\n\r\n<p>This guideline was taught to me in feet and inches, but due to the international nature of Codewars, I am creating this kata to use metric units instead.</p>\r\n\r\n<p>You are given the following two guidelines to begin with: (1) A vaulter with a height of 1.52 meters should start at 9.45 meters on the runway. (2) A vaulter with a height of 1.83 meters should start at 10.67 meters on the runway.</p>\r\n\r\n<p>You will receive a vaulter&#39;s height in meters (which will always lie in a range between a minimum of 1.22 meters and a maximum of 2.13 meters). Your job is to return the best starting mark in meters, rounded to two decimal places.</p>\r\n\r\n<p>Hint: Based on the two guidelines given above, you will want to account for the change in starting mark per change in body height. This involves a linear relationship.</p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>MATHEMATICS</p>\r\n\r\n<p>ALGORITHMS</p>\r\n\r\n<p>NUMBERS</p>\r\n\r\n<p>PUZZLES</p>\r\n\r\n<p>GAMES</p>\r\n	2	\N	2017-06-21 11:50:47.360633	2017-07-20 17:50:26.010104	1	3	assignment	DCT-2ET-NUM-0002	Pole Vault Starting Marks	easy	{3,2,4,1,5}
81	<p>Your task is to find the first element of an array that is not consecutive.</p>\r\n\r\n<p>E.g. If we have an array&nbsp;<code>[1,2,3,4,6,7,8]</code>&nbsp;then 1 then 2 then 3 then 4 are all consecutive but 6 is not, so that&#39;s the first non consecutive number.</p>\r\n\r\n<p>If the whole array is consecutive then return&nbsp;<code>null</code></p>\r\n\r\n<p>The array will always have at least 2 elements and all the elements will be numbers. The numbers will also all be unique and in ascending order. The numbers could be positive or negative and the first non-consecutive could be either too!</p>\r\n\r\n<p>If you like this Kata, maybe try this one next</p>\r\n\r\n<p><a href="https://www.codewars.com/kata/represent-array-of-numbers-as-ranges" target="_blank">https://www.codewars.com/kata/represent-array-of-numbers-as-ranges</a></p>\r\n\r\n<p>FUNDAMENTALS</p>\r\n\r\n<p>ARRAYS</p>\r\n	2	\N	2017-06-21 11:22:15.45522	2017-07-20 17:50:26.198617	1	4	assignment	DCT-2ET-ARR-0005	Find the first non-consecutive number	easy	{3,1,2,4,5}
96	<p>#Description</p>\r\n\r\n<p>Everybody has probably heard of the animal heads and legs problem from the earlier years at school. It goes:</p>\r\n\r\n<p><code>&ldquo;A farm contains chickens and cows. There are x legs and y heads. How many chickens and cows are there?&rdquo;</code></p>\r\n\r\n<p>Where x &lt;= 1000 and y &lt;=1000</p>\r\n\r\n<p>#Task</p>\r\n\r\n<p>Assuming there are no other types of animals, work out how many of each animal are there.</p>\r\n\r\n<p><code>Return a tuple in Python - (Heads, Legs) and an array list - [Heads, Legs]/{Heads, Legs} in all other languages</code></p>\r\n\r\n<p>If either the heads &amp; legs is negative, the result of your calculation is negative or the calculation is a float return &quot;No solutions&quot; (no valid cases).</p>\r\n\r\n<p>In the form:</p>\r\n\r\n<pre>\r\n<code>[Heads, Legs] = [72, 200]\r\n\r\nVALID - [72, 200] =&gt;             [44 , 28]   \r\n                             [Chickens, Cows]\r\n\r\nINVALID - [72, 201] =&gt; &quot;No solutions&quot;\r\n</code></pre>\r\n\r\n<p>However,&nbsp;<code>if 0 heads and 0 legs are given always return [0, 0]</code>&nbsp;since zero heads must give zero animals.</p>\r\n\r\n<p>There are many different ways to solve this, but they all give the same answer.</p>\r\n\r\n<p>You will only be given integers types - however negative values (edge cases) will be given.</p>\r\n\r\n<p>Happy coding!</p>\r\n\r\n<p>ALGORITHMS</p>\r\n\r\n<p>ALGEBRA</p>\r\n\r\n<p>MATHEMATICS</p>\r\n\r\n<p>NUMBERS</p>\r\n	2	\N	2017-06-22 08:58:55.07306	2017-07-20 17:50:26.809253	1	3	assignment	DCT-2ET-NUM-0006	Heads and Legs	easy	{3,2,4,1,5}
86	<h1>Task</h1>\r\n\r\n<p>Two players -&nbsp;<code>&quot;black&quot;</code>&nbsp;and&nbsp;<code>&quot;white&quot;</code>&nbsp;are playing a game. The game consists of several rounds. If a player wins in a round, he is to move again during the next round. If a player loses a round, it&#39;s the other player who moves on the next round. Given whose turn it was on the previous round and whether he won, determine whose turn it is on the next round.</p>\r\n\r\n<h1>Input/Output</h1>\r\n\r\n<p><code>[input]</code>&nbsp;string&nbsp;<code>lastPlayer</code></p>\r\n\r\n<p><code>&quot;black&quot;</code>&nbsp;or&nbsp;<code>&quot;white&quot;</code>&nbsp;- whose move it was during the previous round.</p>\r\n\r\n<p><code>[input]</code>&nbsp;boolean&nbsp;<code>win</code></p>\r\n\r\n<p><code>true</code>&nbsp;if the player who made a move during the previous round won,&nbsp;<code>false</code>&nbsp;otherwise.</p>\r\n\r\n<p><code>[output]</code>&nbsp;a string</p>\r\n\r\n<p>Return&nbsp;<code>&quot;white&quot;</code>&nbsp;if white is to move on the next round, and&nbsp;<code>&quot;black&quot;</code>&nbsp;otherwise.</p>\r\n\r\n<h1>Example</h1>\r\n\r\n<p>For&nbsp;<code>lastPlayer = &quot;black&quot; and win = false</code>, the output should be&nbsp;<code>&quot;white&quot;</code>.</p>\r\n\r\n<p>For&nbsp;<code>lastPlayer = &quot;white&quot; and win = true</code>, the output should be&nbsp;<code>&quot;white&quot;</code>.</p>\r\n\r\n<p>PUZZLES</p>\r\n\r\n<p>GAMES</p>\r\n	2	\N	2017-06-21 12:03:41.544081	2017-07-20 17:50:26.698477	1	1	assignment	DCT-2ET-ITR-0002	Simple Fun #261: Whose Move	easy	{3,2,4,1,5}
\.


--
-- Name: questions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('questions_id_seq', 105, true);


--
-- Data for Name: remarks; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY remarks (id, title, created_at, updated_at) FROM stdin;
1	Satisfactory	2017-04-30 17:01:56.421228	2017-04-30 17:01:56.421228
\.


--
-- Name: remarks_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('remarks_id_seq', 1, true);


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY schema_migrations (version) FROM stdin;
20170404141237
20170404141524
20170404141646
20170404141754
20170404141822
20170404141849
20170404142002
20170404142302
20170404142611
20170404151749
20170405083001
20170405085440
20170405123653
20170405152007
20170407071208
20170407071559
20170407073357
20170404151337
20170405101242
20170410020556
20170410020721
20170410123138
20170410123609
20170411121724
20170419110122
20170419112028
20170419112510
20170420111441
20170421073036
20170422082450
20170422085205
20170423173600
20170424165149
20170424125801
20170424201536
20170424201537
20170425105048
20170425110153
20170425123744
20170426102707
20170426102954
20170427053414
20170427071230
20170427074148
20170427075106
20170427104056
20170502031318
20170503054217
20170506180758
20170506182923
20170509050405
20170509050539
20170509050606
20170509050724
20170509051439
20170509052305
20170510100911
20170511052944
20170511053925
20170511054135
20170512111020
20170512111342
20170519101325
20170521191106
20170522193130
20170524065040
20170524065326
20170524065516
20170524065653
20170524065907
20170527053810
20170527124136
20170528093736
20170528093841
20170603191340
20170603193004
20170518081945
20170518082625
20170529082245
20170615114638
20170615130718
20170615184103
20170616111653
20170705103409
20170705103803
20170705110115
20170705133230
20170706132548
20170710133839
20170710135309
20170711112735
\.


--
-- Data for Name: solutions; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY solutions (id, body, question_id, topic_id, chapter_id, created_at, updated_at, user_id) FROM stdin;
\.


--
-- Name: solutions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('solutions_id_seq', 1, false);


--
-- Data for Name: students; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY students (id, name, email, mobile, created_at, updated_at, gender, dob, difficulty_level, is_active) FROM stdin;
1	Dhanush	dhanush.11ns@gmail.com	9620666116	2017-04-21 06:06:48.361409	2017-04-21 06:06:48.361409	\N	\N	easy	t
2	Meghal Damania	meghalbulsara22@gmail.com	9662046655	2017-04-21 06:07:31.414446	2017-04-21 06:07:31.414446	\N	\N	easy	t
3	Vinyas	vinyas555@gmail.com	8553831358	2017-04-21 06:08:06.741722	2017-04-21 06:08:06.741722	\N	\N	easy	t
4	Sharan	sharan_info@yahoo.com	9620072881	2017-04-21 06:08:36.931712	2017-04-21 06:08:36.931712	\N	\N	easy	t
5	Adarsh	nowartaken@gmail.com	9066864750	2017-04-21 06:09:05.22872	2017-04-21 06:09:05.22872	\N	\N	easy	t
6	Santhosh B	santhoshb.086@gmail.com	8792262198	2017-04-21 06:09:37.910768	2017-04-21 06:09:37.910768	\N	\N	easy	t
7	Preeti	preeti.acharya@gmail.com	9886704597	2017-04-21 06:10:03.887442	2017-04-21 06:10:03.887442	\N	\N	easy	t
8	Swetha Meti	swetha.meti@gmail.com	9980179759	2017-04-21 06:10:32.629168	2017-04-21 06:10:32.629168	\N	\N	easy	t
9	Sravani Miduthuru	lakshmisravani597@gmail.com	9964866608	2017-04-21 06:10:57.898388	2017-04-21 06:10:57.898388	\N	\N	easy	t
10	Prasad Accenture	prasadnkr@gmail.com	9845462849	2017-04-21 06:11:20.954037	2017-04-21 06:11:20.954037	\N	\N	easy	t
11	Lokhi Kumari	lokhidas0794@gmail.com	8107641610	2017-04-21 06:11:45.026971	2017-04-21 06:11:45.026971	\N	\N	easy	t
12	Shreyas	hello@shreyas.im	8050663637	2017-04-21 06:53:22.765848	2017-04-21 06:53:22.765848	\N	\N	easy	t
14	Karthik Srinivas	kornkarthik@gmail.com	1234567890	2017-04-24 06:18:21.352753	2017-04-24 06:18:21.352753	\N	\N	easy	t
15	Ashish Rao	ashishrao2598@gmail.com	8806011009	2017-04-30 06:28:39.000836	2017-04-30 06:28:39.000836	\N	\N	easy	t
16	Lakshmi Prasanna	prasannareddy0420@gmail.com	8309969126	2017-04-30 06:34:36.857332	2017-04-30 06:34:36.857332	\N	\N	easy	t
17	Shaik Salma Sulthana	shaiksalmasulthanasss@gmail.com	9959753716	2017-05-03 06:16:48.432061	2017-05-03 06:16:48.432061	\N	\N	easy	t
18	Chetan Kumar	chetankumar72.00@gmail.com	9482850458	2017-05-03 06:17:33.597363	2017-05-03 06:17:33.597363	\N	\N	easy	t
19	Deepika	deepu.deepika.pc@gmail.com	8892784545	2017-05-03 06:18:05.911917	2017-05-03 06:18:05.911917	\N	\N	easy	t
20	Vinuta	vinuta.udagatti@gmail.com	9035267195	2017-05-10 05:41:13.994163	2017-05-10 05:41:13.994163	\N	\N	easy	t
21	Prathiksha	prathiksha607@gmail.com		2017-05-10 13:52:28.229107	2017-05-10 13:52:28.229107	\N	\N	easy	t
22	Harshitha	harshum16@gmail.com		2017-05-10 13:53:06.807601	2017-05-10 13:53:06.807601	\N	\N	easy	t
23	Vishnu	vishnu.hari.vinayan@gmail.com		2017-05-10 13:53:32.741598	2017-05-10 13:53:32.741598	\N	\N	easy	t
24	Pavan Kumar	kumarpavan1309@gmail.com		2017-05-10 13:54:07.412738	2017-05-10 13:54:07.412738	\N	\N	easy	t
25	Suraj	surajkashyap0705@gmail.com		2017-05-10 13:54:29.923061	2017-05-10 13:54:29.923061	\N	\N	easy	t
26	Yashwanth	yashwanth.nr@gmail.com		2017-05-10 13:55:06.121087	2017-05-10 13:55:06.121087	\N	\N	easy	t
27	Nisarga	nisarga12.n@gmail.com		2017-05-10 13:55:40.462143	2017-05-10 13:55:40.462143	\N	\N	easy	t
28	Aniket	aniketkalode001@gmail.com		2017-05-10 13:56:38.267383	2017-05-10 13:56:38.267383	\N	\N	easy	t
29	Mayuri	mayuriarun97@gmail.com		2017-05-10 13:57:04.004462	2017-05-10 13:57:04.004462	\N	\N	easy	t
30	Poornima	poornima.muthineni@gmail.com		2017-05-10 13:57:26.827528	2017-05-10 13:57:26.827528	\N	\N	easy	t
31	Bhavya Sree	bhavyasree24@gmail.com		2017-05-10 13:58:04.792551	2017-05-10 13:58:04.792551	\N	\N	easy	t
33	Ajinkya	ajex13@gmail.com		2017-05-12 11:02:14.317749	2017-05-12 11:02:14.317749	\N	\N	easy	t
34	Rahul Pattanshetty	rahulpattanshetty@gmail.com		2017-07-04 10:38:02.490371	2017-07-04 10:38:02.490371	male	2017-07-04	easy	t
35	Aditya Nagar	snagar270@gmail.com		2017-07-04 10:38:40.721435	2017-07-04 10:38:40.721435	male	2017-07-04	easy	t
36	Shivam Khanna	skhanna1011@gmail.com		2017-07-04 10:39:11.4638	2017-07-04 10:39:11.4638	male	2017-07-04	easy	t
37	Harish BN	harishbn31@gmail.com		2017-07-04 10:39:50.570621	2017-07-04 10:39:50.570621	male	2017-07-04	easy	t
38	Sreekanth	sk300994@gmail.com		2017-07-04 10:40:19.642964	2017-07-04 10:40:19.642964	male	2017-07-04	easy	t
39	Sharat Kumar Nagalikar	sharathnagalikar@gmail.com		2017-07-04 10:40:47.182353	2017-07-04 10:40:47.182353	male	2017-07-04	easy	t
40	Nithil Nagaraj	nithiln95@gmail.com		2017-07-04 10:41:06.158614	2017-07-04 10:41:06.158614	male	2017-07-04	easy	t
41	Priyadarshini Punja	priyadarshinipunja@gmail.com		2017-07-04 10:42:19.452539	2017-07-04 10:42:19.452539	female	2017-07-04	easy	t
42	Siddharth	 siddharth.setlur@gmail.com		2017-07-04 12:07:07.369471	2017-07-04 12:07:07.369471	male	2017-07-04	easy	t
43	Teja Kumar	tejalevaku@gmail.com		2017-07-04 12:08:53.282531	2017-07-04 12:08:53.282531	male	2017-07-04	easy	t
44	Rohith	maghamrohith24@gmail.com	7989331900	2017-07-08 12:39:05.607748	2017-07-08 12:39:05.607748	male	1995-10-24	easy	t
45	Siva Mukunda	mukundasiva9@gmail.com 		2017-07-20 14:34:40.538063	2017-07-20 14:34:40.538063	male	2017-07-20	easy	t
46	Shreyas S	shreyas707@gmail.com	123456789	2017-07-20 15:49:42.60089	2017-07-20 15:49:42.60089	male	1995-06-03	easy	t
\.


--
-- Name: students_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('students_id_seq', 46, true);


--
-- Data for Name: tags; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY tags (id, name, question_ids, created_at, updated_at) FROM stdin;
3	tag2	{19,20,21,22,28,40,39,30,32,41,54,55,56,57,58,59,75,76,77,29,81,82,60,13,85,78,79,80,102,83,84,86,87,88,89,91,92,94,90,93,95,96,97,98,99,100,101,103,104,105,68,21,20,22,48,32,41,54,39,55,61,53,59,76,77,82,58,75,102,13,85,79,80,89,91,92,84,87,88,90,95,97,98,99,100,105,19,28,40,30,56,57,29,104,78,83,94,81,60,93,101,103,86,96}	2017-07-20 17:24:36.821138	2017-07-20 17:50:26.843054
4	tag3	{19,20,21,22,28,40,39,30,32,41,54,55,56,57,58,59,75,76,77,29,81,82,60,13,85,78,79,80,102,83,84,86,87,88,89,91,92,94,90,93,95,96,97,98,99,100,101,103,104,105,68,21,20,22,48,32,41,54,39,55,61,53,59,76,77,82,58,75,102,13,85,79,80,89,91,92,84,87,88,90,95,97,98,99,100,105,19,28,40,30,56,57,29,104,78,83,94,81,60,93,101,103,86,96}	2017-07-20 17:24:36.83161	2017-07-20 17:50:26.864657
1	tag0	{19,20,21,22,28,40,39,30,32,41,54,55,56,57,58,59,75,76,77,29,81,82,60,13,85,78,79,80,102,83,84,86,87,88,89,91,92,94,90,93,95,96,97,98,99,100,101,103,104,105,68,21,20,22,48,32,41,54,39,55,61,53,59,76,77,82,58,75,102,13,85,79,80,89,91,92,84,87,88,90,95,97,98,99,100,105,19,28,40,30,56,57,29,104,78,83,94,81,60,93,101,103,86,96}	2017-07-20 17:24:36.789708	2017-07-20 17:50:26.875241
2	tag1	{19,20,21,22,28,40,39,30,32,41,54,55,56,57,58,59,75,76,77,29,81,82,60,13,85,78,79,80,102,83,84,86,87,88,89,91,92,94,90,93,95,96,97,98,99,100,101,103,104,105,68,21,20,22,48,32,41,54,39,55,61,53,59,76,77,82,58,75,102,13,85,79,80,89,91,92,84,87,88,90,95,97,98,99,100,105,19,28,40,30,56,57,29,104,78,83,94,81,60,93,101,103,86,96}	2017-07-20 17:24:36.810463	2017-07-20 17:50:26.853226
5	tag4	{19,20,21,22,28,40,39,30,32,41,54,55,56,57,58,59,75,76,77,29,81,82,60,13,85,78,79,80,102,83,84,86,87,88,89,91,92,94,90,93,95,96,97,98,99,100,101,103,104,105,68,21,20,22,48,32,41,54,39,55,61,53,59,76,77,82,58,75,102,13,85,79,80,89,91,92,84,87,88,90,95,97,98,99,100,105,19,28,40,30,56,57,29,104,78,83,94,81,60,93,101,103,86,96}	2017-07-20 17:24:36.84372	2017-07-20 17:50:26.88637
\.


--
-- Name: tags_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('tags_id_seq', 5, true);


--
-- Data for Name: topics; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY topics (id, name, created_at, updated_at, short_name) FROM stdin;
2	Javascript	2017-05-10 14:14:37.022372	2017-06-14 10:39:38.114127	JS
3	Rails	2017-05-26 12:16:17.988594	2017-06-14 10:39:46.82327	RL
1	Ruby	2017-04-21 06:12:06.998144	2017-06-14 10:39:52.761189	RB
\.


--
-- Name: topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('topics_id_seq', 4, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY users (id, email, encrypted_password, reset_password_token, reset_password_sent_at, remember_created_at, sign_in_count, current_sign_in_at, last_sign_in_at, current_sign_in_ip, last_sign_in_ip, student_id, created_at, updated_at, role, is_active, name, avatar, gender, dob, mobile, difficulty_level) FROM stdin;
12	lokhidas0794@gmail.com	$2a$11$e6rVxLeuEkgk8pz/YnBCueHs0QqNQtIzhS7XCTGlo3Qo8MJhBerLW	\N	\N	\N	60	2017-07-19 04:16:26.26145	2017-07-18 16:13:08.550582	106.51.132.172	111.125.247.226	11	2017-04-21 06:11:45.196054	2017-07-19 04:16:26.263005	student	t	Lokhi Kumari	\N	\N	\N	8107641610	easy
21	vinuta.udagatti@gmail.com	$2a$11$0GEMTZa72aIdHSYBrtWBO.zORFKftIEsB0/cnkzgFhXAF.zGfebhW	\N	\N	\N	16	2017-07-20 09:24:24.909015	2017-07-19 04:27:49.567918	106.51.232.233	157.49.6.67	20	2017-05-10 05:41:14.441729	2017-07-20 09:24:24.911459	admin	t	Vinuta	\N	\N	\N	9035267195	easy
15	kornkarthik@gmail.com	$2a$11$xpbWZ9WS4eSdX.h7Ooejde03CKAOr5v2dPXes8u/FTsBVy7Fkqeka	\N	\N	2017-04-24 06:22:27.729103	3	2017-04-27 05:57:20.588989	2017-04-25 06:01:01.208548	73.140.245.248	73.140.245.248	14	2017-04-24 06:18:21.505613	2017-06-16 18:46:02.081078	student	t	Karthik Srinivas	\N	\N	\N	1234567890	easy
23	harshum16@gmail.com	$2a$11$uCb5pdIK1IzbGcVZkiPbDey1Vhe9U9/bl8.X.5h7e3rJCrwcyFS26	\N	\N	\N	1	2017-05-10 14:29:50.810791	2017-05-10 14:29:50.810791	106.51.232.233	106.51.232.233	22	2017-05-10 13:53:06.985263	2017-06-16 18:46:02.168278	student	t	Harshitha	\N	\N	\N		easy
18	shaiksalmasulthanasss@gmail.com	$2a$11$OiUJaJxLFkgBpu1yR9fzHOdkb00jjX.tCVMEJD2GDpHfoP54EMcZy	\N	\N	\N	8	2017-05-10 06:07:57.073638	2017-05-10 06:07:54.851176	106.51.232.233	106.51.232.233	17	2017-05-03 06:16:48.602602	2017-06-16 18:46:02.110288	student	t	Shaik Salma Sulthana	\N	\N	\N	9959753716	easy
27	yashwanth.nr@gmail.com	$2a$11$5mSV9OY0hAjY7Z5jCkgeReUQhyUlX4YI7LkjnwTRuvWcAErEdt5py	\N	\N	\N	1	2017-05-10 14:30:44.658364	2017-05-10 14:30:44.658364	223.186.63.82	223.186.63.82	26	2017-05-10 13:55:06.302336	2017-06-16 18:46:02.225189	student	t	Yashwanth	\N	\N	\N		easy
16	ashishrao2598@gmail.com	$2a$11$5FShWQttbkBFh4XxvP7UjuN9eWyb2zsxQ8SxWjpneIAnprNr1O4Z2	\N	\N	\N	11	2017-06-22 16:12:16.883791	2017-06-06 06:43:16.220882	180.151.130.8	49.207.52.29	15	2017-04-30 06:28:39.16176	2017-06-22 16:12:16.917966	student	t	Ashish Rao	\N	\N	\N	8806011009	easy
31	poornima.muthineni@gmail.com	$2a$11$QCok8Bmmg.ATJkp7vVcngusm1JACFc/d8VAizY1lJ2gaWOJKS0xQC	\N	\N	\N	0	\N	\N	\N	\N	30	2017-05-10 13:57:27.391274	2017-06-16 18:46:02.286229	student	t	Poornima	\N	\N	\N		easy
4	vinyas555@gmail.com	$2a$11$es7F97HFw5ZZUqgSD8miduHE1B4wyUUgqovUQ68Mta1Hk8r8ICzLi	\N	\N	2017-05-21 03:24:16.389536	35	2017-07-20 14:40:18.268093	2017-07-17 15:29:33.352672	157.49.7.58	157.49.2.252	3	2017-04-21 06:08:06.921598	2017-07-20 14:40:18.27077	student	t	Vinyas	\N	\N	\N	8553831358	easy
11	prasadnkr@gmail.com	$2a$11$1VN9wIdqU1BBc00/YZQKoeJblCkWSuUfcL147/1rayhYqrUQObxs.	\N	\N	\N	13	2017-06-26 04:11:04.601334	2017-06-23 09:40:53.364174	106.51.232.233	106.51.69.65	10	2017-04-21 06:11:21.101551	2017-06-26 04:11:04.603874	student	t	Prasad Accenture	\N	\N	\N	9845462849	easy
17	prasannareddy0420@gmail.com	$2a$11$RtfOQh9XQa26fQeEdr6AOOcp2TsRp96hHIe.Rw0adrmPqN3wyQEEe	\N	\N	\N	43	2017-06-21 03:53:52.30361	2017-06-20 04:02:38.073697	157.48.12.34	157.48.13.56	16	2017-04-30 06:34:37.010078	2017-06-21 03:53:52.305428	student	t	Lakshmi Prasanna	\N	\N	\N	8309969126	easy
5	sharan_info@yahoo.com	$2a$11$2aIgh8A21v4BlY0z1AFrc.hC7j87BSdLe0nE7mb1ER063QsSX11ze	\N	\N	\N	7	2017-07-14 04:59:37.757122	2017-06-19 10:16:40.013072	106.51.232.233	43.224.156.233	4	2017-04-21 06:08:37.096333	2017-07-14 04:59:37.764547	student	t	Sharan	\N	\N	\N	9620072881	easy
9	swetha.meti@gmail.com	$2a$11$N1ta0eqL7uiVW/tiTKye/.uLEdXOOlDtyJ8xIP8bTt/VbjY/Hzjny	\N	\N	2017-04-25 06:01:37.373589	15	2017-07-19 04:22:03.05702	2017-06-23 04:13:53.760283	106.51.232.233	106.51.232.233	8	2017-04-21 06:10:32.779786	2017-07-19 04:22:03.058834	student	t	Swetha Meti	\N	\N	\N	9980179759	easy
3	meghalbulsara22@gmail.com	$2a$11$lW.v2PIQbAyzdy94Q121C.bHb/AvvVjHnp2qfkRbrK.7MWzixw8QC	\N	\N	\N	80	2017-07-20 15:31:21.855089	2017-07-19 04:15:13.523309	106.51.23.92	106.51.232.233	2	2017-04-21 06:07:31.596524	2017-07-20 15:31:21.856873	student	t	Meghal Damania	\N	\N	\N	9662046655	easy
10	lakshmisravani597@gmail.com	$2a$11$60WDxnkvuKy/p0Dx7u.RQe2FHVxxxoFH.j.SJr9sTxxxlG1xz.KGO	\N	\N	\N	66	2017-07-18 06:18:05.289424	2017-07-03 05:28:21.658354	157.48.10.105	157.49.12.35	9	2017-04-21 06:10:58.047893	2017-07-18 06:18:05.291296	student	t	Sravani Miduthuru	\N	\N	\N	9964866608	easy
20	deepu.deepika.pc@gmail.com	$2a$11$DellbTMaajH9Me6.Mmtqc.T8xhlNjVcihX3f1Gk3ERk2g5dshN1BO	\N	\N	\N	68	2017-07-20 14:38:40.908563	2017-07-19 04:18:30.192907	203.192.204.45	106.51.232.233	19	2017-05-03 06:18:06.072356	2017-07-20 14:38:40.910498	student	t	Deepika	\N	\N	\N	8892784545	easy
33	ajex13@gmail.com	$2a$11$cSaXTGaeC1t4n3l1O2lMUOL4OTrLZi4sNJUOtWTyBnahhxKEWPzXe	\N	\N	\N	0	\N	\N	\N	\N	33	2017-05-12 11:02:14.482765	2017-06-16 18:46:02.314847	student	t	Ajinkya	\N	\N	\N		easy
22	prathiksha607@gmail.com	$2a$11$XRkf1VQIiFY0Rl090KjpnewDdf3prMs8K8WXmCtfCD.8SA1i0AOuO	\N	\N	2017-05-11 17:58:53.372763	8	2017-05-21 16:50:18.44064	2017-05-13 05:11:21.812787	157.49.12.54	117.192.204.23	21	2017-05-10 13:52:28.657969	2017-06-16 18:46:02.160701	student	t	Prathiksha	\N	\N	\N		easy
6	nowartaken@gmail.com	$2a$11$buqHPTYusjRZoBX.jDvoP.hdVEaaB.wxCd6WUnHwL1NuAV3uZhf56	\N	\N	\N	15	2017-06-05 07:38:49.361529	2017-06-05 06:34:07.558267	106.51.232.233	106.51.232.233	5	2017-04-21 06:09:05.384921	2017-06-16 18:46:01.952194	student	t	Adarsh	\N	\N	\N	9066864750	easy
2	dhanush.11ns@gmail.com	$2a$11$3GsvZ6SsmmiM/vT01eWituyMbXF4jQXRNtRzhxNRktaQomeDzYFtm	\N	\N	\N	23	2017-07-19 04:25:52.183533	2017-06-23 04:10:46.912047	106.51.234.89	106.51.232.233	1	2017-04-21 06:06:48.52285	2017-07-19 04:25:52.185137	student	t	Dhanush	\N	\N	\N	9620666116	easy
25	kumarpavan1309@gmail.com	$2a$11$n4sF0gTyN7TGZG5nQSO3IudhSyyYT.UnxiY4XvlbPilQokX3jkTJq	\N	\N	2017-05-11 15:44:25.568555	7	2017-05-12 14:41:35.092443	2017-05-12 07:07:49.568898	106.51.232.233	103.5.134.19	24	2017-05-10 13:54:07.61473	2017-06-16 18:46:02.198551	student	t	Pavan Kumar	\N	\N	\N		easy
28	nisarga12.n@gmail.com	$2a$11$LDmkSyDy5CUU2QsEmVmaaOkvhN/ZIgddAXUE1Dsu4PNdGyae7vDqS	\N	\N	\N	1	2017-05-10 14:29:39.661156	2017-05-10 14:29:39.661156	106.51.232.233	106.51.232.233	27	2017-05-10 13:55:40.624158	2017-06-16 18:46:02.241632	student	t	Nisarga	image/upload/v1494426681/tgyruwmn63xbaxdq8swd.jpg	\N	\N		easy
1	ani@dctacademy.com	$2a$11$kveO8k3rxHsviZp86yxIrOTvXSubeaQc1RqR4XErm4q0GphGWE5Ya	\N	\N	\N	61	2017-07-20 15:28:47.119437	2017-07-20 14:26:34.629331	103.5.132.2	49.207.57.132	\N	2017-04-20 14:26:54.961048	2017-07-20 15:28:47.121403	admin	t	Anirudh	image/upload/v1495200531/czko6qxbgfloojmmyvkv.jpg	\N	\N		\N
24	vishnu.hari.vinayan@gmail.com	$2a$11$XSHeQXyqKqFYpXGSXLQJbOgXOJiNHKeB3VLWFOMSpDqzcIt0l7Ule	\N	\N	\N	1	2017-05-10 14:29:46.734553	2017-05-10 14:29:46.734553	106.51.232.233	106.51.232.233	23	2017-05-10 13:53:33.012214	2017-06-16 18:46:02.180557	student	t	Vishnu	\N	\N	\N		easy
29	aniketkalode001@gmail.com	$2a$11$hOc/sQ8jM3bc9FbsjRzFKO3Wwxyp7Pc2e4MGIGE2dj9IyN8u81WRO	\N	\N	\N	0	\N	\N	\N	\N	28	2017-05-10 13:56:38.440165	2017-06-16 18:46:02.261447	student	t	Aniket	\N	\N	\N		easy
26	surajkashyap0705@gmail.com	$2a$11$.j3Zd/Q1PFSwtOgrPPXcXeJ44edSvdjNXQAWu8wLi5.otHl1BISQa	\N	\N	\N	1	2017-05-10 14:36:43.5036	2017-05-10 14:36:43.5036	106.51.232.233	106.51.232.233	25	2017-05-10 13:54:30.249205	2017-06-16 18:46:02.215216	student	t	Suraj	\N	\N	\N		easy
30	mayuriarun97@gmail.com	$2a$11$RGXPcLCEbpz9YpKvtuSpUubkG9RT5NNcC8I0r3aLZmzAFXGR9BY1C	\N	\N	\N	1	2017-05-10 14:29:44.59918	2017-05-10 14:29:44.59918	106.51.232.233	106.51.232.233	29	2017-05-10 13:57:04.230885	2017-06-16 18:46:02.276363	student	t	Mayuri	\N	\N	\N		easy
32	bhavyasree24@gmail.com	$2a$11$1x1vu5Yc7CG3BOSeeO8MOey9WZcXMFZk6H2oRiOf.sJ0nu.lbM4SK	\N	\N	\N	1	2017-05-10 14:33:29.528302	2017-05-10 14:33:29.528302	106.51.232.233	106.51.232.233	31	2017-05-10 13:58:05.037752	2017-06-16 18:46:02.303782	student	t	Bhavya Sree	\N	\N	\N		easy
8	preeti.acharya@gmail.com	$2a$11$SRmX0Eg.9ZGYC/E3rK44OOM9wswvxSKSuPbvf14ZNV6jGtHHHLmEO	\N	\N	\N	11	2017-07-19 04:14:54.388965	2017-07-10 14:21:31.023455	106.51.232.233	122.167.71.45	7	2017-04-21 06:10:04.048641	2017-07-19 04:14:54.391569	student	t	Preeti	\N	\N	\N	9886704597	easy
7	santhoshb.086@gmail.com	$2a$11$xGGVNoSqYtylkB.4j./3KOuIShT3cTpDjrFfmZYcUAVhu078pd5X.	\N	\N	\N	44	2017-07-05 13:08:24.634178	2017-06-25 12:23:21.900681	103.5.134.21	101.222.168.217	6	2017-04-21 06:09:38.222392	2017-07-05 13:08:24.636225	student	t	Santhosh B	\N	\N	\N	8792262198	easy
38	sk300994@gmail.com	$2a$11$5/09KHuL2zsaPAH0bauD/.KP8I5cLg83uP3P7dDFovuDuWhyYjSH2	\N	\N	\N	8	2017-07-06 16:59:13.32995	2017-07-06 09:02:27.822073	27.7.120.63	106.51.232.233	38	2017-07-04 10:40:20.038741	2017-07-20 17:22:55.452683	student	t	Sreekanth	image/upload/v1499672743/hdjnqqfqzzvtd4czhyaw.jpg	male	2017-07-04		easy
13	hello@shreyas.im	$2a$11$YPTQ8o5kRLKdWI2pwY7Z1O/SfQbm20Ggx7HviGxXyNA8P.m6l2Zbm	0f4651f119bcce29319e47f5925846abe3e0d0bcaef79beaa76ea24b8f108667	2017-05-02 11:33:33.552993	\N	30	2017-07-20 19:02:08.540448	2017-07-19 18:04:37.709268	127.0.0.1	103.5.132.2	12	2017-04-21 06:53:22.974279	2017-07-20 19:02:08.541685	student	t	Shreyas	\N	\N	\N	8050663637	easy
19	chetankumar72.00@gmail.com	$2a$11$MGsV5.5jDpvwOIbAT3bMtu8hZxXxG7fnG/dXelx38/tbxfNxLY5qe	\N	\N	\N	12	2017-07-19 04:47:13.716366	2017-06-30 10:20:31.807574	106.51.232.233	106.51.232.233	18	2017-05-03 06:17:33.751476	2017-07-19 04:47:13.718419	student	t	Chetan Kumar	image/upload/v1497613355/gomcs6r33swtwgh5vgdk.jpg	\N	\N	9482850458	easy
42	siddharth.setlur@gmail.com	$2a$11$ins6BZORX4XRK27S6LjeXehKdmXha/bHv2NGToVzS9ZgVjYBdw/0O	\N	\N	\N	12	2017-07-11 09:41:19.38997	2017-07-11 08:14:40.84903	106.51.232.233	106.51.128.163	42	2017-07-04 12:07:07.529316	2017-07-11 09:41:19.3917	student	t	Siddharth	\N	male	2017-07-04		easy
45	mukundasiva9@gmail.com	$2a$11$5sNIuRqEapBSwGWscfV4MedsAkZhJV.vKup4C0wTofwL2C4Qrd0KW	\N	\N	\N	0	\N	\N	\N	\N	45	2017-07-20 14:34:40.690301	2017-07-20 14:34:40.690301	student	t	Siva Mukunda	\N	male	2017-07-20		easy
44	maghamrohith24@gmail.com	$2a$11$Cpt78EvPsMCf72tqp5NJ8Ox6DPYItTYyyVkJPg8JabGJjBeLF0KRq	\N	\N	\N	1	2017-07-08 12:39:43.504477	2017-07-08 12:39:43.504477	106.51.16.29	106.51.16.29	44	2017-07-08 12:39:05.799281	2017-07-08 12:39:43.507184	student	t	Rohith	\N	male	1995-10-24	7989331900	easy
46	shreyas707@gmail.com	$2a$11$St53SIfuOkLhtnRGjQXxH.MLuJlVMWctNkuW1hBbStrQD5Imy6UN2	\N	\N	\N	0	\N	\N	\N	\N	46	2017-07-20 15:49:42.750797	2017-07-20 15:49:42.750797	student	t	Shreyas S	\N	male	1995-06-03	123456789	easy
34	rahulpattanshetty@gmail.com	$2a$11$HOuP9afryxW7FElyBAeCw.LH9A5mHvS7liJcG84HlCdcJZrxGbyW2	\N	\N	\N	8	2017-07-18 07:54:51.274861	2017-07-10 07:40:15.688795	27.7.2.123	106.51.232.233	34	2017-07-04 10:38:02.981151	2017-07-20 17:22:55.395722	student	t	Rahul Pattanshetty	\N	male	2017-07-04		easy
35	snagar270@gmail.com	$2a$11$Io9CkDHP7t1bV231nDCCg.HsLAl2wQEbG2.vSQMhlTlM//Z2w5Rdu	\N	\N	\N	9	2017-07-19 09:56:42.953555	2017-07-10 07:38:51.695257	106.51.232.233	106.51.232.233	35	2017-07-04 10:38:41.185046	2017-07-20 17:22:55.419662	student	t	Aditya Nagar	\N	male	2017-07-04		easy
36	skhanna1011@gmail.com	$2a$11$ih0y/vXgEaSVbPeAw/8B.eStvH6FL49j8z7rlnvtQd81AX/NR4kg6	\N	\N	\N	3	2017-07-11 03:37:39.59534	2017-07-07 11:10:13.463667	103.227.98.42	106.51.232.233	36	2017-07-04 10:39:11.63421	2017-07-20 17:22:55.430655	student	t	Shivam Khanna	image/upload/v1499746696/o8ykr0arvjrvdgs9mxsl.jpg	male	2017-07-04		easy
37	harishbn31@gmail.com	$2a$11$BVjwMYezru9eMValzEhsjOCmTdXN1rsDwoCtTbARKopj7FnsR5RXe	\N	\N	\N	14	2017-07-14 09:55:38.809341	2017-07-12 06:05:18.872165	106.51.232.233	42.109.171.182	37	2017-07-04 10:39:50.793271	2017-07-20 17:22:55.4437	student	t	Harish BN	image/upload/v1499171064/goodioi131tovqfdq9u8.jpg	male	2017-07-04		easy
39	sharathnagalikar@gmail.com	$2a$11$gwlqCKDncDrh3F/mvW/aQ.HlzmjYJ9GADgBMmIgXuPnIh7T0THReC	\N	\N	\N	19	2017-07-18 16:58:07.999116	2017-07-16 13:35:21.344028	103.16.71.216	103.16.71.216	39	2017-07-04 10:40:47.367123	2017-07-20 17:22:55.463785	student	t	Sharat Kumar Nagalikar	\N	male	2017-07-04		easy
40	nithiln95@gmail.com	$2a$11$JK4Qzg4FnXmnnHJpw38kfuBB5P/cYky5LjirZSxfCkMoNM/KD69Tq	\N	\N	\N	22	2017-07-20 15:15:43.050094	2017-07-15 07:58:30.763425	103.6.156.139	157.49.13.154	40	2017-07-04 10:41:06.453609	2017-07-20 17:22:55.475664	student	t	Nithil Nagaraj	\N	male	2017-07-04		easy
41	priyadarshinipunja@gmail.com	$2a$11$vM3hgB29uNGZM0h1zu2VqOL/JMDmw.BFURS6y7bNV34HhASbea36C	\N	\N	\N	2	2017-07-05 18:48:30.115468	2017-07-04 12:12:07.502874	103.62.69.217	106.51.232.233	41	2017-07-04 10:42:19.672491	2017-07-20 17:22:55.485988	student	t	Priyadarshini Punja	\N	female	2017-07-04		easy
43	tejalevaku@gmail.com	$2a$11$R4cRYPvJdz43sYhpPMSvjeFIS0rRtpgr47awGRhoge.7Ym0eb7E1O	\N	\N	\N	22	2017-07-20 16:51:07.898114	2017-07-19 17:37:04.214787	49.207.56.79	49.207.62.187	43	2017-07-04 12:08:53.433035	2017-07-20 17:22:55.50056	student	t	Teja Kumar	\N	male	2017-07-04		easy
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('users_id_seq', 46, true);


--
-- Data for Name: videos; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY videos (id, question_id, youtube_url, created_at, updated_at) FROM stdin;
\.


--
-- Name: videos_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('videos_id_seq', 1, false);


--
-- Data for Name: votes; Type: TABLE DATA; Schema: public; Owner: shreyas
--

COPY votes (id, votable_id, votable_type, voter_id, voter_type, vote_flag, vote_scope, vote_weight, created_at, updated_at) FROM stdin;
1	1	KnowledgeBase	3	User	t	\N	1	2017-06-18 12:19:53.911807	2017-06-18 12:19:53.911807
2	1	KnowledgeBase	5	User	t	\N	1	2017-06-19 10:27:50.094216	2017-06-19 10:27:50.094216
3	2	KnowledgeBase	38	User	t	\N	1	2017-07-05 18:26:17.747484	2017-07-05 18:26:17.747484
\.


--
-- Name: votes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: shreyas
--

SELECT pg_catalog.setval('votes_id_seq', 3, true);


--
-- Name: answers_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY answers
    ADD CONSTRAINT answers_pkey PRIMARY KEY (id);


--
-- Name: batch_events_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_events
    ADD CONSTRAINT batch_events_pkey PRIMARY KEY (id);


--
-- Name: batch_set_chapter_topics_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_set_chapter_topics
    ADD CONSTRAINT batch_set_chapter_topics_pkey PRIMARY KEY (id);


--
-- Name: batch_set_questions_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_set_questions
    ADD CONSTRAINT batch_set_questions_pkey PRIMARY KEY (id);


--
-- Name: batch_sets_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_sets
    ADD CONSTRAINT batch_sets_pkey PRIMARY KEY (id);


--
-- Name: batch_students_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batch_students
    ADD CONSTRAINT batch_students_pkey PRIMARY KEY (id);


--
-- Name: batches_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY batches
    ADD CONSTRAINT batches_pkey PRIMARY KEY (id);


--
-- Name: chapter_topics_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY chapter_topics
    ADD CONSTRAINT chapter_topics_pkey PRIMARY KEY (id);


--
-- Name: chapters_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY chapters
    ADD CONSTRAINT chapters_pkey PRIMARY KEY (id);


--
-- Name: comments_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY comments
    ADD CONSTRAINT comments_pkey PRIMARY KEY (id);


--
-- Name: course_topics_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY course_topics
    ADD CONSTRAINT course_topics_pkey PRIMARY KEY (id);


--
-- Name: courses_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY courses
    ADD CONSTRAINT courses_pkey PRIMARY KEY (id);


--
-- Name: due_date_lists_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY due_date_lists
    ADD CONSTRAINT due_date_lists_pkey PRIMARY KEY (id);


--
-- Name: event_types_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY event_types
    ADD CONSTRAINT event_types_pkey PRIMARY KEY (id);


--
-- Name: events_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY events
    ADD CONSTRAINT events_pkey PRIMARY KEY (id);


--
-- Name: knowledge_bases_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY knowledge_bases
    ADD CONSTRAINT knowledge_bases_pkey PRIMARY KEY (id);


--
-- Name: options_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY options
    ADD CONSTRAINT options_pkey PRIMARY KEY (id);


--
-- Name: question_set_chapter_topics_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY question_set_chapter_topics
    ADD CONSTRAINT question_set_chapter_topics_pkey PRIMARY KEY (id);


--
-- Name: question_sets_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY question_sets
    ADD CONSTRAINT question_sets_pkey PRIMARY KEY (id);


--
-- Name: question_types_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY question_types
    ADD CONSTRAINT question_types_pkey PRIMARY KEY (id);


--
-- Name: questions_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY questions
    ADD CONSTRAINT questions_pkey PRIMARY KEY (id);


--
-- Name: remarks_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY remarks
    ADD CONSTRAINT remarks_pkey PRIMARY KEY (id);


--
-- Name: solutions_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY solutions
    ADD CONSTRAINT solutions_pkey PRIMARY KEY (id);


--
-- Name: students_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY students
    ADD CONSTRAINT students_pkey PRIMARY KEY (id);


--
-- Name: tags_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY tags
    ADD CONSTRAINT tags_pkey PRIMARY KEY (id);


--
-- Name: topics_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY topics
    ADD CONSTRAINT topics_pkey PRIMARY KEY (id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: videos_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY videos
    ADD CONSTRAINT videos_pkey PRIMARY KEY (id);


--
-- Name: votes_pkey; Type: CONSTRAINT; Schema: public; Owner: shreyas
--

ALTER TABLE ONLY votes
    ADD CONSTRAINT votes_pkey PRIMARY KEY (id);


--
-- Name: index_users_on_email; Type: INDEX; Schema: public; Owner: shreyas
--

CREATE UNIQUE INDEX index_users_on_email ON users USING btree (email);


--
-- Name: index_users_on_reset_password_token; Type: INDEX; Schema: public; Owner: shreyas
--

CREATE UNIQUE INDEX index_users_on_reset_password_token ON users USING btree (reset_password_token);


--
-- Name: index_votes_on_votable_id_and_votable_type_and_vote_scope; Type: INDEX; Schema: public; Owner: shreyas
--

CREATE INDEX index_votes_on_votable_id_and_votable_type_and_vote_scope ON votes USING btree (votable_id, votable_type, vote_scope);


--
-- Name: index_votes_on_voter_id_and_voter_type_and_vote_scope; Type: INDEX; Schema: public; Owner: shreyas
--

CREATE INDEX index_votes_on_voter_id_and_voter_type_and_vote_scope ON votes USING btree (voter_id, voter_type, vote_scope);


--
-- Name: unique_schema_migrations; Type: INDEX; Schema: public; Owner: shreyas
--

CREATE UNIQUE INDEX unique_schema_migrations ON schema_migrations USING btree (version);


--
-- PostgreSQL database dump complete
--

